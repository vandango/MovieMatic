<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Toenda.Foundation</name>
    </assembly>
    <members>
        <member name="T:Toenda.Foundation.Mathematics.MathQueryParser">
            <summary>
            Class MathQueryParser
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.MathQueryParser.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.MathQueryParser.#ctor(System.String)">
            <summary>
            Specific Ctor
            </summary>
            <param name="mathQueryToParse">The MathQuery script string.</param>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.MathQueryParser.#ctor(System.String,System.Char[])">
            <summary>
            Specific Ctor
            </summary>
            <param name="mathQueryToParse">The MathQuery script string.</param>
            <param name="mathSymbols">A char array of mathematic symbols to parse.</param>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.MathQueryParser.Parse">
            <summary>
            Parse a MathQuery string
            </summary>
            <returns>A array of all symbols and fragment strings.</returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.MathQueryParser.Parse(System.String)">
            <summary>
            Parse a MathQuery string
            </summary>
            <param name="mathQueryToParse">The MathQuery script string.</param>
            <returns>A array of all symbols and fragment strings.</returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.MathQueryParser.Parse(System.String,System.Char[])">
            <summary>
            Parse a MathQuery string
            </summary>
            <param name="mathQueryToParse">The MathQuery script string.</param>
            <param name="mathSymbols">A char array of mathematic symbols to parse.</param>
            <returns>A array of all symbols and fragment strings.</returns>
        </member>
        <member name="P:Toenda.Foundation.Mathematics.MathQueryParser.MathQueryToParse">
            <summary>
            Get or set the MathQuery string to parse
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Mathematics.MathQueryParser.MathSymbols">
            <summary>
            Get or set the char array of the mathematic symbols.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Drawing.ImageGenerator">
            <summary>
            Class ImageGenerator
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ImageGenerator.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ImageGenerator.TextSize(System.String,System.Drawing.Font,System.Int32@,System.Int32@)">
            <summary>
            Texts the size.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ImageGenerator.GenerateNewResolution(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Generate a new image with a specific resolution
            </summary>
            <param name="image">The image.</param>
            <param name="width">The width.</param>
            <returns>A Image</returns>
            <exception>If image is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ImageGenerator.GenerateNewResolution(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Generates the new resolution.
            </summary>
            <param name="image">The image.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
            <exception>If image is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ImageGenerator.GenerateBitmapWithText(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Generates the bitmap with text.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="foreColor">Color of the fore.</param>
            <param name="backColor">Color of the back.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ImageGenerator.GenerateBitmapWithText(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Generates the bitmap with text.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="foreColor">Color of the fore.</param>
            <param name="backColor">Color of the back.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ImageGenerator.Generate1024Pixel(System.Drawing.Bitmap)">
            <summary>
            Generate a new image with a resolution of 1024 x XXX
            </summary>
            <param name="uploadedImage">The uploaded image.</param>
            <returns>A Image</returns>
            <exception>If image is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ImageGenerator.Generate500Pixel(System.Drawing.Bitmap)">
            <summary>
            Generate a new image with a resolution of 500 x XXX
            </summary>
            <param name="uploadedImage">The image.</param>
            <returns></returns>
            <exception>If uploadedImage is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ImageGenerator.Generate240Pixel(System.Drawing.Bitmap)">
            <summary>
            Generate a new image with a resolution of 240 x XXX
            </summary>
            <param name="uploadedImage">The image.</param>
            <returns></returns>
            <exception>If uploadedImage is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ImageGenerator.Generate100Pixel(System.Drawing.Bitmap)">
            <summary>
            Generate a new image with a resolution of 100 x XXX
            </summary>
            <param name="uploadedImage">The image.</param>
            <returns></returns>
            <exception>If uploadedImage is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ImageGenerator.Generate75x75Pixel(System.Drawing.Bitmap)">
            <summary>
            Generate a new image with a resolution of 75x75 x XXX
            </summary>
            <param name="uploadedImage">The image.</param>
            <returns></returns>
            <exception>If uploadedImage is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ImageGenerator.Generate4to3Format(System.Drawing.Bitmap)">
            <summary>
            Generate a new image with a format of 4:3
            </summary>
            <param name="uploadedImage">The image.</param>
            <returns></returns>
            <exception>If uploadedImage is null.</exception>
        </member>
        <member name="T:Toenda.Foundation.Drawing.ExifReader">
            <summary>
            Class ExifReader
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.#ctor(System.Drawing.Bitmap@)">
            <summary>
            Initializes new instance of this class.
            </summary>
            <param name="Bitmap">Bitmap to read exif information from</param>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.#ctor(System.String)">
            <summary>
            Initializes new instance of this class.
            </summary>
            <param name="FileName">Name of file to be loaded</param>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.GetBitmap">
            <summary>
            Returns copy of bitmap this instance is working on
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.ToString">
            <summary>
            Returns all available data in formatted string form
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.IsPropertyDefined(System.Int32)">
            <summary>
            Checks if current image has specified certain property
            </summary>
            <param name="PID">The PID.</param>
            <returns>
            True if image has specified property, False otherwise.
            </returns>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.GetPropertyInt32(System.Int32,System.Int32)">
            <summary>
            Gets specified Int32 property
            </summary>
            <param name="PID">Property ID</param>
            <param name="DefaultValue">Optional, default 0. Default value returned if property is not present.</param>
            <returns></returns>
            <remarks>Value of property or DefaultValue if property is not present.</remarks>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.GetPropertyInt16(System.Int32,System.Int16)">
            <summary>
            Gets specified Int16 property
            </summary>
            <param name="PID">Property ID</param>
            <param name="DefaultValue">Optional, default 0. Default value returned if property is not present.</param>
            <remarks>Value of property or DefaultValue if property is not present.</remarks>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.GetPropertyString(System.Int32,System.String)">
            <summary>
            Gets specified string property
            </summary>
            <param name="PID">Property ID</param>
            <param name="DefaultValue">Optional, default String.Empty. Default value returned if property is not present.</param>
            <returns></returns>
            <remarks>Value of property or DefaultValue if property is not present.</remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.GetProperty(System.Int32,System.Byte[])">
            <summary>
            Gets specified property in raw form
            </summary>
            <param name="PID">Property ID</param>
            <param name="DefaultValue">Optional, default Nothing. Default value returned if property is not present.</param>
            <returns></returns>
            <remarks>Is recommended to use typed methods (like <see cref="M:Toenda.Foundation.Drawing.ExifReader.GetPropertyString(System.Int32,System.String)"/> etc.) instead, when possible.</remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.GetPropertyRational(System.Int32)">
            <summary>
            Gets specified rational property
            </summary>
            <param name="PID">Property ID</param>
            <returns></returns>
            <remarks>Value of property or 0/1 if not present.</remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.SetPropertyString(System.Int32,System.String)">
            <summary>
            Sets specified string property
            </summary>
            <param name="PID">Property ID</param>
            <param name="Value">Value to be set</param>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.SetPropertyInt16(System.Int32,System.Int16)">
            <summary>
            Sets specified Int16 property
            </summary>
            <param name="PID">Property ID</param>
            <param name="Value">Value to be set</param>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.SetPropertyInt32(System.Int32,System.Int32)">
            <summary>
            Sets specified Int32 property
            </summary>
            <param name="PID">Property ID</param>
            <param name="Value">Value to be set</param>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.SetProperty(System.Int32,System.Byte[],Toenda.Foundation.Drawing.ExifReader.ExifDataTypes)">
            <summary>
            Sets specified propery in raw form
            </summary>
            <param name="PID">Property ID</param>
            <param name="Data">Raw data</param>
            <param name="Type">EXIF data type</param>
            <remarks>Is recommended to use typed methods (like <see cref="M:Toenda.Foundation.Drawing.ExifReader.SetPropertyString(System.Int32,System.String)"/> etc.) instead, when possible.</remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.GetInt32(System.Byte[])">
            <summary>
            Reads Int32 from EXIF bytearray.
            </summary>
            <param name="B">EXIF bytearray to process</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.GetInt16(System.Byte[])">
            <summary>
            Reads Int16 from EXIF bytearray.
            </summary>
            <param name="B">EXIF bytearray to process</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.GetString(System.Byte[])">
            <summary>
            Reads string from EXIF bytearray.
            </summary>
            <param name="B">EXIF bytearray to process</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.GetRational(System.Byte[])">
            <summary>
            Reads rational from EXIF bytearray.
            </summary>
            <param name="B">EXIF bytearray to process</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.System#IDisposable#Dispose">
            <summary>
            Disposes unmanaged resources of this class
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.Encoding">
            <summary>
            Get or set encoding used for string metadata
            </summary>
            <value>Encoding used for string metadata</value>
            <remarks>Default encoding is UTF-8</remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.EquipmentMaker">
            <summary>
            Brand of equipment (EXIF EquipMake)
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.EquipmentModel">
            <summary>
            Model of equipment (EXIF EquipModel)
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.Software">
            <summary>
            Software used for processing (EXIF Software)
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.Orientation">
            <summary>
            Orientation of image (position of row 0, column 0) (EXIF Orientation)
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.DateTimeLastModified">
            <summary>
            Time when image was last modified (EXIF DateTime).
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.DateTimeOriginal">
            <summary>
            Time when image was taken (EXIF DateTimeOriginal).
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.DateTimeDigitized">
            <summary>
            Time when image was digitized (EXIF DateTimeDigitized).
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.Width">
            <summary>
            Image width
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.Height">
            <summary>
            Image height
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.ResolutionX">
            <summary>
            X resolution in dpi (EXIF XResolution/ResolutionUnit)
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.ResolutionY">
            <summary>
            Y resolution in dpi (EXIF YResolution/ResolutionUnit)
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.Title">
            <summary>
            Image title (EXIF ImageTitle)
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.UserComment">
            <summary>
            User comment (EXIF UserComment)
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.Artist">
            <summary>
            Artist name (EXIF Artist)
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.Description">
            <summary>
            Image description (EXIF ImageDescription)
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.Copyright">
            <summary>
            Image copyright (EXIF Copyright)
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.ExposureTime">
            <summary>
            Exposure time in seconds (EXIF ExifExposureTime/ExifShutterSpeed)
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.Aperture">
            <summary>
            Aperture value as F number (EXIF ExifFNumber/ExifApertureValue)
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.ExposureProgram">
            <summary>
            Exposure program used (EXIF ExifExposureProg)
            </summary>
            <value></value>
            <remarks>If not specified, returns Normal (2)</remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.ISO">
            <summary>
            ISO sensitivity
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.SubjectDistance">
            <summary>
            Subject distance in meters (EXIF SubjectDistance)
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.ExposureMeteringMode">
            <summary>
            Exposure method metering mode used (EXIF MeteringMode)
            </summary>
            <value></value>
            <remarks>If not specified, returns Unknown (0)</remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.FocalLength">
            <summary>
            Focal length of lenses in mm (EXIF FocalLength)
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.FlashMode">
            <summary>
            Flash mode (EXIF Flash)
            </summary>
            <value></value>
            <remarks>If not present, value NotFired (0) is returned</remarks>
        </member>
        <member name="P:Toenda.Foundation.Drawing.ExifReader.LightSource">
            <summary>
            Light source / white balance (EXIF LightSource)
            </summary>
            <value></value>
            <remarks>If not specified, returns Unknown (0).</remarks>
        </member>
        <member name="T:Toenda.Foundation.Drawing.ExifReader.TagNames">
            <summary>
            Contains possible values of EXIF tag names (ID)
            </summary>
            <remarks>See GdiPlusImaging.h</remarks>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifIFD">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsIFD">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.NewSubfileType">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.SubfileType">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ImageWidth">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ImageHeight">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.BitsPerSample">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.Compression">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.PhotometricInterp">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThreshHolding">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.CellWidth">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.CellHeight">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.FillOrder">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.DocumentName">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ImageDescription">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.EquipMake">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.EquipModel">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.StripOffsets">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.Orientation">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.SamplesPerPixel">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.RowsPerStrip">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.StripBytesCount">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.MinSampleValue">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.MaxSampleValue">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.XResolution">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.YResolution">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.PlanarConfig">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.PageName">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.XPosition">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.YPosition">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.FreeOffset">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.FreeByteCounts">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GrayResponseUnit">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GrayResponseCurve">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.T4Option">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.T6Option">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ResolutionUnit">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.PageNumber">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.TransferFuncition">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.SoftwareUsed">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.DateTime">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.Artist">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.HostComputer">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.Predictor">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.WhitePoint">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.PrimaryChromaticities">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ColorMap">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.HalftoneHints">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.TileWidth">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.TileLength">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.TileOffset">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.TileByteCounts">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.InkSet">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.InkNames">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.NumberOfInks">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.DotRange">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.TargetPrinter">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExtraSamples">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.SampleFormat">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.SMinSampleValue">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.SMaxSampleValue">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.TransferRange">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.JPEGProc">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.JPEGInterFormat">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.JPEGInterLength">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.JPEGRestartInterval">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.JPEGLosslessPredictors">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.JPEGPointTransforms">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.JPEGQTables">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.JPEGDCTables">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.JPEGACTables">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.YCbCrCoefficients">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.YCbCrSubsampling">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.YCbCrPositioning">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.REFBlackWhite">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ICCProfile">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.Gamma">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ICCProfileDescriptor">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.SRGBRenderingIntent">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ImageTitle">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.Copyright">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ResolutionXUnit">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ResolutionYUnit">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ResolutionXLengthUnit">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ResolutionYLengthUnit">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.PrintFlags">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.PrintFlagsVersion">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.PrintFlagsCrop">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.PrintFlagsBleedWidth">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.PrintFlagsBleedWidthScale">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.HalftoneLPI">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.HalftoneLPIUnit">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.HalftoneDegree">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.HalftoneShape">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.HalftoneMisc">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.HalftoneScreen">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.JPEGQuality">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GridSize">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailFormat">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailWidth">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailHeight">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailColorDepth">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailPlanes">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailRawBytes">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailSize">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailCompressedSize">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ColorTransferFunction">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailData">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailImageWidth">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailImageHeight">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailBitsPerSample">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailCompression">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailPhotometricInterp">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailImageDescription">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailEquipMake">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailEquipModel">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailStripOffsets">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailOrientation">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailSamplesPerPixel">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailRowsPerStrip">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailStripBytesCount">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailResolutionX">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailResolutionY">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailPlanarConfig">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailResolutionUnit">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailTransferFunction">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailSoftwareUsed">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailDateTime">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailArtist">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailWhitePoint">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailPrimaryChromaticities">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailYCbCrCoefficients">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailYCbCrSubsampling">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailYCbCrPositioning">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailRefBlackWhite">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ThumbnailCopyRight">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.LuminanceTable">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ChrominanceTable">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.FrameDelay">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.LoopCount">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.PixelUnit">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.PixelPerUnitX">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.PixelPerUnitY">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.PaletteHistogram">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifExposureTime">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifFNumber">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifExposureProg">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifSpectralSense">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifISOSpeed">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifOECF">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifVer">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifDTOrig">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifDTDigitized">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifCompConfig">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifCompBPP">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifShutterSpeed">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifAperture">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifBrightness">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifExposureBias">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifMaxAperture">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifSubjectDist">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifMeteringMode">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifLightSource">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifFlash">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifFocalLength">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifMakerNote">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifUserComment">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifDTSubsec">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifDTOrigSS">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifDTDigSS">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifFPXVer">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifColorSpace">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifPixXDim">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifPixYDim">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifRelatedWav">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifInterop">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifFlashEnergy">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifSpatialFR">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifFocalXRes">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifFocalYRes">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifFocalResUnit">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifSubjectLoc">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifExposureIndex">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifSensingMethod">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifFileSource">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifSceneType">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.ExifCfaPattern">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsVer">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsLatitudeRef">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsLatitude">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsLongitudeRef">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsLongitude">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsAltitudeRef">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsAltitude">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsGpsTime">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsGpsSatellites">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsGpsStatus">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsGpsMeasureMode">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsGpsDop">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsSpeedRef">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsSpeed">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsTrackRef">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsTrack">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsImgDirRef">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsImgDir">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsMapDatum">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsDestLatRef">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsDestLat">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsDestLongRef">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsDestLong">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsDestBearRef">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsDestBear">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsDestDistRef">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.TagNames.GpsDestDist">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Drawing.ExifReader.Orientations">
            <summary>
            Real position of 0th row and column of picture
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.Orientations.TopLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.Orientations.TopRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.Orientations.BottomRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.Orientations.BottomLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.Orientations.LeftTop">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.Orientations.RightTop">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.Orientations.RightBottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.Orientations.LftBottom">
            <summary>
            
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Drawing.ExifReader.ExposurePrograms">
            <summary>
            Exposure programs
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposurePrograms.Manual">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposurePrograms.Normal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposurePrograms.AperturePriority">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposurePrograms.ShutterPriority">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposurePrograms.Creative">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposurePrograms.Action">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposurePrograms.Portrait">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposurePrograms.Landscape">
            <summary>
            
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Drawing.ExifReader.ExposureMeteringModes">
            <summary>
            Exposure metering modes
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposureMeteringModes.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposureMeteringModes.Average">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposureMeteringModes.CenterWeightedAverage">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposureMeteringModes.Spot">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposureMeteringModes.MultiSpot">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposureMeteringModes.MultiSegment">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposureMeteringModes.Partial">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExposureMeteringModes.Other">
            <summary>
            
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Drawing.ExifReader.FlashModes">
            <summary>
            Flash activity modes
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.FlashModes.NotFired">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.FlashModes.Fired">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.FlashModes.FiredButNoStrobeReturned">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.FlashModes.FiredAndStrobeReturned">
            <summary>
            
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Drawing.ExifReader.LightSources">
            <summary>
            Possible light sources (white balance)
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.LightSources.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.LightSources.Daylight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.LightSources.Fluorescent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.LightSources.Tungsten">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.LightSources.Flash">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.LightSources.StandardLightA">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.LightSources.StandardLightB">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.LightSources.StandardLightC">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.LightSources.D55">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.LightSources.D65">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.LightSources.D75">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.LightSources.Other">
            <summary>
            
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Drawing.ExifReader.ExifDataTypes">
            <summary>
            EXIF data types
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExifDataTypes.UnsignedByte">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExifDataTypes.AsciiString">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExifDataTypes.UnsignedShort">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExifDataTypes.UnsignedLong">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExifDataTypes.UnsignedRational">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExifDataTypes.SignedByte">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExifDataTypes.Undefined">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExifDataTypes.SignedShort">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExifDataTypes.SignedLong">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExifDataTypes.SignedRational">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExifDataTypes.SingleFloat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.ExifDataTypes.DoubleFloat">
            <summary>
            
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Drawing.ExifReader.Rational">
            <summary>
            Represents rational which is type of some Exif properties
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.Rational.Numerator">
            <summary>
            Numerator
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Drawing.ExifReader.Rational.Denominator">
            <summary>
            Denominator
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.Rational.ToString(System.String)">
            <summary>
            Converts rational to string representation
            </summary>
            <param name="Delimiter">Optional, default "/". String to be used as delimiter of components.</param>
            <returns>String representation of the rational.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Drawing.ExifReader.Rational.ToDouble">
            <summary>
            Converts rational to double precision real number
            </summary>
            <returns>The rational as double precision real number.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Toenda.Foundation.PluginBase.PluginType">
            <summary>
            Provides plugin types.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.PluginBase.PluginType.Default">
            <summary>
            The default type.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.PluginBase.PluginType.Print">
            <summary>
            A print plugin.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.PluginBase.PluginType.WindowForm">
            <summary>
            A window form plugin.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.PluginBase.PluginProvider">
            <summary>
            Class PluginProvider
            </summary>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginProvider.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginProvider.LoadAssembly``1(System.String,System.String)">
            <summary>
            Loads a component from type T with type [typeName] from file [fileName].
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fileName"></param>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginProvider.LoadPlugin(System.String,System.String)">
            <summary>
            Load a plugin
            </summary>
            <param name="fileName"></param>
            <param name="typeName">The typename of the class to load</param>
            <exception cref="T:System.ArgumentNullException">If the parameter filename is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginProvider.LoadPrintPlugin(System.String,System.String)">
            <summary>
            Load a print plugin
            </summary>
            <param name="fileName"></param>
            <param name="typeName">The typename of the class to load</param>
            <exception cref="T:System.ArgumentNullException">If the parameter filename is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginProvider.LoadWindowFormPlugin(System.String,System.String)">
            <summary>
            Load a window form plugin
            </summary>
            <param name="fileName"></param>
            <param name="typeName">The typename of the class to load</param>
            <exception cref="T:System.ArgumentNullException">If the parameter filename is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginProvider.Load(System.String)">
            <summary>
            Load a plugin
            </summary>
            <param name="typeName">The typename of the class to load</param>
            <exception cref="T:System.ArgumentNullException">If the parameter filename is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginProvider.LoadPrint(System.String)">
            <summary>
            Load a print plugin
            </summary>
            <param name="typeName">The typename of the class to load</param>
            <exception cref="T:System.ArgumentNullException">If the parameter filename is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginProvider.LoadWindowForm(System.String)">
            <summary>
            Load a window form plugin
            </summary>
            <param name="typeName">The typename of the class to load</param>
            <exception cref="T:System.ArgumentNullException">If the parameter filename is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginProvider.Load``1(System.String)">
            <summary>
            Loads the assembly.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="typeName">The typename.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginProvider.GetPluginInfo(Toenda.Foundation.PluginBase.IPlugin)">
            <summary>
            Get the information about a plugin (independently of the plugin type).
            </summary>
            <param name="plugin"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginProvider.GetPluginInfo(Toenda.Foundation.PluginBase.IPluginPrint)">
            <summary>
            Get the information about a plugin (independently of the plugin type).
            </summary>
            <param name="plugin"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginProvider.GetPluginInfo(Toenda.Foundation.PluginBase.IPluginWindowForm)">
            <summary>
            Get the information about a plugin (independently of the plugin type).
            </summary>
            <param name="plugin"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginProvider.DisplayPluginInfo(System.String)">
            <summary>
            Display the plugin information
            </summary>
            <param name="filename">The filename and path of the plugin</param>
            <exception cref="T:System.ArgumentNullException">If the parameter filename is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginProvider._LoadPlugin(Toenda.Foundation.PluginBase.PluginType,System.String,System.String)">
            <summary>
            Load a plugin
            </summary>
            <param name="type">The type of the plugin</param>
            <param name="filename">The filename and path of the plugin</param>
            <param name="typename">The typename of the class to load</param>
            <exception cref="T:System.ArgumentNullException">If the parameter filename is null.</exception>
        </member>
        <member name="T:Toenda.Foundation.PluginBase.PluginInfo">
            <summary>
            Class PluginProvider
            </summary>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginInfo.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.PluginInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Specific constructor
            </summary>
            <param name="name">The name of the plugin.</param>
            <param name="description">A description about the plugin.</param>
            <param name="author">The author of the plugin.</param>
            <param name="version">The version of the plugin.</param>
        </member>
        <member name="P:Toenda.Foundation.PluginBase.PluginInfo.Name">
            <summary>
            Get or set the name of the plugin.
            </summary>
        </member>
        <member name="P:Toenda.Foundation.PluginBase.PluginInfo.Description">
            <summary>
            Get or set a description about the plugin.
            </summary>
        </member>
        <member name="P:Toenda.Foundation.PluginBase.PluginInfo.Author">
            <summary>
            Get or set the author of the plugin.
            </summary>
        </member>
        <member name="P:Toenda.Foundation.PluginBase.PluginInfo.Version">
            <summary>
            Get or set the version of the plugin.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Messaging.SystemMessage">
            <summary>
            Provides properties for a specific version of a <see cref="T:Toenda.Foundation.Messaging.Message"/>.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Messaging.Message">
            <summary>
            Provides the message object for the <see cref="T:Toenda.Foundation.Messaging.MessageManager"/>. 
            It is also a base for the specific classes <see cref="T:Toenda.Foundation.Messaging.SystemMessage"/> and <see cref="T:Toenda.Foundation.Messaging.EmailMessage"/>.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Messaging.Message.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Messaging.Message"/> class.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Messaging.Message.#ctor(System.Data.IDataRecord)">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Messaging.Message"/> class.
            </summary>
            <param name="record"></param>
        </member>
        <member name="P:Toenda.Foundation.Messaging.Message.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Toenda.Foundation.Messaging.Message.Timestamp">
            <summary>
            Gets or sets the timestamp.
            </summary>
            <value>The timestamp.</value>
        </member>
        <member name="P:Toenda.Foundation.Messaging.Message.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Toenda.Foundation.Messaging.Message.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:Toenda.Foundation.Messaging.Message.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Toenda.Foundation.Messaging.Message.IsRead">
            <summary>
            Gets or sets a value indicating whether this instance is read.
            </summary>
            <value><c>true</c> if this instance is read; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Toenda.Foundation.Messaging.Message.SortBySender">
            <summary>
            Gets or sets a value indicating whether [sort by sender].
            </summary>
            <value><c>true</c> if [sort by sender]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Toenda.Foundation.Messaging.SystemMessage.#ctor(System.Data.IDataRecord)">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Messaging.SystemMessage"/> class.
            </summary>
            <param name="record"></param>
        </member>
        <member name="P:Toenda.Foundation.Messaging.SystemMessage.TicketId">
            <summary>
            Gets or sets the ticket id.
            </summary>
            <value>The ticket id.</value>
        </member>
        <member name="P:Toenda.Foundation.Messaging.SystemMessage.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:Toenda.Foundation.Messaging.SystemMessage.FromUserId">
            <summary>
            Gets or sets from user id.
            </summary>
            <value>From user id.</value>
        </member>
        <member name="P:Toenda.Foundation.Messaging.SystemMessage.FromUserLastName">
            <summary>
            Gets or sets the last name of from user.
            </summary>
            <value>The last name of from user.</value>
        </member>
        <member name="P:Toenda.Foundation.Messaging.SystemMessage.FromUserFirstName">
            <summary>
            Gets or sets the first name of from user.
            </summary>
            <value>The first name of from user.</value>
        </member>
        <member name="P:Toenda.Foundation.Messaging.SystemMessage.FromUserPartnerId">
            <summary>
            Gets or sets from user partner id.
            </summary>
            <value>From user partner id.</value>
        </member>
        <member name="T:Toenda.Foundation.Utility.PhoneNumberList">
            <summary>
            Implements the collection of phonenumbers
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Utility.PhoneNumberList"/>
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.#ctor(System.Collections.Generic.IEnumerable{Toenda.Foundation.Utility.PhoneNumber})">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Utility.PhoneNumberList"/>
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.#ctor(Toenda.Foundation.Utility.PhoneNumberList)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Utility.PhoneNumberList"/>
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.GetEnumerator">
            <summary>
            Get the enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get the enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.Clear">
            <summary>
            Clear all items from the list
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.Add(Toenda.Foundation.Utility.PhoneNumber)">
            <summary>
            Adds a item to the list
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.AddRange(System.Collections.Generic.IEnumerable{Toenda.Foundation.Utility.PhoneNumber})">
            <summary>
            Adds a range of items to the collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.AddRange(Toenda.Foundation.Utility.PhoneNumberList)">
            <summary>
            Adds a range of items to the collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.AsReadOnly">
            <summary>
            Gets the collection as a read-only collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.BinarySearch(Toenda.Foundation.Utility.PhoneNumber)">
            <summary>
            Searches the entire sorted System.Collection.Generic.List for an 
            element using the default comparer and returns the zero-based index of the element
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.GetRange(System.Int32)">
            <summary>
            Get a range of items beginning from the index
            </summary>
            <param name="index">The index.</param>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.GetRange(System.Int32,System.Int32)">
            <summary>
            Get a range of items beginning from the index and maximum item count is count
            </summary>
            <param name="index"></param>
            <param name="count"></param>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.Insert(System.Int32,Toenda.Foundation.Utility.PhoneNumber)">
            <summary>
            Insert a item to the specific index
            </summary>
            <param name="index"></param>
            <param name="item"></param>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{Toenda.Foundation.Utility.PhoneNumber})">
            <summary>
            Insert a range of items to the specific index
            </summary>
            <param name="index"></param>
            <param name="collection"></param>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.InsertRange(System.Int32,Toenda.Foundation.Utility.PhoneNumberList)">
            <summary>
            Insert a range of items to the specific index
            </summary>
            <param name="index"></param>
            <param name="collection"></param>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.CopyTo(Toenda.Foundation.Utility.PhoneNumber[],System.Int32)">
            <summary>
            Copy the list to an array
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.Remove(Toenda.Foundation.Utility.PhoneNumber)">
            <summary>
            Removes an item from the collection
            </summary>
            <param name="item"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Exception"></exception>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.RemoveAll(System.Predicate{Toenda.Foundation.Utility.PhoneNumber})">
            <summary>
            Removes all matching items from the collection
            </summary>
            <param name="match"></param>
            <exception cref="T:System.Exception"></exception>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.RemoveAt(System.Int32)">
            <summary>
            Removes an item an a specific index from the collection
            </summary>
            <param name="index"></param>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.RemoveRange(System.Int32)">
            <summary>
            Removes a range of items from the collection beginning at the index and counting to the end
            </summary>
            <param name="index"></param>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of items from the collection beginning at the index and counting to the parameter count
            </summary>
            <param name="index"></param>
            <param name="count"></param>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.RemoveRange(System.Collections.Generic.IEnumerable{Toenda.Foundation.Utility.PhoneNumber})">
            <summary>
            Removes a range of items from the collection
            </summary>
            <param name="collection"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.RemoveRange(Toenda.Foundation.Utility.PhoneNumberList)">
            <summary>
            Removes a range of items from the collection
            </summary>
            <param name="collection"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.IndexOf(Toenda.Foundation.Utility.PhoneNumber)">
            <summary>
            Get sthe index of a item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.Contains(Toenda.Foundation.Utility.PhoneNumber)">
            <summary>
            Checks if the collection containing the item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.Exists(System.Predicate{Toenda.Foundation.Utility.PhoneNumber})">
            <summary>
            Checks if the item exist in the collection
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.Find(System.Predicate{Toenda.Foundation.Utility.PhoneNumber})">
            <summary>
            Finds an item that match
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.FindAll(System.Predicate{Toenda.Foundation.Utility.PhoneNumber})">
            <summary>
            Find items that match
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberList.ToArray">
            <summary>
            Convert the collection to a array
            </summary>
            <returns></returns>
        </member>
        <member name="P:Toenda.Foundation.Utility.PhoneNumberList.Item(System.Int32)">
            <summary>
            Gets a items from the list from a specific index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Toenda.Foundation.Utility.PhoneNumberList.Count">
            <summary>
            Get the amount of all items
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Utility.PhoneNumberList.Capacity">
            <summary>
            Gets or sets the total number of elements the internal data structure can hold withour resizing
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Utility.PhoneNumberList.IsReadOnly">
            <summary>
            Gets or sets a value that indicates if the list is readonly
            </summary>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.KeyStartPoint">
            <summary>
            Describes the key start point.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.KeyStartPoint.ClassesRoot">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.KeyStartPoint.CurrentConfig">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.KeyStartPoint.CurrentUser">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.KeyStartPoint.LocalMachine">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.KeyStartPoint.Users">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.KeyStartPoint.PerformanceData">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.KeyStartPoint.DynData">
            <summary>
            {35A90EBF-F421-44A3-BE3A-47C72AFE47FE}
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Globalization.Holiday.HolidayEventType">
            <summary>
            Describes the event types which a date can be
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.Holiday.HolidayEventType.Banking">
            <summary>
            The date is a banking holiday
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.Holiday.HolidayEventType.Currency">
            <summary>
            The date is a currency holiday
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.Holiday.HolidayEventType.Settlement">
            <summary>
            The date is a settlement holiday
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.Holiday.HolidayEventType.Trading">
            <summary>
            The date is a trading holiday
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.EnglandHolidayCalendarFactory">
            <summary>
            Implements the England HolidayCalendar
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Globalization.Holiday.HolidayCalendarFactory">
            <summary>
            Implements base functiuonality for the HolidayCalendar Factory
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Globalization.Holiday.IHolidayCalendarFactory">
            <summary>
            Describes how the Holiday should be implemented
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.IHolidayCalendarFactory.IsHoliday(Toenda.Foundation.Globalization.Holiday.HolidayEventType,System.DateTime)">
            <summary>
            Checks if a date is a holiday
            </summary>
            <param name="eventType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.IHolidayCalendarFactory.IsHoliday(System.DateTime)">
            <summary>
            Checks if a date is a holiday
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.IHolidayCalendarFactory.GetHolidayName(System.DateTime)">
            <summary>
            Get a holiday object for a date
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.IHolidayCalendarFactory.Initialize(Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Initializes the class
            </summary>
            <param name="eventType"></param>
        </member>
        <member name="P:Toenda.Foundation.Globalization.Holiday.IHolidayCalendarFactory.CurrentYear">
            <summary>
            gets or sets the current year
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.Holiday.IHolidayCalendarFactory.EventType">
            <summary>
            Gets or sets the event type
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.Holiday.IHolidayCalendarFactory.VariableHolidays">
            <summary>
            Gets a list of variable holidays
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.Holiday.IHolidayCalendarFactory.FixedHolidays">
            <summary>
            Gets a list of fixed holidays
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalendarFactory.IsHoliday(System.DateTime)">
            <summary>
            Check if a date is a holiday
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalendarFactory.IsHoliday(Toenda.Foundation.Globalization.Holiday.HolidayEventType,System.DateTime)">
            <summary>
            Check if a date is a holiday
            </summary>
            <param name="eventType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalendarFactory.GetHolidayName(System.DateTime)">
            <summary>
            Get the holiday object of a date
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalendarFactory.Initialize(Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Initialize the holidays
            </summary>
            <param name="eventType"></param>
        </member>
        <member name="P:Toenda.Foundation.Globalization.Holiday.HolidayCalendarFactory.EventType">
            <summary>
            Get or set the event type
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.Holiday.HolidayCalendarFactory.CurrentYear">
            <summary>
            Get or set the current date
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.Holiday.HolidayCalendarFactory.Holidays">
            <summary>
            Get or set the holidays
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.Holiday.HolidayCalendarFactory.HolidaysSorted">
            <summary>
            Get the list of holidays sorted
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.Holiday.HolidayCalendarFactory.VariableHolidays">
            <summary>
            Get variable holidays
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.Holiday.HolidayCalendarFactory.FixedHolidays">
            <summary>
            Get fixed holidays
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.EnglandHolidayCalendarFactory.GetInstance(System.Int32,Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Gets the instance fo the specific holiday calendar
            </summary>
            <param name="year"></param>
            <param name="eventType"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.EnglandHolidayCalendarFactory.#ctor(System.Int32,Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.EnglandHolidayCalendarFactory"/> and adds the specific holidays
            </summary>
            <param name="year"></param>
            <param name="eventType"></param>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.EnglandHolidayCalendarFactory.Initialize(Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Initialize the calendar
            </summary>
            <param name="eventType"></param>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.EnglandHolidayCalendarFactory.GetNextHoliday(System.DateTime,Toenda.Foundation.Globalization.Holiday.HolidayMovementType)">
            <summary>
            Get the next day of a holiday, if it can be moved
            </summary>
            <param name="date"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.EnglandHolidayCalendarFactory.GetEasterSunday">
            <summary>
            Get the Easter Sunday
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.EnglandHolidayCalendarFactory.GetEarlyMayBankHoliday">
            <summary>
            Get the Early-May-Bank-Holiday
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.EnglandHolidayCalendarFactory.GetSpringBankHoliday">
            <summary>
            Get the Spring-Bank-Holiday
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.EnglandHolidayCalendarFactory.GetAugustBankHoliday">
            <summary>
            Get the August-Bank-Holiday
            </summary>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Data.ValueType">
            <summary>
            Enum ValueType
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ValueType.Filename">
            <summary>
            A filename
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ValueType.ConnectionString">
            <summary>
            A connection string
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.OpenMode">
            <summary>
            Provides modes to open a XML file.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.OpenMode.ForReading">
            <summary> Open xml file for reading (this.xmlReader) </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.OpenMode.ForWriting">
            <summary> Open xml file for writing (XmlWriter) </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.OpenMode.ForCreating">
            <summary> Create a xml file (XmlWriter) </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.OpenMode.AsDOM">
            <summary> Open a xml document with DOM (XmlWriter) </summary>
        </member>
        <member name="T:Toenda.Foundation.Messaging.IMessagingInfo">
            <summary>
            Provides a interface for the <see cref="T:Toenda.Foundation.Messaging.MessageManager"/>.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Messaging.IMessagingInfo.SendMessage(Toenda.Foundation.Messaging.Message)">
            <summary>
            Sends the message.
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Messaging.IMessagingInfo.GetMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IList{Toenda.Foundation.Messaging.MessageSortParam})">
            <summary>
            Gets the messages.
            </summary>
            <param name="userId">The user id.</param>
            <param name="fromUserId">From user id.</param>
            <param name="sortParams">The sort params.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Messaging.IMessagingInfo.ChangeMessageRead(System.Int64,System.Boolean)">
            <summary>
            Changes the message read state.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="isRead">The is read.</param>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Messaging.IMessagingInfo.DeleteMessage(System.Int64)">
            <summary>
            Deletes the message.
            </summary>
            <param name="messageId">The message id.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Toenda.Foundation.Messaging.IMessagingInfo.GetMessage(System.Int64)">
            <summary>
            Gets the message.
            </summary>
            <param name="messageId">The message id.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Toenda.Foundation.PluginBase.IPluginWindowForm">
            <summary>
            interface IPlugin
            </summary>
        </member>
        <member name="T:Toenda.Foundation.PluginBase.IPlugin">
            <summary>
            interface IPlugin
            </summary>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.IPlugin.ActivatePlugin">
            <summary>
            Activate the plugin
            </summary>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.IPlugin.GetCopy">
            <summary>
            Get a copy of the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.IPlugin.Init">
            <summary>
            Initialize the plugin, do internal work
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.IPlugin.Init(Toenda.Foundation.PluginBase.IPlugin)">
            <summary>
            Initialize the plugin from another plugin
            </summary>
            <param name="plugin"></param>
        </member>
        <member name="P:Toenda.Foundation.PluginBase.IPlugin.PluginName">
            <summary>
            Get the name
            </summary>
        </member>
        <member name="P:Toenda.Foundation.PluginBase.IPlugin.PluginDescription">
            <summary>
            Get the description
            </summary>
        </member>
        <member name="P:Toenda.Foundation.PluginBase.IPlugin.PluginAuthor">
            <summary>
            Get the author
            </summary>
        </member>
        <member name="P:Toenda.Foundation.PluginBase.IPlugin.PluginVersion">
            <summary>
            Get the version
            </summary>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.IPluginWindowForm.Show">
            <summary>
            Show the window
            </summary>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.IPluginWindowForm.Show(System.Windows.Forms.IWin32Window)">
            <summary>
            Show the window
            </summary>
            <param name="owner">The owner of this window.</param>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.IPluginWindowForm.ShowDialog">
            <summary>
            Show the window
            </summary>
            <returns>A dialog result value.</returns>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.IPluginWindowForm.ShowDialog(System.Windows.Forms.IWin32Window)">
            <summary>
            Show the window
            </summary>
            <param name="owner">The owner of this window.</param>
            <returns>A dialog result value.</returns>
        </member>
        <member name="T:Toenda.Foundation.Data.QueryOperator">
            <summary>
            Defines the default operator to combine the several conditions. At
            the moment there are no other operators than OR and AND which makes
            sense.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.QueryOperator.OR">
            <summary>
            Query operator
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.QueryOperator.AND">
            <summary>
            Query operator to link search words
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.QueryType">
            <summary>
            What type of query should be returned - one which works with Like %%
            or one which uses the DIFFERENCE().
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.QueryType.Like">
            <summary>
            ...
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.QueryType.Difference">
            <summary>
            ...
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.QueryParser">
            <summary>
            This class offers in fact the Parse method which parses a query to
            a usable sql where condition statement
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.QueryParser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Data.QueryParser"/> class.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.QueryParser._AddToSearchTerms(System.String,System.Boolean)">
            <summary>
            Buffers an operator or a term to this._searchTerms list
            </summary>
            <param name="term">Contains the string which has to be added.</param>
            <param name="isTerm">Define whether the string is a term or an operator.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.QueryParser.Parse(System.String,System.String[],Toenda.Foundation.Data.QueryOperator,Toenda.Foundation.Data.QueryType)">
            <summary>
            Parses the specified search string.
            </summary>
            <param name="searchString">The search string.</param>
            <param name="fields">The fields.</param>
            <param name="queryOperator">The query operator.</param>
            <param name="queryType">Type of the query.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.QueryParser.Parse(System.String,System.String[])">
            <summary>
            Parsing procedure
            </summary>
            <param name="searchString">Contains the user input, for example "Peace NOT War"</param>
            <param name="fields">String Array, defines the fields in which should be looked for in the database</param>
            <returns>Returns what has to be right to SELECT * FROM Table WHERE </returns>
        </member>
        <member name="P:Toenda.Foundation.Data.QueryParser.DefaultOperator">
            <summary>
            Default Operator
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.QueryParser.QueryType">
            <summary>
            Gets or sets the type of the query.
            </summary>
            <value>The type of the query.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.QueryParser.MinDifference">
            <summary>
            Gets or sets the min difference.
            </summary>
            <value>The min difference.</value>
        </member>
        <member name="T:Toenda.Foundation.Utility.PhoneNumberType">
            <summary>
            Describes the type of a phonenumber.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.PhoneNumberType.Unknown">
            <summary>
            The type is unknown.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.PhoneNumberType.PrivateMobileNumber">
            <summary>
            The phone number is a private mobile number.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.PhoneNumberType.PrivateNumber">
            <summary>
            The phone number is a private number.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.PhoneNumberType.PrivateFaxNumber">
            <summary>
            The phone number is a private fax number.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.PhoneNumberType.BusinessMobileNumber">
            <summary>
            The phone number is a business mobile number.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.PhoneNumberType.BusinessNumber">
            <summary>
            The phone number is a business number.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.PhoneNumberType.BusinessFaxNumber">
            <summary>
            The phone number is a business fax number.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.KeyValuePairExtensions">
            <summary>
            Class KeyValuePairExtensions
            </summary>
        </member>
        <member name="M:Toenda.Foundation.KeyValuePairExtensions.ToParamString``2(System.Collections.Generic.KeyValuePair{``0,``1})">
            <summary>
            Toes the param string.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.DateTimeProperties">
            <summary>
            Implements a DateTimeProperties data object
            </summary>
        </member>
        <member name="P:Toenda.Foundation.DateTimeProperties.Year">
            <summary>
            Get or set the year
            </summary>
        </member>
        <member name="P:Toenda.Foundation.DateTimeProperties.Month">
            <summary>
            Get or set the month
            </summary>
        </member>
        <member name="P:Toenda.Foundation.DateTimeProperties.Day">
            <summary>
            Get or set the day
            </summary>
        </member>
        <member name="T:Toenda.Foundation.DateTimeHelper">
            <summary>
            Implements a datetime helper class
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeHelper.New(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new date
            </summary>
            <param name="year">The year of the new date time.</param>
            <param name="month">The month of the new date time.</param>
            <param name="day">The day of the new date time.</param>
            <returns>Returns a new datetime object.</returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeHelper.New(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new date
            </summary>
            <param name="year">The year of the new date time.</param>
            <param name="month">The month of the new date time.</param>
            <param name="day">The day of the new date time.</param>
            <param name="hour">The hour of the new date time.</param>
            <param name="minute">The minute of the new date time.</param>
            <param name="second">The second of the new date time.</param>
            <returns>Returns a new datetime object.</returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeHelper.ParseFromInt(System.Int32)">
            <summary>
            Create a new date from an in in format (yyyyMMdd)
            </summary>
            <param name="date">The datetime object as datetime number that should be parsed.</param>
            <returns>Returns a datetime object that is initialized by the parameter.</returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeHelper.ParseByFormat(System.String)">
            <summary>
            Parse a string by a format (yyyyMMdd)
            </summary>
            <param name="date">The datetime object as datetime string that should be parsed.</param>
            <returns>Returns a datetime object that is initialized by the parameter.</returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeHelper.ParseByFormat(System.String,System.String)">
            <summary>
            Parse a string by a format
            </summary>
            <param name="date">The datetime object as datetime string that should be parsed.</param>
            <param name="format">The format of the datetime string.</param>
            <returns>Returns a datetime object that is initialized by the parameter.</returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeHelper.GetPropertiesByDefaultFormat(System.String)">
            <summary>
            Get the propertie items of a string-formated datetime (default format: yyyyMMdd)
            </summary>
            <param name="date">The datetime object as datetime string that should be parsed to a datetime properties object.</param>
            <returns>Returs the datetime properties of this date string.</returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeHelper.GetPropertiesByFormat(System.String,System.String)">
            <summary>
            Get the propertie items of a string-formated datetime
            </summary>
            <param name="date">The datetime object as datetime string that should be parsed to a datetime properties object.</param>
            <param name="format">The format of the datetime string.</param>
            <returns>Returs the datetime properties of this date string.</returns>
        </member>
        <member name="P:Toenda.Foundation.DateTimeHelper.Default">
            <summary>
            Gets the default date
            </summary>
        </member>
        <member name="T:Toenda.Foundation.AppSettings">
            <summary>
            Implements a class to read settings from the App.Config file
            </summary>
        </member>
        <member name="M:Toenda.Foundation.AppSettings.GetAppConfigValue(System.String)">
            <summary>
            Get a value from the App.Config file, if the key dos'nt exist or is empty, it returns an empty string
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.AppSettings.GetAppConfigValue(System.String,System.String)">
            <summary>
            Get a value from the App.Config file, if the key dos'nt exist or is empty, it returns the alternative value
            </summary>
            <param name="key"></param>
            <param name="alternativeValue"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.AppSettings.GetAppConfigValue``1(System.String,``0)">
            <summary>
            Get a value from the App.Config file, if the key dos'nt exist or is empty, it returns the alternative value
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="alternativeValue"></param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.IO.PathExtensions">
            <summary>
            Class PathExtensions
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.PathExtensions.GetSpecialFolders">
            <summary>
            Gets the special folders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.IO.PathExtensions.GetFullExtension(System.String)">
            <summary>
            Gets the full extension.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.IO.PathExtensions.GetFileNameWithoutFullExtension(System.String)">
            <summary>
            Gets the file name without full extension.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.IO.PathExtensions.ConvertUmlautEntities(System.String)">
            <summary>
            Converts the umlaut entities.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.IO.FileInfoExtensions">
            <summary>
            Class FileInfoExtensions
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.FileInfoExtensions.MimeTypeFromExtension(System.IO.FileInfo)">
            <summary>
            Gets the MimeType of a file
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.IO.FileInfoExtensions.MimeType(System.IO.FileInfo)">
            <summary>
            Gets the MimeType of a file
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Data.FlatfileExportReturnValue">
            <summary>
            Provides a flatfile export return value.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.FlatfileExportReturnValue.Successfull">
            <summary>
            It was successfully.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.FlatfileExportReturnValue.UnknownError">
            <summary>
            Unknown error.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.FlatfileExportReturnValue.DefaultExportError">
            <summary>
            Default export error.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.BooleanExtensions">
            <summary>
            IMplementation of boolean extensions
            </summary>
        </member>
        <member name="M:Toenda.Foundation.BooleanExtensions.ToInt32(System.Boolean)">
            <summary>
            Gets a value that describes a true (1) and a false (0) value
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Utility.ShutdownAction">
            <summary>
            enum ShutdownAction
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.ShutdownAction.Reboot">
            <summary> Reboot </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.ShutdownAction.Shutdown">
            <summary> Shutdown </summary>
        </member>
        <member name="T:Toenda.Foundation.Utility.SystemController">
            <summary>
            Class SystemController
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.SystemController.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.SystemController.ShutdownSystem(Toenda.Foundation.Utility.ShutdownAction,System.String,System.String,System.String)">
            <summary>
            Shutdown the PC
            </summary>
            <param name="sa"></param>
            <param name="hostName"></param>
            <param name="remoteAuthUser"></param>
            <param name="remoteAuthPassword"></param>
        </member>
        <member name="T:Toenda.Foundation.StringBuilderExtensions">
            <summary>
            Extends the CultureInfo class
            </summary>
        </member>
        <member name="M:Toenda.Foundation.StringBuilderExtensions.Clear(System.Text.StringBuilder)">
            <summary>
            Clears the specified instance.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:Toenda.Foundation.StringBuilderExtensions.Clear(System.Text.StringBuilder,System.Text.StringBuilder)">
            <summary>
            Clears the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <param name="obj">The instance.</param>
        </member>
        <member name="T:Toenda.Foundation.IO.FileCopyEventArgs">
            <summary>
            FileCopyEventArgs
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.FileCopyEventArgs.#ctor(System.Int64,System.Int64,System.String,System.String)">
            <summary>
            FileCopyEventArgs
            </summary>
            <param name="currentPackageSize">Size of the current package.</param>
            <param name="currentSize">Size of the current.</param>
            <param name="filename">The filename.</param>
            <param name="text">The text.</param>
        </member>
        <member name="P:Toenda.Foundation.IO.FileCopyEventArgs.CurrentPackageSize">
            <summary>
            Get or set the currentsize
            </summary>
            <value>The size of the current package.</value>
        </member>
        <member name="P:Toenda.Foundation.IO.FileCopyEventArgs.CurrentSize">
            <summary>
            Get or set the currentsize
            </summary>
            <value>The size of the current.</value>
        </member>
        <member name="P:Toenda.Foundation.IO.FileCopyEventArgs.Filename">
            <summary>
            Get or set the filename
            </summary>
            <value>The filename.</value>
        </member>
        <member name="P:Toenda.Foundation.IO.FileCopyEventArgs.Text">
            <summary>
            Get or set the text
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.GermanHolidayCalendarFactory">
            <summary>
            Implements the German HolidayCalendar
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.GermanHolidayCalendarFactory.GetInstance(System.Int32,Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Gets the instance fo the specific holiday calendar
            </summary>
            <param name="year"></param>
            <param name="eventType"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.GermanHolidayCalendarFactory.#ctor(System.Int32,Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.GermanHolidayCalendarFactory"/> and adds the specific holidays
            </summary>
            <param name="year"></param>
            <param name="eventType"></param>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.GermanHolidayCalendarFactory.Initialize(Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Initialize the calendar
            </summary>
            <param name="eventType"></param>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.GermanHolidayCalendarFactory.GetEasterSunday">
            <summary>
            Get the Easter Sunday
            </summary>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Globalization.Holiday.Holiday">
            <summary>
            Implements a holiday date object
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.Holiday.#ctor(System.Boolean,System.DateTime,System.String)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Globalization.Holiday.Holiday"/>
            </summary>
            <param name="isFix"></param>
            <param name="datum"></param>
            <param name="name"></param>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.Holiday.CompareTo(Toenda.Foundation.Globalization.Holiday.Holiday)">
            <summary>
            Compare this holiday with the holiday parameter
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:Toenda.Foundation.Globalization.Holiday.Holiday.Name">
            <summary>
            Get or set the name
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.Holiday.Holiday.Date">
            <summary>
            Get or set the date
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.Holiday.Holiday.IsFix">
            <summary>
            Get or set a value that indicates if this holiday is a fixed holiday
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.UdlParserParameterValueType">
            <summary>
            Enum ValueType
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.UdlParserParameterValueType.FileName">
            <summary>
            A filename
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.UdlParserParameterValueType.ConnectionString">
            <summary>
            A connection string
            </summary>
        </member>
        <member name="T:Toenda.Foundation.CloneableObject`1">
            <summary>
            Implements the base class for all data member objects
            </summary>
        </member>
        <member name="T:Toenda.Foundation.IDeepCloneable`1">
            <summary>
            Describes the interface for the baseclass of all data member objects
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IDeepCloneable`1.Clone">
            <summary>
            Clone this object
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <returns>Returns a clone of the current object.</returns>
        </member>
        <member name="M:Toenda.Foundation.CloneableObject`1.Clone(`0)">
            <summary>
            Clone this object
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <returns>Returns a clone of the current object.</returns>
        </member>
        <member name="M:Toenda.Foundation.CloneableObject`1.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.CloneableObject`1.Clone">
            <summary>
            Simple clone methodClone this object
            </summary>
            <returns>Returns a clone of the current object.</returns>
        </member>
        <member name="T:Toenda.Foundation.Audio.MPEG">
            <summary>
            Summary description for MPEG.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Mathematics.Calculator">
            <summary>
            Class
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Mathematics.Calculator.Self">
            <summary>
            Self
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Calculator.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Calculator.#ctor(System.String)">
            <summary>
            Specific Ctor
            </summary>
            <param name="mathQuery">The MathQuery script string.</param>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Calculator.#ctor(System.String,Toenda.Foundation.Mathematics.MathQueryParser)">
            <summary>
            Specific Ctor
            </summary>
            <param name="mathQuery">The MathQuery script string.</param>
            <param name="parser">The parser.</param>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Calculator._ComputeBySymbol(System.Char,System.Double,System.Double)">
            <summary>
            Compute a subtotal sum
            </summary>
            <param name="symbol">The symbol.</param>
            <param name="subtotal">The subtotal.</param>
            <param name="number">The number.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Calculator.Compute">
            <summary>
            Compute a math query (read more in the documentation about the MathQuery script language)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Calculator.Compute(System.String)">
            <summary>
            Compute a math query (read more in the documentation about the MathQuery script language)
            </summary>
            <param name="mathQuery">The MathQuery script string.</param>
            <returns></returns>
        </member>
        <member name="P:Toenda.Foundation.Mathematics.Calculator.MathQuery">
            <summary>
            Get or set the MathQuery string
            </summary>
            <value>The math query.</value>
        </member>
        <member name="P:Toenda.Foundation.Mathematics.Calculator.Parser">
            <summary>
            Get or set the MathQueryParser
            </summary>
            <value>The parser.</value>
        </member>
        <member name="T:Toenda.Foundation.Globalization.Calendar">
            <summary>
            Class Calendar
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetDayNumberOfWeek(System.DayOfWeek,System.DayOfWeek)">
            <summary>
            Gets the day number of week.
            </summary>
            <param name="firstDayOfWeek">The first day of week.</param>
            <param name="dayOfWeek">The day of week.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetMonthName(System.Int32)">
            <summary>
            Get name of a month
            </summary>
            <param name="month">The month.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetMonthName(System.DateTime)">
            <summary>
            Get name of a month
            </summary>
            <param name="date">The date.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetWeekOfYear(System.DateTime)">
            <summary>
            Get the week of a year
            </summary>
            <param name="dt">The dt.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)">
            <summary>
            Get the week of a year
            </summary>
            <param name="dt">The dt.</param>
            <param name="cwr">The CWR.</param>
            <param name="dow">The dow.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetFirstDayOfWeek(System.DateTime)">
            <summary>
            Gets the first day of week.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>the first day of the week</returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetLastDayOfWeek(System.DateTime)">
            <summary>
            Gets the last day of week.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>the last day of the week</returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetDateFromWeekOfYear(System.Int32,System.Int32)">
            <summary>
            Get a date from a calendarweek (starts at the first day of the week
            </summary>
            <param name="year">The year</param>
            <param name="calendarWeek">The calendar week</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.FormatTimeOfMinutes(System.Double)">
            <summary>
            Format time of minutes
            </summary>
            <param name="timeInMinutes">The time in minutes.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.FormatTimeOfMinutes(System.Int32)">
            <summary>
            Format time of minutes
            </summary>
            <param name="timeInMinutes">The time in minutes.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.FormatTimeOfMinutes(System.Int64)">
            <summary>
            Format time of minutes
            </summary>
            <param name="timeInMinutes">The time in minutes.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.ComputeAndFormatPercentOfWorkingDay(System.Int32)">
            <summary>
            Get the percent of a time value of a working day (a day has 8 hours / 480 minutes)
            </summary>
            <param name="timeInMinutes">The time in minutes.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.ComputeAndFormatPercentOfWorkingDay(System.Int32,System.Int32)">
            <summary>
            Get the percent of a time value of a working day
            </summary>
            <param name="timeInMinutes">The time in minutes.</param>
            <param name="hoursPerWorkingDay">The hours per working day.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetPercentOfWorkingDay(System.Int32)">
            <summary>
            Get the percent of a time value of a working day (a day has 8 hours / 480 minutes)
            </summary>
            <param name="timeInMinutes">The time in minutes.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetPercentOfWorkingDay(System.Int32,System.Int32)">
            <summary>
            Get the percent of a time value of a working day
            </summary>
            <param name="timeInMinutes">The time in minutes.</param>
            <param name="hoursPerWorkingDay">The hours per working day.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.ComputeAndFormatWorkingDay(System.Int32)">
            <summary>
            Compute and format the working day (a day has 8 hours / 480 minutes)
            </summary>
            <param name="timeInMinutes">The time in minutes.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.ComputeAndFormatWorkingDay(System.Int32,System.Int32)">
            <summary>
            Compute and format the working day
            </summary>
            <param name="timeInMinutes">The time in minutes.</param>
            <param name="hoursPerWorkingDay">The hours per working day.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.ParseStringToTimeInMinutes(System.String)">
            <summary>
            Parse a time string (eg. 120, 0:30, 0,5, 0.5) to a minutes value
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.ParseStringToTimeInMinutes(System.String,System.Boolean)">
            <summary>
            Parse a time string (eg. 120, 0:30, 0,5, 0.5) to a minutes value
            </summary>
            <param name="value">The value.</param>
            <param name="singleNumberIsHour">A value that indicates if a single number is a hour.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetPercentOfHour(System.Int32)">
            <summary>
            Get the percentage of minutes in a hour
            </summary>
            <param name="minutes">The minutes.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetMinutesByPercent(System.Double)">
            <summary>
            Get the minutes by the percent value of a hour
            </summary>
            <param name="percent">The percent.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.DateTimeToUnixTimestamp">
            <summary>
            Get the UNIX timestamp
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.DateTimeToUnixTimestamp(System.DateTime)">
            <summary>
            Get the UNIX timestamp
            </summary>
            <param name="choosenDate">The choosen date.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.UnixTimestampToDateTime(System.Int32)">
            <summary>
            Get the DateTime of a UNIX timestamp
            </summary>
            <param name="timestamp">The timestamp.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetPercentOfDaysInWeek(System.Double,System.Double)">
            <summary>
            Get the percentage of days in a week
            </summary>
            <param name="activeDays">The active days.</param>
            <param name="maxDays">The max days.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.FormatWorkingLoad(System.Double)">
            <summary>
            Format the working load
            </summary>
            <param name="workingLoad">The working load.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.FormatWorkingLoad(System.Double,System.Double)">
            <summary>
            Format the working load
            </summary>
            <param name="workingLoad">The working load.</param>
            <param name="maxWorkingLoad">The max working load.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.FormatWorkingLoad(System.Double,Toenda.Foundation.Globalization.WorkingLoadResult)">
            <summary>
            Format the working load
            </summary>
            <param name="workingLoad">The working load.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.FormatWorkingLoad(System.Double,System.Double,Toenda.Foundation.Globalization.WorkingLoadResult)">
            <summary>
            Format the working load
            </summary>
            <param name="workingLoad">The working load.</param>
            <param name="maxWorkingLoad">The max working load.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.AddWorkingDays(System.DateTime,System.Int32)">
            <summary>
            Adds days to a datetime and ignores holidays and weekends.
            </summary>
            <param name="date">The date.</param>
            <param name="days">The days.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetWorkingDaysInWeek(System.DateTime,Toenda.Foundation.Globalization.GermanState)">
            <summary>
            Gets the working days in week.
            </summary>
            <param name="date">The date.</param>
            <param name="states">The states.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetWorkingDaysInMonth(System.DateTime,Toenda.Foundation.Globalization.GermanState)">
            <summary>
            Gets the working days in month.
            </summary>
            <param name="date">The date.</param>
            <param name="states">The states.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetDayProportionToMonth(System.DateTime)">
            <summary>
            Get the passed day proportion to its month
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetDateFromList(Toenda.Foundation.Globalization.DateSelection,System.Collections.Generic.List{System.DateTime})">
            <summary>
            Get a selectable date from a date list
            </summary>
            <param name="select"></param>
            <param name="dateList"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetDateFromList(Toenda.Foundation.Globalization.DateSelection,System.Collections.Generic.List{System.DateTime},System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Get a selectable date from a date list
            </summary>
            <param name="select"></param>
            <param name="dateList"></param>
            <param name="excludeDate"></param>
            <param name="excludeOlder"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.ParseDate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a correct date
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.ParseDate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a correct date
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.ParseDate(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a correct date
            </summary>
            <param name="date"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetEuropeDayOfWeek(System.DateTime)">
            <summary>
            Gets the day of the week as number
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetCleanDate(System.Nullable{System.Int16},System.DateTime)">
            <summary>
            Get the day in current month called by couponDay as datetime, if the 
            timespan to the given date is to long, take the next month
            </summary>
            <param name="couponDay"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetLastDayOfMonth(System.DateTime)">
            <summary>
            Get the last day of a month as a datetime
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetFirstDayOfMonth(System.DateTime)">
            <summary>
            Get the first day of a month as a datetime
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.AddDatePart(System.String,System.Int32,System.DateTime)">
            <summary>
            Add a quantity of date part to a date
            </summary>
            <param name="part"></param>
            <param name="quantity"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.DateCompareSpan(System.String,System.DateTime,System.DateTime)">
            <summary>
            Compare date1 with date2 and returns the different in a unit called by part
            </summary>
            <param name="part">Part is the unit returned and can be "d" for days, "y" for years, "w" for weeks and "m" for months</param>
            <param name="dateFrom"></param>
            <param name="dateTo"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.DateCompareSpan(Toenda.Foundation.Globalization.DateComparePart,System.DateTime,System.DateTime)">
            <summary>
            Compare date1 with date2 and returns the different in a unit called by part
            </summary>
            <param name="part">Part is the unit returned and can be "d" for days, "y" for years, "w" for weeks and "m" for months</param>
            <param name="dateFrom"></param>
            <param name="dateTo"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.IsLeapYear(System.Int32)">
            <summary>
            Check if a year is a leap year
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetNumberOfDaysInMonth(System.DateTime)">
            <summary>
            Get the number of days in month
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetNumberOfLeapDays(System.DateTime,System.DateTime)">
            <summary>
            Get the number of leap days inside a perion
            </summary>
            <param name="dateFrom"></param>
            <param name="dateTo"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetNumberOfWorkdays(System.DateTime,System.DateTime,System.Boolean,System.Boolean,System.Int32,System.Int16)">
            <summary>
            Get the number of work days
            </summary>
            <param name="dateFrom"></param>
            <param name="dateTo"></param>
            <param name="includeFirstDate"></param>
            <param name="includeSecondDate"></param>
            <param name="wd"></param>
            <param name="firstWeDay"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.IsLastDayOfMonth(System.DateTime)">
            <summary>
            Check if a date is the last day of month
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.GetAverageYearLength(System.DateTime,System.DateTime)">
            <summary>
            Get the average length of a year
            </summary>
            <param name="date1"></param>
            <param name="date2"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.CountYears(System.DateTime,System.DateTime)">
            <summary>
            Count the years between two dates
            </summary>
            <param name="dateFrom"></param>
            <param name="dateTo"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar.CorrectDate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a correct date
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Calendar._ParseDate(System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a correct date
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Data.UdlParser">
            <summary>
            Class UdlParser
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.UdlParser.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.UdlParser.#ctor(System.String)">
            <summary>
            Specific Ctor
            </summary>
            <param name="fileName">The name of the udl file.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.UdlParser.#ctor(System.String,Toenda.Foundation.Data.UdlParserParameterValueType)">
            <summary>
            Specific Ctor
            </summary>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.UdlParser.ReadConnectionString">
            <summary>
            Parse the udl file
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.UdlParser.Parse">
            <summary>
            Parse the udl file
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.UdlParser.Parse(System.String)">
            <summary>
            Parse the udl file
            </summary>
            <param name="fileName">The path and the filename</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.UdlParser.ParseConnectionString(System.String)">
            <summary>
            Parse a connectionString
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.UdlParser.CorrectFileName(System.String)">
            <summary>
            Correct the udl file name
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.UdlParser.ReadToConnectionStringLine(System.String)">
            <summary>
            Read inside the buffer to the connection string
            </summary>
            <param name="fileName">The path/filename of the udl file.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.UdlParser.InternalParse">
            <summary>
            Parse the file
            </summary>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Utility.PhoneNumberParser">
            <summary>
            Class PhoneNumberParser
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberParser.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberParser.ParseString(System.String)">
            <summary>
            Parses the string.
            </summary>
            <param name="rawNumber">The raw number.</param>
            <returns></returns>
        </member>
        <member name="P:Toenda.Foundation.Utility.PhoneNumberParser.CountryCodeList">
            <summary>
            Get or set the country code list
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Utility.PhoneNumberParser.AreaCodeList">
            <summary>
            Get or set the area code list
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Utility.PhoneNumberParser.CountryCode">
            <summary>
            Class CountryCode
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberParser.CountryCode.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberParser.CountryCode.#ctor(System.String,System.String)">
            <summary>
            Specific Ctor
            </summary>
            <param name="code">The code.</param>
            <param name="name">The name of the country.</param>
        </member>
        <member name="P:Toenda.Foundation.Utility.PhoneNumberParser.CountryCode.Code">
            <summary>
            Get or set the code
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Utility.PhoneNumberParser.CountryCode.Name">
            <summary>
            Get or set the name
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Utility.PhoneNumberParser.AreaCode">
            <summary>
            Class AreaCode
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberParser.AreaCode.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumberParser.AreaCode.#ctor(System.String,System.String)">
            <summary>
            Specific Ctor
            </summary>
            <param name="code">The code.</param>
            <param name="name">The name of the code.</param>
        </member>
        <member name="P:Toenda.Foundation.Utility.PhoneNumberParser.AreaCode.Code">
            <summary>
            Get or set the code
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Utility.PhoneNumberParser.AreaCode.Name">
            <summary>
            Get or set the name
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.DbCommandExtension">
            <summary>
            Class DbCommandExtension
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.DbCommandExtension.AddParameter(System.Data.Common.DbCommand,System.String,System.Object)">
            <summary>
            Adds the parameter.
            </summary>
            <param name="cmd">The CMD.</param>
            <param name="parameterName">Name of the parameter.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DbCommandExtension.AddParameter(System.Data.Common.DbCommand,System.String,System.Object,System.Data.DbType)">
            <summary>
            Adds the parameter.
            </summary>
            <param name="cmd">The CMD.</param>
            <param name="parameterName">Name of the parameter.</param>
            <param name="value">The value.</param>
            <param name="dbType">Type of the db.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DbCommandExtension.AddParameter(System.Data.Common.DbCommand,System.String,System.Object,System.Data.DbType,System.Int32)">
            <summary>
            Adds the parameter.
            </summary>
            <param name="cmd">The CMD.</param>
            <param name="parameterName">Name of the parameter.</param>
            <param name="value">The value.</param>
            <param name="dbType">Type of the db.</param>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DbCommandExtension.AddParameter(System.Data.Common.DbCommand,System.String,System.Object,System.Data.DbType,System.Int32,System.Data.ParameterDirection)">
            <summary>
            Adds the parameter.
            </summary>
            <param name="cmd">The CMD.</param>
            <param name="parameterName">Name of the parameter.</param>
            <param name="value">The value.</param>
            <param name="dbType">Type of the db.</param>
            <param name="size">The size.</param>
            <param name="direction">The direction.</param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Utility.Text">
            <summary>
            Class Text
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.Text.FindSpaceCharIndex(System.String,System.Int32)">
            <summary>
            Find the index of a space char in a string
            </summary>
            <param name="text">The text.</param>
            <param name="startIndex">The start index.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Text.ShortenString(System.String)">
            <summary>
            Convert a long string into a short string
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Text.ShortenString(System.String,Toenda.Foundation.Utility.StringCutPlaceholderPosition)">
            <summary>
            Convert a long string into a short string
            </summary>
            <param name="text">The text.</param>
            <param name="placeholder">The placeholder.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Text.ShortenString(System.String,System.Int32)">
            <summary>
            Convert a long string into a short string
            </summary>
            <param name="text">The text.</param>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Text.ShortenString(System.String,System.Int32,Toenda.Foundation.Utility.StringCutPlaceholderPosition)">
            <summary>
            Convert a long string into a short string
            </summary>
            <param name="text">The text.</param>
            <param name="length">The length.</param>
            <param name="placeholder">The placeholder.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Text.InsertAmountOfChars(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Inserts the amount of chars.
            </summary>
            <param name="targetString">The target string.</param>
            <param name="startIndex">The start index.</param>
            <param name="amount">The amount.</param>
            <param name="charItem">The char item.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Text.IndentText(System.String,System.String,System.Int32)">
            <summary>
            Indent a text
            </summary>
            <param name="text">The text.</param>
            <param name="prefix">The prefix.</param>
            <param name="lineLength">Length of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Text.ToFuzzyByteString(System.Int64)">
            <summary>
            Returns a string with the correct and highest byte format
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.IO.FileCopyFinishEventArgs">
            <summary>
            FileCopyFinishEventArgs
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.FileCopyFinishEventArgs.#ctor(System.Boolean,System.String,System.String)">
            <summary>
            FileCopyFinishEventArgs
            </summary>
            <param name="successfull">if set to <c>true</c> [successfull].</param>
            <param name="filename">The filename.</param>
            <param name="text">The text.</param>
        </member>
        <member name="P:Toenda.Foundation.IO.FileCopyFinishEventArgs.Successfull">
            <summary>
            Get or set the successfull
            </summary>
            <value><c>true</c> if successfull; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Toenda.Foundation.IO.FileCopyFinishEventArgs.Filename">
            <summary>
            Get or set the filename
            </summary>
            <value>The filename.</value>
        </member>
        <member name="P:Toenda.Foundation.IO.FileCopyFinishEventArgs.Text">
            <summary>
            Get or set the text
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:Toenda.Foundation.EnumExtension">
            <summary>
            Implements extensions for the enum object
            </summary>
        </member>
        <member name="M:Toenda.Foundation.EnumExtension.ToDictionary``1(System.Enum)">
            <summary>
            Dictionary
            </summary>
            <typeparam name="T"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Utility.PhoneNumber">
            <summary>
            Struct PhoneNumber
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumber.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Utility.PhoneNumber"/>
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumber.#ctor(System.String)">
            <summary>
            Default Ctor
            </summary>
            <param name="rawNumber"></param>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumber.#ctor(System.String,Toenda.Foundation.Utility.PhoneNumberType)">
            <summary>
            Default Ctor
            </summary>
            <param name="rawNumber"></param>
            <param name="type"></param>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumber.op_Implicit(System.String)~Toenda.Foundation.Utility.PhoneNumber">
            <summary>
            Initialize a PhoneNumber object with a string
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumber.ToString">
            <summary>
            Get this object as string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumber.UnformatedPhoneNumber">
            <summary>
            Get the complete phone number
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumber.FormatedPhoneNumber">
            <summary>
            Get the complete phone number
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.PhoneNumber.Parse(System.String)">
            <summary>
            Parse a number into a PhoneNumber
            </summary>
            <param name="rawNumber"></param>
            <returns></returns>
        </member>
        <member name="P:Toenda.Foundation.Utility.PhoneNumber.CountryCode">
            <summary>
            Get or set the countrycode
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Utility.PhoneNumber.AreaCode">
            <summary>
            Get or set the areacode
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Utility.PhoneNumber.Number">
            <summary>
            Get or set the number
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Utility.PhoneNumber.RawNumber">
            <summary>
            Get or set the raw number
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Utility.PhoneNumber.PhoneNumberType">
            <summary>
            Get or set the phone number type
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Types.IP">
            <summary>
            Struct IP
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Types.IP.#ctor(System.String)">
            <summary>
            Default Ctor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Toenda.Foundation.Types.IP.#ctor(Toenda.Foundation.Types.IPVersion,System.String)">
            <summary>
            Specific Ctor
            </summary>
            <param name="version"></param>
            <param name="value"></param>
        </member>
        <member name="M:Toenda.Foundation.Types.IP.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Specific Ctor
            </summary>
            <param name="part1"></param>
            <param name="part2"></param>
            <param name="part3"></param>
            <param name="part4"></param>
        </member>
        <member name="M:Toenda.Foundation.Types.IP._ParseStringToFragments(Toenda.Foundation.Types.IPVersion)">
            <summary>
            Parse a complete string into all fragment types
            </summary>
            <param name="version"></param>
        </member>
        <member name="M:Toenda.Foundation.Types.IP._CheckIPStringFragment(System.String)">
            <summary>
            Checks the ip string fragment
            </summary>
            <param name="fragment"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Types.IP._RepairFalseIPFragment">
            <summary>
            Repair the false ip fragments
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Types.IP._ConvertToIP">
            <summary>
            Convert the data into a correct ip string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Types.IP.op_Implicit(System.String)~Toenda.Foundation.Types.IP">
            <summary>
            Initialize a IP object with a string
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Types.IP.ToString">
            <summary>
            Returns the fragment string as a ip adress
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Types.IP.Parse(System.String)">
            <summary>
            Parse a string into a IP
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Types.IP.Parse(Toenda.Foundation.Types.IPVersion,System.String)">
            <summary>
            Parse a string into a IP
            </summary>
            <param name="version"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Types.IP.Parse(System.String,System.String,System.String,System.String)">
            <summary>
            Parse a string into a IP
            </summary>
            <param name="part1"></param>
            <param name="part2"></param>
            <param name="part3"></param>
            <param name="part4"></param>
            <returns></returns>
        </member>
        <member name="P:Toenda.Foundation.Types.IP.Address">
            <summary>
            Get or set the correct IP string
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Messaging.SqlResources">
            <summary>
            Provides a reader for the xml file with the sql strings for the internal messages.
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Messaging.SqlResources.Item(System.String)">
            <summary>
            Gets the <see cref="T:Toenda.Foundation.Messaging.SqlResources"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Toenda.Foundation.Messaging.MessageManager">
            <summary>
            Provides functions to manage messages like sending emails, saving internal messages, get this internal messages and other.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Messaging.MessageManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Messaging.MessageManager"/> class.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Messaging.MessageManager.SendMessage(Toenda.Foundation.Messaging.Message)">
            <summary>
            Sends a message.
            </summary>
            <param name="message">The parameter message can be a <see cref="T:Toenda.Foundation.Messaging.SystemMessage"/> or a <see cref="T:Toenda.Foundation.Messaging.EmailMessage"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Messaging.MessageManager.GetMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IList{Toenda.Foundation.Messaging.MessageSortParam})">
            <summary>
            Loads all <see cref="T:Toenda.Foundation.Messaging.SystemMessage"/>s from a user.
            </summary>
            <param name="userId">The user id.</param>
            <param name="fromUserId">The id of the user who is the creator of the messages.</param>
            <param name="sortParams">The sort params.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Messaging.MessageManager.ChangeMessageRead(System.Int64,System.Boolean)">
            <summary>
            Changes the message property isRead to a specific value.
            </summary>
            <param name="messageId">The id of the specific message.</param>
            <param name="isRead">If its true, the message state is changed to read, if false, the state is changed to unread.</param>
        </member>
        <member name="M:Toenda.Foundation.Messaging.MessageManager.DeleteMessage(System.Int64)">
            <summary>
            Deletes a specific message.
            </summary>
            <param name="messageId">The id of the message to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Messaging.MessageManager.GetMessage(System.Int64)">
            <summary>
            Loads a single message.
            </summary>
            <param name="messageId">The id of the message you want to load.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Messaging.MessageManager.SendEmailMessage(Toenda.Foundation.Messaging.EmailMessage)">
            <summary>
            Sends the <see cref="T:Toenda.Foundation.Messaging.EmailMessage"/>.
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Messaging.MessageManager.SendSystemMessage(Toenda.Foundation.Messaging.SystemMessage)">
            <summary>
            Sends the <see cref="T:Toenda.Foundation.Messaging.SystemMessage"/>.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Language">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Language.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Language.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Language.EntryCount">
            <summary>
              Looks up a localized string similar to Anzahl Einträge.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Globalization.Holiday.HolidayMovementType">
            <summary>
            Provides options for the HolidayMovementType
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.Holiday.HolidayMovementType.NextMonday">
            <summary>
            The Movement is to the next monday
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.Holiday.HolidayMovementType.NextThursday">
            <summary>
            The Movement is to the next thursday
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.FrenchHolidayCalendarFactory">
            <summary>
            Implements the French HolidayCalendar
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.FrenchHolidayCalendarFactory.GetInstance(System.Int32,Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Gets the instance fo the specific holiday calendar
            </summary>
            <param name="year"></param>
            <param name="eventType"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.FrenchHolidayCalendarFactory.#ctor(System.Int32,Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.FrenchHolidayCalendarFactory"/> and adds the specific holidays
            </summary>
            <param name="year"></param>
            <param name="eventType"></param>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.FrenchHolidayCalendarFactory.Initialize(Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Initialize the calendar
            </summary>
            <param name="eventType"></param>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.FrenchHolidayCalendarFactory.GetEasterSunday">
            <summary>
            Get the Easter Sunday
            </summary>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Globalization.DateComparePart">
            <summary>
            Describes the part to get by a date comparision
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.DateComparePart.Day">
            <summary>
            The result are days
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.DateComparePart.Month">
            <summary>
            The result are months
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.DateComparePart.Year">
            <summary>
            The result are years
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.DateComparePart.Week">
            <summary>
            The result are weeks
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.ProviderType">
            <summary>
            Specifies the database engine witch is used.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ProviderType.Unknown">
            <summary>
            No type is set because the provider is unknown
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ProviderType.MSSql2000">
            <summary>
            The Microsoft SQL Server 2000 database
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ProviderType.MSSql2005">
            <summary>
            The Microsoft SQL Server 2005 database
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ProviderType.MySql">
            <summary>
            The MySQL database
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ProviderType.Access">
            <summary>
            The Microsoft Access (JET) database
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ProviderType.OleDb">
            <summary>
            A OleDB database
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ProviderType.Odbc">
            <summary>
            A ODBC database
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ProviderType.Oracle">
            <summary>
            The Oracle database
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ProviderType.MSSql2008">
            <summary>
            The Microsoft SQL Server 2008 database
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ProviderType.SQLite">
            <summary>
            The SQLite database
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.QueryParser`1">
            <summary>
            Implements a string-query for lists
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Toenda.Foundation.Data.QueryParser`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Data.QueryParser"/>
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.QueryParser`1.ExecuteQuery(System.String)">
            <summary>
            Executes the query
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="P:Toenda.Foundation.Data.QueryParser`1.KeyWords">
            <summary>
            Gets the internal list of key words
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.QueryParser`1.Result">
            <summary>
            Gets the results
            </summary>
        </member>
        <member name="T:Toenda.Foundation.ConnectiongString">
            <summary>
            Settings class for the connection strings
            </summary>
        </member>
        <member name="M:Toenda.Foundation.ConnectiongString.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.ConnectiongString"/>
            </summary>
        </member>
        <member name="M:Toenda.Foundation.ConnectiongString.InitList">
            <summary>
            Initialize the list of connection strings
            </summary>
        </member>
        <member name="M:Toenda.Foundation.ConnectiongString.FromId(System.String)">
            <summary>
            Gets a connections string by its id
            </summary>
            <param name="connectionStringName"></param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Audio.ID3v2Frame">
            <summary>
            Piece of ID3v2 reader.  reads frmes one at a time given the proper position in a binary stream
            </summary>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.OSType">
            <summary>
            Describes the type of the operating system.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.OSType.Unknown">
            <summary>
            The operating system is unknown.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.OSType.Workstation">
            <summary>
            The operating system is a workstation.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.OSType.DomainController">
            <summary>
            The operating system is a domain controller.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.OSType.Server">
            <summary>
            The operating system is a server.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.AssemblyInfo">
            <summary>
            Class AssemblyInfo
            </summary>
        </member>
        <member name="P:Toenda.Foundation.AssemblyInfo.Version">
            <summary>
            Get the Assembly version
            </summary>
        </member>
        <member name="P:Toenda.Foundation.AssemblyInfo.Title">
            <summary>
            Get the Assembly title
            </summary>
        </member>
        <member name="P:Toenda.Foundation.AssemblyInfo.Description">
            <summary>
            Get the Assembly description
            </summary>
        </member>
        <member name="P:Toenda.Foundation.AssemblyInfo.Copyright">
            <summary>
            Get the assembly copyright
            </summary>
        </member>
        <member name="P:Toenda.Foundation.AssemblyInfo.Product">
            <summary>
            Get the assembly product
            </summary>
        </member>
        <member name="P:Toenda.Foundation.AssemblyInfo.Company">
            <summary>
            Get the assembly company
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Parser.BBCode">
            <summary>
            Provides a parser to parse simple text formated with BBCode to the Html format.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Parser.BBCode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Parser.BBCode"/> class.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Parser.BBCode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Parser.BBCode"/> class.
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="T:Toenda.Foundation.Data.FlatfileExport">
            <summary>
            Class FlatfileExport
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.FlatfileExport.Self">
            <summary>
            Self
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.FlatfileExport.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.FlatfileExport._OpenFile(System.String,System.Boolean)">
            <summary>
            Open a filestream
            </summary>
            <param name="filename">The name including path of the file</param>
            <param name="append">True if you want to append to the file</param>
        </member>
        <member name="M:Toenda.Foundation.Data.FlatfileExport._CloseFile">
            <summary>
            Close the open file
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.FlatfileExport._WriteToFile(System.String)">
            <summary>
            Write some text to a file (only with manually open and close)
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Toenda.Foundation.Data.FlatfileExport.ExportDataList(System.Collections.Generic.List{Toenda.Foundation.Data.FlatfileExportDataContainer},System.String)">
            <summary>
            Export a list
            </summary>
            <param name="dataSource"></param>
            <param name="fileName"></param>
        </member>
        <member name="T:Toenda.Foundation.Data.FlatfileExportDataContainer">
            <summary>
            Class FlatfileExportDataContainer
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.FlatfileExportDataContainer.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.FlatfileExportDataContainer.Columns">
            <summary>
            Get the columns
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.FlatfileExportDataContainer.Cells">
            <summary>
            Get the cells
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Types.IPVersion">
            <summary>
            Specifies the version of the IP address.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Types.IPVersion.IP4">
            <summary>
            Use IP version 4.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Types.IPVersion.IP6">
            <summary>
            Use IP version 6.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Arithmetic.GetNonNegative(System.Double)">
            <summary>
            Round a negative number to null
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Arithmetic.Product(System.Collections.Generic.List{System.Double})">
            <summary>
            Calculates the product of a list of values
            </summary>
            <param name="valueList"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Arithmetic.Average(System.Collections.Generic.List{System.Double})">
            <summary>
            Get the average sum of all values in a list
            </summary>
            <param name="valueList"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Arithmetic.DirtyConvertToDecimal(System.Double,System.Int32)">
            <summary>
            Convert a double to a decimal with a 100 percent accuracy, but on a dirty and slow way.
            </summary>
            <param name="value"></param>
            <param name="digits"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Arithmetic.ReduceRound(System.Double)">
            <summary>
            Round and reduce
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Arithmetic.ReduceRound(System.Double,System.Int32)">
            <summary>
            Round and reduce
            </summary>
            <param name="value"></param>
            <param name="decimals"></param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Int64Extensions">
            <summary>
            Implements extension methods for the long object
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Int64Extensions.IsPrimeNumber(System.Int64)">
            <summary>
            Checks if a number is a prim number
            </summary>
            <param name="instance">The number to check.</param>
            <returns>Returns a value that indicates if the number is a prim number.</returns>
        </member>
        <member name="M:Toenda.Foundation.Int64Extensions.NextPrimNumber(System.Int64)">
            <summary>
            Get the next prim number
            </summary>
            <param name="instance">The int instance.</param>
            <returns>Returns the next prime number.</returns>
        </member>
        <member name="M:Toenda.Foundation.Int64Extensions.PreviousPrimNumber(System.Int64)">
            <summary>
            Get the previous prim number
            </summary>
            <param name="instance">The int instance.</param>
            <returns>Returns the previous prime number.</returns>
        </member>
        <member name="T:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.AmericanHolidayCalendarFactory">
            <summary>
            Implements the American HolidayCalendar
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.AmericanHolidayCalendarFactory.GetInstance(System.Int32,Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Gets the instance fo the specific holiday calendar
            </summary>
            <param name="year"></param>
            <param name="eventType"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.AmericanHolidayCalendarFactory.#ctor(System.Int32,Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.AmericanHolidayCalendarFactory"/> and adds the specific holidays
            </summary>
            <param name="year"></param>
            <param name="eventType"></param>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.AmericanHolidayCalendarFactory.Initialize(Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Initialize the calendar
            </summary>
            <param name="eventType"></param>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.AmericanHolidayCalendarFactory.GetMartinLutherKingDay">
            <summary>
            Get the Martin-Luther-King-Day
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.AmericanHolidayCalendarFactory.GetWashingtonsBirthday">
            <summary>
            Get the Washingtons-Birthday
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.AmericanHolidayCalendarFactory.GetMemorialDay">
            <summary>
            Get the Memorial-Day
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.AmericanHolidayCalendarFactory.GetLaborDay">
            <summary>
            Get the Labor-Day
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.AmericanHolidayCalendarFactory.GetColumbusDay">
            <summary>
            Get the Columbus-Day
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.AmericanHolidayCalendarFactory.GetThanksgivingDay">
            <summary>
            Get the Thanksgiving-Day
            </summary>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Globalization.DateSelection">
            <summary>
            Provides options for the date selection
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.DateSelection.Max">
            <summary>
            The selected date should be the max date
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.DateSelection.Min">
            <summary>
            The selected date should be the min date
            </summary>
        </member>
        <member name="T:Toenda.Foundation.DictionaryExtensions">
            <summary>
            Extends the Dictionary class
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DictionaryExtensions.AddRange``2(System.Collections.Generic.Dictionary{``0,``1},System.Collections.Generic.Dictionary{``0,``1})">
            <summary>
            Add a range of items to the instance of this dictionary
            </summary>
            <typeparam name="TKey">The key type of the dictionary.</typeparam>
            <typeparam name="TValue">The value type of the dictionary.</typeparam>
            <param name="instance">The instance of the dictionary.</param>
            <param name="list">The dictionary to add.</param>
        </member>
        <member name="M:Toenda.Foundation.DictionaryExtensions.RemoveRange``2(System.Collections.Generic.Dictionary{``0,``1},System.Collections.Generic.Dictionary{``0,``1})">
            <summary>
            Remove a range of items from the instance of this dictionary
            </summary>
            <typeparam name="TKey">The key type of the dictionary.</typeparam>
            <typeparam name="TValue">The value type of the dictionary.</typeparam>
            <param name="instance">The instance of the dictionary.</param>
            <param name="list">The dictionary to remove.</param>
        </member>
        <member name="M:Toenda.Foundation.DictionaryExtensions.FromIndex``2(System.Collections.Generic.Dictionary{``0,``1},System.Int32)">
            <summary>
            Get an entry from a specific index
            </summary>
            <typeparam name="TKey">The key type of the dictionary.</typeparam>
            <typeparam name="TValue">The value type of the dictionary.</typeparam>
            <param name="instance">The instance of the dictionary.</param>
            <param name="index">The index of the target object.</param>
            <returns>Returns a entry of the dictionary from a specific index.</returns>
        </member>
        <member name="T:Toenda.Foundation.Data.XmlDocumentTemplate">
            <summary>
            Implements a template for a xml document
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlDocumentTemplate.AddDocumentInfo">
            <summary>
            Adds the xml info the the document
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlDocumentTemplate.AddDocumentInfo(System.String)">
            <summary>
            Adds the xml info the the document
            </summary>
            <param name="isoLanguageType"></param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlDocumentTemplate.AddDocumentInfo(System.String,System.String)">
            <summary>
            Adds the xml info the the document
            </summary>
            <param name="xmlVersion"></param>
            <param name="isoLanguageType"></param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlDocumentTemplate.AddRootNode(System.String)">
            <summary>
            Adds the root node to the document
            </summary>
            <param name="nodeName"></param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlDocumentTemplate.AddNode(System.String)">
            <summary>
            Adds a node to the document
            </summary>
            <param name="nodeName"></param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlDocumentTemplate.AddElement(System.String,System.String)">
            <summary>
            Adds a single element to the document
            </summary>
            <param name="elementName"></param>
            <param name="elementValue"></param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlDocumentTemplate.AddElement(System.String,System.String,System.String,System.String)">
            <summary>
            Adds a single element with a single attribute to the document
            </summary>
            <param name="elementName"></param>
            <param name="elementValue"></param>
            <param name="attributeName"></param>
            <param name="attributeValue"></param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlDocumentTemplate.AddElement(System.String,System.String,System.Collections.Generic.List{Toenda.Foundation.Data.XmlAttributeTemplate})">
            <summary>
            Adds a single element with a list of attributes to the document
            </summary>
            <param name="elementName"></param>
            <param name="elementValue"></param>
            <param name="attributeList"></param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlDocumentTemplate.AddElementWithChildNodes(System.String,Toenda.Foundation.Data.XmlDocumentTemplate)">
            <summary>
            Adds a single element with child nodes to the document
            </summary>
            <param name="elementName"></param>
            <param name="tree"></param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlDocumentTemplate.AddElementWithChildNodes(System.String,Toenda.Foundation.Data.XmlDocumentTemplate,System.String,System.String)">
            <summary>
            Adds a single element with a single attribute and with child nodes to the document
            </summary>
            <param name="elementName"></param>
            <param name="tree"></param>
            <param name="attributeName"></param>
            <param name="attributeValue"></param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlDocumentTemplate.AddElementWithChildNodes(System.String,Toenda.Foundation.Data.XmlDocumentTemplate,System.Collections.Generic.List{Toenda.Foundation.Data.XmlAttributeTemplate})">
            <summary>
            Adds a single element with a list of attributes and with child nodes to the document
            </summary>
            <param name="elementName"></param>
            <param name="tree"></param>
            <param name="attributeList"></param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlDocumentTemplate.AddChildrenToElement(System.String,Toenda.Foundation.Data.XmlDocumentTemplate)">
            <summary>
            Adds a list of child nodes to a element of the document
            </summary>
            <param name="elementName"></param>
            <param name="tree"></param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlDocumentTemplate.AddChildrenToElement(System.String,System.String,Toenda.Foundation.Data.XmlDocumentTemplate)">
            <summary>
            Adds a list of child nodes to a element of the document
            </summary>
            <param name="elementName"></param>
            <param name="tree"></param>
        </member>
        <member name="T:Toenda.Foundation.Messaging.EmailMessage">
            <summary>
            Provides properties for a specific version of a <see cref="T:Toenda.Foundation.Messaging.Message"/>.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Messaging.EmailMessage.#ctor(System.Data.IDataRecord)">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Messaging.EmailMessage"/> class.
            </summary>
            <param name="record"></param>
        </member>
        <member name="M:Toenda.Foundation.Messaging.EmailMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Messaging.EmailMessage"/> class.
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Messaging.EmailMessage.FromEmail">
            <summary>
            Gets or sets from email.
            </summary>
            <value>From email.</value>
        </member>
        <member name="P:Toenda.Foundation.Messaging.EmailMessage.TargetEmailList">
            <summary>
            Gets or sets the target email list.
            </summary>
            <value>The target email list.</value>
        </member>
        <member name="T:Toenda.Foundation.Utility.Converter">
            <summary>
            Class Converter
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.Converter.ConvertTimestampFileNameToDateTime(System.String)">
            <summary>
            Get the date from a timestamp filename
            </summary>
            <param name="text">The filename.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Converter.AddLeadingNil(System.String)">
            <summary>
            Fill a leading nill to a string
            </summary>
            <param name="number">The number.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Converter.ConvertOutlookMail(System.String)">
            <summary>
            Convert a string value on a save way into a boolean value
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Converter.ConvertOutlookMail(System.String,System.String)">
            <summary>
            Convert a string value on a save way into a boolean value
            </summary>
            <param name="value">The value.</param>
            <param name="delimiter">The delimiter.</param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.SwissHolidayCalendarFactory">
            <summary>
            Implements the Swiss HolidayCalendar
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.SwissHolidayCalendarFactory.GetInstance(System.Int32,Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Gets the instance fo the specific holiday calendar
            </summary>
            <param name="year"></param>
            <param name="eventType"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.SwissHolidayCalendarFactory.#ctor(System.Int32,Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.SwissHolidayCalendarFactory"/> and adds the specific holidays
            </summary>
            <param name="year"></param>
            <param name="eventType"></param>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.SwissHolidayCalendarFactory.Initialize(Toenda.Foundation.Globalization.Holiday.HolidayEventType)">
            <summary>
            Initialize the calendar
            </summary>
            <param name="eventType"></param>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalenderFactories.SwissHolidayCalendarFactory.GetEasterSunday">
            <summary>
            Get the Easter Sunday
            </summary>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.CharExtensions">
            <summary>
            Extends the Char class
            </summary>
        </member>
        <member name="M:Toenda.Foundation.CharExtensions.Contains(System.Char[],System.Char)">
            <summary>
            Check if a char symbol is in a char array
            </summary>
            <param name="instance">The char array.</param>
            <param name="symbol">The char symbol.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.CharExtensions.IsForbiddenCharacter(System.Char)">
            <summary>
            Determines whether [is forbidden character] [the specified character].
            </summary>
            <param name="instance">The character.</param>
            <returns>
                <c>true</c> if [is forbidden character] [the specified character]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.CharExtensions.ToStringList(System.Char[])">
            <summary>
            Converts a char array to a string list
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.ByteExtensions">
            <summary>
            Extends the Byte class
            </summary>
        </member>
        <member name="M:Toenda.Foundation.ByteExtensions.ToAsciiString(System.Byte[])">
            <summary>
            Converts the instance of this byte array to an converted ascii string
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.ByteExtensions.ToStream(System.Byte[])">
            <summary>
            Converts the instance of this byte array to a stream.
            </summary>
            <param name="instance">The instance of the byte array.</param>
            <returns>A stream with the byte array as content.</returns>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.Processor">
            <summary>
            Class Processor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.Processor.#cctor">
            <summary>
            Initializes the <see cref="T:Toenda.Foundation.SystemLayer.Processor"/> class.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.Processor.Convert(System.UInt16)">
            <summary>
            Converts the specified w processor architecture.
            </summary>
            <param name="wProcessorArchitecture">The w processor architecture.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.Processor.GetCpuName">
            <summary>
            Gets the name of the cpu.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Toenda.Foundation.SystemLayer.Processor.Architecture">
            <summary>
            Returns the processor architecture that the current process is using.
            </summary>
            <remarks>
            Note that if the current process is 32-bit, but the OS is 64-bit, this
            property will still return X86 and not X64.
            </remarks>
        </member>
        <member name="P:Toenda.Foundation.SystemLayer.Processor.NativeArchitecture">
            <summary>
            Returns the processor architecture of the installed operating system.
            </summary>
            <remarks>
            Note that this may differ from the Architecture property if, for instance,
            this is a 32-bit process on a 64-bit OS.
            </remarks>
        </member>
        <member name="P:Toenda.Foundation.SystemLayer.Processor.CpuName">
            <summary>
            Returns the name of the CPU that is installed. If more than 1 CPU is installed,
            then the name of the first one is retrieved.
            </summary>
            <remarks>
            This is the name that shows up in Windows Device Manager in the "Processors" node.
            Note to implementors: This is only ever used for diagnostics (e.g., crash log).
            </remarks>
        </member>
        <member name="P:Toenda.Foundation.SystemLayer.Processor.LogicalCpuCount">
            <summary>
            Gets the number of logical or "virtual" processors installed in the computer.
            </summary>
            <remarks>
            This value may not return the actual number of processors installed in the system.
            It may be set to another number for testing and benchmarking purposes. It is
            recommended that you use this property instead of ConcreteLogicalCpuCount for the
            purposes of optimizing thread usage.
            The maximum value for this property is 32 when running as a 32-bit process, or
            64 for a 64-bit process. Note that this implies the maximum is 32 for a 32-bit process
            even when running on a 64-bit system.
            </remarks>
        </member>
        <member name="P:Toenda.Foundation.SystemLayer.Processor.ConcreteLogicalCpuCount">
            <summary>
            Gets the number of logical or "virtual" processors installed in the computer.
            </summary>
            <remarks>
            This property will always return the actual number of logical processors installed
            in the system. Note that processors such as Intel Xeons and Pentium 4's with
            HyperThreading will result in values that are twice the number of physical processor
            packages that have been installed (i.e. 2 Xeons w/ HT => ConcreteLogicalCpuCount = 4).
            </remarks>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.AppLoader">
            <summary>
            Class AppLoader
            </summary>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.AppLoader.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.AppLoader.LoadAppInThread(System.String)">
            <summary>
            Load a application in a new thread.
            </summary>
            <param name="name">The filename or the name (if it is in the PATH environment variable) of the application to start.</param>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.AppLoader.LoadAppInThread(System.String,System.String)">
            <summary>
            Load a application in a new thread.
            </summary>
            <param name="param">The parameters.</param>
            <param name="name">The filename or the name (if it is in the PATH environment variable) of the application to start.</param>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.AppLoader.LoadApp(System.String)">
            <summary>
            Load a application in the same thread.
            </summary>
            <param name="name">The filename or the name (if it is in the PATH environment variable) of the application to start.</param>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.AppLoader.LoadApp(System.String,System.String)">
            <summary>
            Load a application in the same thread.
            </summary>
            <param name="param">The parameters.</param>
            <param name="name">The filename or the name (if it is in the PATH environment variable) of the application to start.</param>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.AppLoader.LoadApp(System.String,System.Boolean)">
            <summary>
            Load a application in the same thread.
            </summary>
            <param name="name">The filename or the name (if it is in the PATH environment variable) of the application to start.</param>
            <param name="waitForExit">A value that indicates if the opener should wait as long as the app is not finished.</param>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.AppLoader.LoadApp(System.String,System.Boolean,System.Int32)">
            <summary>
            Load a application in the same thread.
            </summary>
            <param name="name">The filename or the name (if it is in the PATH environment variable) of the application to start.</param>
            <param name="waitForExit">A value that indicates if the opener should wait as long as the app is not finished.</param>
            <param name="timeInMilliseconds">Time to wait in milliseconds, write a value smaller as 0 to wait an unlimited time.</param>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.AppLoader.LoadApp(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Load a application in the same thread.
            </summary>
            <param name="name">The filename or the name (if it is in the PATH environment variable) of the application to start.</param>
            <param name="param">The parameters.</param>
            <param name="waitForExit">A value that indicates if the opener should wait as long as the app is not finished.</param>
            <param name="timeInMilliseconds">Time to wait in milliseconds, write a value smaller as 0 to wait an unlimited time.</param>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.AppLoader.AppProcessLoader">
            <summary>
            Private class AppProcessLoader
            </summary>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.AppLoader.AppProcessLoader.#ctor(System.String)">
            <summary>
            Default Ctor
            </summary>
            <param name="name">The name of the application</param>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.AppLoader.AppProcessLoader.#ctor(System.String,System.String)">
            <summary>
            Default Ctor
            </summary>
            <param name="name">The name of the application</param>
            <param name="param">The param.</param>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.AppLoader.AppProcessLoader.Start">
            <summary>
            Start now
            </summary>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.AppLoader.AppProcessLoader.Start(System.String)">
            <summary>
            Start now
            </summary>
            <param name="param">The parameters.</param>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.AppLoader.AppProcessLoader.Start(System.Boolean)">
            <summary>
            Start now
            </summary>
            <param name="waitForExit">A value that indicates if the opener should wait as long as the app is not finished.</param>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.AppLoader.AppProcessLoader.Start(System.Boolean,System.Int32)">
            <summary>
            Start now
            </summary>
            <param name="waitForExit">A value that indicates if the opener should wait as long as the app is not finished.</param>
            <param name="timeInMilliseconds">Time to wait in milliseconds, write a value smaller as 0 to wait an unlimited time.</param>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.AppLoader.AppProcessLoader.Start(System.String,System.Boolean,System.Int32)">
            <summary>
            Start now
            </summary>
            <param name="param">The parameters.</param>
            <param name="waitForExit">A value that indicates if the opener should wait as long as the app is not finished.</param>
            <param name="timeInMilliseconds">Time to wait in milliseconds, write a value smaller as 0 to wait an unlimited time.</param>
        </member>
        <member name="T:Toenda.Foundation.PluginBase.IPluginPrint">
            <summary>
            interface IPlugin
            </summary>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.IPluginPrint.Print">
            <summary>
            Start the print action
            </summary>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.IPluginPrint.Print(System.Drawing.Printing.PrintDocument)">
            <summary>
            Start the print action
            </summary>
            <param name="document">The document to print</param>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.IPluginPrint.Print(System.Drawing.Printing.PrinterSettings)">
            <summary>
            Start the print action
            </summary>
            <param name="settings">The print settings</param>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.IPluginPrint.Print(System.Drawing.Printing.PrinterSettings,System.Drawing.Printing.PrintDocument)">
            <summary>
            Start the print action
            </summary>
            <param name="settings">The print settings</param>
            <param name="document">The document to print</param>
        </member>
        <member name="T:Toenda.Foundation.StringExtensions">
            <summary>
            Class StringExtensions
            </summary>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.FormatIt(System.String,System.Object)">
            <summary>
            Formats the given string using the string.Format() method
            </summary>
            <param name="format">The format pattern.</param>
            <param name="arg0">The first argument for the string.</param>
            <returns>A string that is formated using the string.Format() method.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.FormatIt(System.String,System.Object,System.Object)">
            <summary>
            Formats the given string using the string.Format() method
            </summary>
            <param name="format">The format pattern.</param>
            <param name="arg0">The first argument for the string.</param>
            <param name="arg1">The second argument for the string.</param>
            <returns>A string that is formated using the string.Format() method.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.FormatIt(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Formats the given string using the string.Format() method
            </summary>
            <param name="format">The format pattern.</param>
            <param name="arg0">The first argument for the string.</param>
            <param name="arg1">The second argument for the string.</param>
            <param name="arg2">The third argument for the string.</param>
            <returns>A string that is formated using the string.Format() method.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.FormatIt(System.String,System.Object[])">
            <summary>
            Formats the given string using the string.Format() method
            </summary>
            <param name="format">The format pattern.</param>
            <param name="parameters">A dynamic list of parameters.</param>
            <returns>A string that is formated using the string.Format() method.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.FormatIt(System.String,System.IFormatProvider,System.Object[])">
            <summary>
            Formats the given string using the string.Format() method
            </summary>
            <param name="format">The format pattern.</param>
            <param name="provider">The provider to format the output.</param>
            <param name="args">A dynamic list of parameters.</param>
            <returns>A string that is formated using the string.Format() method.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.Split(System.String,System.Char)">
            <summary>
            Returns a string array that contains the substrings in this instance that are delimited 
            by elements of a specified Unicode character array. A parameter specifies the maximum 
            number of substrings to return.
            </summary>
            <param name="instance">The instance of the current string.</param>
            <param name="seperator">A unicode characters that delimit the substrings in this instance.</param>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by 
            one or more characters in separator. For more information, see the Remarks section.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.Split(System.String,System.Char,System.Int32)">
            <summary>
            Returns a string array that contains the substrings in this instance that are delimited 
            by elements of a specified Unicode character array. A parameter specifies the maximum 
            number of substrings to return.
            </summary>
            <param name="instance">The instance of the current string.</param>
            <param name="seperator">A unicode characters that delimit the substrings in this instance.</param>
            <param name="count">The maximum number of substrings to return.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The parameter count is negative.</exception>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by 
            one or more characters in separator. For more information, see the Remarks section.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.Split(System.String,System.Char,System.StringSplitOptions)">
            <summary>
            Returns a string array that contains the substrings in this instance that are delimited 
            by elements of a specified Unicode character array. A parameter specifies the maximum 
            number of substrings to return.
            </summary>
            <param name="instance">The instance of the current string.</param>
            <param name="seperator">A unicode characters that delimit the substrings in this instance.</param>
            <param name="options">Specify System.StringSplitOptions.RemoveEmptyEntries to omit 
            empty array elements from the array returned, or System.StringSplitOptions.None to 
            include empty array elements in the array returned.</param>
            <exception cref="T:System.ArgumentException">The parameter options is not on of the <see cref="T:System.StringSplitOptions"/> values.</exception>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by 
            one or more characters in separator. For more information, see the Remarks section.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.Split(System.String,System.Char,System.Int32,System.StringSplitOptions)">
            <summary>
            Returns a string array that contains the substrings in this instance that are delimited 
            by elements of a specified Unicode character array. A parameter specifies the maximum 
            number of substrings to return.
            </summary>
            <param name="instance">The instance of the current string.</param>
            <param name="seperator">A unicode characters that delimit the substrings in this instance.</param>
            <param name="count">The maximum number of substrings to return.</param>
            <param name="options">Specify System.StringSplitOptions.RemoveEmptyEntries to omit 
            empty array elements from the array returned, or System.StringSplitOptions.None to 
            include empty array elements in the array returned.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The parameter count is negative.</exception>
            <exception cref="T:System.ArgumentException">The parameter options is not on of the <see cref="T:System.StringSplitOptions"/> values.</exception>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by 
            one or more characters in separator. For more information, see the Remarks section.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.Split(System.String,System.String)">
            <summary>
            Returns a string array that contains the substrings in this instance that are delimited 
            by elements of a specified Unicode character array. A parameter specifies the maximum 
            number of substrings to return.
            </summary>
            <param name="instance">The instance of the current string.</param>
            <param name="seperator">A unicode characters that delimit the substrings in this instance.</param>
            <exception cref="T:System.ArgumentNullException">The parameter seperator cannot be null.</exception>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by 
            one or more characters in separator. For more information, see the Remarks section.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.Split(System.String,System.String,System.Int32)">
            <summary>
            Returns a string array that contains the substrings in this instance that are delimited 
            by elements of a specified Unicode character array. A parameter specifies the maximum 
            number of substrings to return.
            </summary>
            <param name="instance">The instance of the current string.</param>
            <param name="seperator">A unicode characters that delimit the substrings in this instance.</param>
            <param name="count">The maximum number of substrings to return.</param>
            <exception cref="T:System.ArgumentNullException">The parameter seperator cannot be null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The parameter count is negative.</exception>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by 
            one or more characters in separator. For more information, see the Remarks section.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.Split(System.String,System.String,System.StringSplitOptions)">
            <summary>
            Returns a string array that contains the substrings in this instance that are delimited 
            by elements of a specified Unicode character array. A parameter specifies the maximum 
            number of substrings to return.
            </summary>
            <param name="instance">The instance of the current string.</param>
            <param name="seperator">A unicode characters that delimit the substrings in this instance.</param>
            <param name="options">Specify System.StringSplitOptions.RemoveEmptyEntries to omit 
            empty array elements from the array returned, or System.StringSplitOptions.None to 
            include empty array elements in the array returned.</param>
            <exception cref="T:System.ArgumentNullException">The parameter seperator cannot be null.</exception>
            <exception cref="T:System.ArgumentException">The parameter options is not on of the <see cref="T:System.StringSplitOptions"/> values.</exception>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by 
            one or more characters in separator. For more information, see the Remarks section.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.Split(System.String,System.String,System.Int32,System.StringSplitOptions)">
            <summary>
            Returns a string array that contains the substrings in this instance that are delimited 
            by elements of a specified Unicode character array. A parameter specifies the maximum 
            number of substrings to return.
            </summary>
            <param name="instance">The instance of the current string.</param>
            <param name="seperator">A unicode characters that delimit the substrings in this instance.</param>
            <param name="count">The maximum number of substrings to return.</param>
            <param name="options">Specify System.StringSplitOptions.RemoveEmptyEntries to omit 
            empty array elements from the array returned, or System.StringSplitOptions.None to 
            include empty array elements in the array returned.</param>
            <exception cref="T:System.ArgumentNullException">The parameter seperator cannot be null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The parameter count is negative.</exception>
            <exception cref="T:System.ArgumentException">The parameter options is not on of the <see cref="T:System.StringSplitOptions"/> values.</exception>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by 
            one or more characters in separator. For more information, see the Remarks section.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.Append(System.String,System.String)">
            <summary>
            Append a string to the given string, faster and with less memory as the + operator
            </summary>
            <param name="instance">The string itself.</param>
            <param name="value">A string to append to the string</param>
            <returns>Returns the new string.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.NullTrim(System.String)">
            <summary>
            Trims a string, equal if it's null or not
            </summary>
            <param name="instance">The string itself.</param>
            <returns>Returns a trimmed string, or null, if the instance was null.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.CleanFromCharacters(System.String,System.String)">
            <summary>
            Clean a tring from characters
            </summary>
            <param name="instance">The string itself.</param>
            <param name="characters">A string filled with all characters that should be removed.</param>
            <returns>A cleaned string.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.CleanFromCharacters(System.String,System.Collections.Generic.List{System.Char})">
            <summary>
            Clean a tring from characters
            </summary>
            <param name="instance">The string itself.</param>
            <param name="characters">A string filled with all characters that should be removed.</param>
            <returns>A cleaned string.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.CleanFromCharacters(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Clean a tring from characters
            </summary>
            <param name="instance">The string itself.</param>
            <param name="characters">A string filled with all characters that should be removed.</param>
            <returns>A cleaned string.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ConvertTimestampFileNameToDateTime(System.String)">
            <summary>
            Get the date from a timestamp filename
            </summary>
            <param name="instance">The filename (only the format: "YYYYMMDDHHMMSS*.*").</param>
            <returns>A datetime of the filename string.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.CleanFromSpacesAndSpecialChars(System.String)">
            <summary>
            Clear a string from some special chars and spaces
            </summary>
            <param name="instance">The string itself.</param>
            <returns>A cleaned string.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.IsEmail(System.String)">
            <summary>
            Check an email adress for its correctness
            </summary>
            <param name="instance">A email adress to check.</param>
            <exception cref="T:System.ArgumentNullException">If inputEmail is null.</exception>
            <returns>A value that indicates if the string is a real email adress or not.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.IsExpressionTrue(System.String)">
            <summary>
            Check if a expression is a value that indicates a boolean value, 
            like "true", or "1".
            </summary>
            <param name="instance">The string to check</param>
            <returns>A value that indicates if the expression fo the string is true or false.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.HasForbiddenCharacters(System.String)">
            <summary>
            Check a text for forbidden characters
            </summary>
            <param name="instance">The text string.</param>
            <returns>Returns a value that indicates if this string has forbidden characters.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.IsForbiddenCharacter(System.String)">
            <summary>
            Determines whether [is forbidden character] [the specified character].
            </summary>
            <param name="instance">The string to check.</param>
            <returns>Returns a value that indicates if this string has forbidden characters.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.HasForbiddenCharacters(System.String,System.String)">
            <summary>
            Check a text for forbidden characters
            </summary>
            <param name="instance">The text string.</param>
            <param name="pattern">A Pattern with alloweg characters (eg. "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" or "0123456789:,.").</param>
            <returns>Returns a value that indicates if this string has forbidden characters.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.HasForbiddenCharacters(System.String,System.Boolean)">
            <summary>
            Check a text for forbidden characters
            </summary>
            <param name="instance">The text string.</param>
            <param name="ignoreLowerAndUpper">Ignore the lower and upper value of a character.</param>
            <returns>Returns a value that indicates if this string has forbidden characters.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.HasForbiddenCharacters(System.String,System.String,System.Boolean)">
            <summary>
            Check a text for forbidden characters
            </summary>
            <param name="instance">The text string.</param>
            <param name="pattern">A Pattern with alloweg characters (eg. "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" or "0123456789:,.").</param>
            <param name="ignoreLowerAndUpper">Ignore the lower and upper value of a character.</param>
            <returns>Returns a value that indicates if this string has forbidden characters.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.IsAlpha(System.String)">
            <summary>
            Check an text for the used chars
            </summary>
            <param name="instance">A text to check.</param>
            <exception cref="T:System.ArgumentNullException">If value is null.</exception>
            <returns>Returns a value that indicates if this string is a alpha string.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.IsAlphaNumeric(System.String)">
            <summary>
            Check if a string is a alphanumeric string
            </summary>
            <param name="instance"></param>
            <exception cref="T:System.ArgumentNullException">If value is null.</exception>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.IsNumeric(System.String)">
            <summary>
            Check if a string is a number
            </summary>
            <param name="instance">The string itself.</param>
            <exception cref="T:System.ArgumentNullException">If value is null.</exception>
            <returns>Returns a value that indicates if this string is a numeric string.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToType``1(System.String)">
            <summary>
            Converts a string into a specific type
            </summary>
            <typeparam name="T">The specific target type.</typeparam>
            <param name="instance">The string itself.</param>
            <returns>Returns a new object of the specific type with the value parsed from the given string.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToCharacterList(System.String)">
            <summary>
            Converts a string into a list of strings filled with a item per single character from the string
            </summary>
            <param name="instance">The string itself.</param>
            <returns>Returns the string as list of strings filled with each single character as single item.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.IsNullOrTrimmedEmpty(System.String)">
            <summary>
            Determines whether [is null or empty] [the specified instance].
            </summary>
            <param name="instance">The instance.</param>
            <returns>Returns a value that indicates if this string is null, empty or trimmed empty.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.MD5(System.String)">
            <summary>
            Parse a string to MD5.
            </summary>
            <param name="instance">The instance.</param>
            <returns>Returns the string as MD5 string.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.FromHex(System.String)">
            <summary>
            Converts a hex string to a ascii string
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToEnum``1(System.String)">
            <summary>
            Converts a string value on a save way into a enum value
            </summary>
            <typeparam name="T">The target enum type.</typeparam>
            <param name="instance">The string itself.</param>
            <returns>Returns a enum type of the given string.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToByteArray(System.String)">
            <summary>
            Converts a string value on a save way into a byte array value
            </summary>
            <param name="instance">The string itself.</param>
            <returns>Returns the string converted as a byte array.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToInt16(System.String)">
            <summary>
            Converts a string value on a save way into a int16 value
            </summary>
            <param name="instance">The instance.</param>
            <returns>Returns the string converted as a short (Int16) object.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToInt32(System.String)">
            <summary>
            Converts a string value on a save way into a int32 value
            </summary>
            <param name="instance">The instance.</param>
            <returns>Returns the string converted as a int (Int32) object.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToInt64(System.String)">
            <summary>
            Convert a string value on a save way into a int64 value
            </summary>
            <param name="instance">The instance.</param>
            <returns>Returns the string converted as a long (Int64) object.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToDouble(System.String)">
            <summary>
            Convert a string value on a save way into a double value
            </summary>
            <param name="instance">The instance.</param>
            <returns>Returns the string converted as a double object.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToDecimal(System.String)">
            <summary>
            Convert a string value on a save way into a decimal value
            </summary>
            <param name="instance">The instance.</param>
            <returns>Returns the string converted as a decimal object.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToFloat(System.String)">
            <summary>
            Convert a string value on a save way into a float value
            </summary>
            <param name="instance">The instance.</param>
            <returns>Returns the string converted as a float object.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToBoolean(System.String)">
            <summary>
            Convert a string value on a save way into a boolean value
            </summary>
            <param name="instance">The instance.</param>
            <returns>Returns the string converted as a boolean object.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToDateTime(System.String)">
            <summary>
            Convert a string value on a save way into a DateTime value
            </summary>
            <param name="instance">The instance.</param>
            <returns>Returns the string converted as a datetime object.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToDateTime(System.String,System.String)">
            <summary>
            Convert a string value on a save way into a DateTime value
            </summary>
            <param name="instance">The instance.</param>
            <param name="format">Contains the format (allowed formats are "MM/dd/yyyy", "MM-dd-yyyy", "dd.MM.yyyy", "dd-MM-yyyy", "yyyy-MM-dd", "yyyyMMdd").</param>
            <returns>Returns the string converted as a datetime object.</returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToUInt16(System.String)">
            <summary>
            Converts a string value on a save way into a Uint16 value
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToUInt32(System.String)">
            <summary>
            Converts a string value on a save way into a Uint32 value
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.StringExtensions.ToUInt64(System.String)">
            <summary>
            Convert a string value on a save way into a Uint64 value
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Serialization.Serialize">
            <summary>
            Implements the Serialize class
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Serialization.Serialize.ToBinary``1(``0)">
            <summary>
            Serialize a object to a byte array
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Serialization.Serialize.FromBinary``1(System.Byte[])">
            <summary>
            De-Serialize a byte array to a object
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Serialization.Serialize.ToXmlString``1(``0)">
            <summary>
            Serialize a object to a xml string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Serialization.Serialize.FromXmlString``1(System.String)">
            <summary>
            De-Serialize a xml string to a object
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Serialization.Serialize.ToJsonString``1(``0)">
            <summary>
            Serialize a object to a json string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Serialization.Serialize.FromJsonString``1(System.String)">
            <summary>
            De-Serialize a json string to a object
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.PluginBase.ComponentException">
            <summary>
            Implements a Component exceptiopn
            </summary>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.ComponentException.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.PluginBase.ComponentException"/>
            </summary>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.ComponentException.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.PluginBase.ComponentException"/>
            </summary>
            <param name="message">Spezifies a own message</param>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.ComponentException.#ctor(Toenda.Foundation.PluginBase.ComponentException)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.PluginBase.ComponentException"/> and initializes it by the exception from the parameter
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.ComponentException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.PluginBase.ComponentException"/>
            </summary>
            <param name="message">Spezifies a own message</param>
            <param name="innerException">The innerException is a exception contained in this exception</param>
        </member>
        <member name="P:Toenda.Foundation.PluginBase.ComponentException.Message">
            <summary>
            Gets he message
            </summary>
        </member>
        <member name="P:Toenda.Foundation.PluginBase.ComponentException.InnerException">
            <summary>
            Gets the inner exception
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Net.WebValidator">
            <summary>
            Implements a validator and converter for web related data
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Net.WebValidator.IsWebAddress(System.String)">
            <summary>
            Checks if a text is a webaddress
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Net.WebValidator.IsEmail(System.String)">
            <summary>
            Check an email adress for its correctness
            </summary>
            <param name="text">A email adress to check.</param>
            <exception cref="T:System.ArgumentNullException">If inputEmail is null.</exception>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Net.WebValidator.CleanupLinebreak(System.String)">
            <summary>
            Cleanup all linebreaks
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Net.WebValidator.ConvertLinebreakToHtml(System.String)">
            <summary>
            Convert a new line char into a html-[br]
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Net.WebValidator.ConvertLinebreak(System.String)">
            <summary>
            Convert a new line char into a html-[br]
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Net.WebValidator.ConvertHtmlToLinebreak(System.String)">
            <summary>
            Convert a html-[br] into a new line char
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Net.WebValidator.ConvertHtmlLinebreak(System.String)">
            <summary>
            Convert a html-[br] into a new line char
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Net.WebValidator.CorrectWebAdress(System.String)">
            <summary>
            Correct a web adress
            </summary>
            <param name="webAdress">A web url adress.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">If WebAdress is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.Net.WebValidator.CorrectWebAdress(System.String,Toenda.Foundation.Net.WebAdressPrefix)">
            <summary>
            Correct a web adress to a given type
            </summary>
            <param name="webAdress">A web url adress.</param>
            <param name="adressPrefix">The prefix to cerrect.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">If WebAdress is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.Net.WebValidator.CleanEmailString(System.String)">
            <summary>
            Clear a email string from some special chars and spaces
            </summary>
            <param name="text">The mail.</param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.LinkedListExtensions">
            <summary>
            Extends the LinkedList class
            </summary>
        </member>
        <member name="M:Toenda.Foundation.LinkedListExtensions.AddRange``1(System.Collections.Generic.LinkedList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Add a range of items to the instance of this linked list
            </summary>
            <typeparam name="T">The type of the objects of the list.</typeparam>
            <param name="instance">The LinkedList object itself.</param>
            <param name="list">The list that should be added to the LinkedList.</param>
            <returns>Returns the list with the added list.</returns>
        </member>
        <member name="M:Toenda.Foundation.LinkedListExtensions.AddRange``1(System.Collections.Generic.LinkedList{``0},System.Collections.Generic.LinkedList{``0})">
            <summary>
            Add a range of items to the instance of this linked list
            </summary>
            <typeparam name="T">The type of the objects of the list.</typeparam>
            <param name="instance">The LinkedList object itself.</param>
            <param name="list">The list that should be added to the LinkedList.</param>
            <returns>Returns the list with the added list.</returns>
        </member>
        <member name="M:Toenda.Foundation.LinkedListExtensions.ToIndex``1(System.Collections.Generic.LinkedList{``0},System.Int32,``0)">
            <summary>
            Add an item to a specific index of the list
            </summary>
            <typeparam name="T">The type of the objects of the list.</typeparam>
            <param name="instance">The LinkedList object itself.</param>
            <param name="index">The target index of the object.</param>
            <param name="value">The object that should be added to the target index.</param>
        </member>
        <member name="M:Toenda.Foundation.LinkedListExtensions.Add``1(System.Collections.Generic.LinkedList{``0},``0)">
            <summary>
            Adds an new item to a linked list
            </summary>
            <typeparam name="T">The type of items in the list.</typeparam>
            <param name="instance">The instance of the linked list.</param>
            <param name="item">The new item top add.</param>
        </member>
        <member name="M:Toenda.Foundation.LinkedListExtensions.GetNodeFromIndex``1(System.Collections.Generic.LinkedList{``0},System.Int32)">
            <summary>
            Get a node from a specific index
            </summary>
            <typeparam name="T">The type of the objects of the list.</typeparam>
            <param name="instance">The LinkedList object itself.</param>
            <param name="index">The index of the target object.</param>
            <returns>Returns a single node from the given index.</returns>
        </member>
        <member name="M:Toenda.Foundation.LinkedListExtensions.FromIndex``1(System.Collections.Generic.LinkedList{``0},System.Int32)">
            <summary>
            Gets an item from an index (search via item.Next)
            </summary>
            <typeparam name="T">The type of the objects of the list.</typeparam>
            <param name="instance">The LinkedList object itself.</param>
            <param name="index">The index of the target object.</param>
            <returns>Returns a single node value from the given index.</returns>
        </member>
        <member name="M:Toenda.Foundation.LinkedListExtensions.FromIteratedIndex``1(System.Collections.Generic.LinkedList{``0},System.Int32)">
            <summary>
            Get a value from an index (search via iteration)
            </summary>
            <typeparam name="T">The type of the objects of the list.</typeparam>
            <param name="instance">The LinkedList object itself.</param>
            <param name="index">The index of the target object.</param>
            <returns>Returns a single node value from the given index.</returns>
        </member>
        <member name="T:Toenda.Foundation.Globalization.CultureInfoExtensions">
            <summary>
            Extends the CultureInfo class
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Globalization.CultureInfoExtensions.FindCulture(System.String)">
            <summary>
            Gets a culture info object by the ISO 6133 code list
            </summary>
            <param name="isoLanguageName"></param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.DateTimeExtensions">
            <summary>
            Extends the DateTime class
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.ToFileNameString(System.DateTime)">
            <summary>
            Convert a datetime to a filename string
            </summary>
            <param name="instance">The datetime instance.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.IsRealDate(System.DateTime)">
            <summary>
            Returns a value that indicates if a date is a real date and does not contain the default value
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.FastCompareTo(System.DateTime,System.DateTime)">
            <summary>
            Compares a date to this instance and returns a positive or negative value or a null...
            </summary>
            <param name="instance"></param>
            <param name="compareTo"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.ToDouble(System.DateTime)">
            <summary>
            Convert a date to double (base 1.1.1900)
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.ToIntFormat(System.DateTime)">
            <summary>
            Convert a date to double (base 1.1.1900)
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.ParseFromProperties(System.DateTime,Toenda.Foundation.DateTimeProperties)">
            <summary>
            Create a new date from properties
            </summary>
            <param name="instance"></param>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.ParseFromInt(System.DateTime,System.Int32)">
            <summary>
            Create a new date from an in in format (yyyyMMdd)
            </summary>
            <param name="instance"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.ParseByFormat(System.DateTime,System.String)">
            <summary>
            Parse a string by a format (yyyyMMdd)
            </summary>
            <param name="instance"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.ParseByFormat(System.DateTime,System.String,System.String)">
            <summary>
            Parse a string by a format
            </summary>
            <param name="instance"></param>
            <param name="date"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.GetProperties(System.DateTime)">
            <summary>
            Get the properties of an date time object
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.GetProperties(System.DateTime,System.String)">
            <summary>
            Get the propertie items of a string-formated datetime
            </summary>
            <param name="instance"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.GetProperties(System.DateTime,System.String,System.String)">
            <summary>
            Get the propertie items of a string-formated datetime
            </summary>
            <param name="instance"></param>
            <param name="date"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.EndOfDay(System.DateTime)">
            <summary>
            Returns the very end of the given day (the last millisecond of the last hour for the given <see cref="T:System.DateTime"/>).
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.BeginningOfDay(System.DateTime)">
            <summary>
            Returns the Start of the given day (the first millisecond of the given <see cref="T:System.DateTime"/>).
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.NextYear(System.DateTime)">
            <summary>
            Returns the same date (same Day, Month, Hour, Minute, Second etc) in the next calendar year. 
            If that day does not exist in next year in same month, number of missing days is added to the last day in same month next year.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.PreviousYear(System.DateTime)">
            <summary>
            Returns the same date (same Day, Month, Hour, Minute, Second etc) in the previous calendar year.
            If that day does not exist in previous year in same month, number of missing days is added to the last day in same month previous year.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.NextDay(System.DateTime)">
            <summary>
            Returns <see cref="T:System.DateTime"/> increased by 24 hours ie Next Day.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.PreviousDay(System.DateTime)">
            <summary>
            Returns <see cref="T:System.DateTime"/> decreased by 24h period ie Previous Day.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.Next(System.DateTime,System.DayOfWeek)">
            <summary>
            Returns first next occurrence of specified <see cref="T:System.DayOfWeek"/>.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.Previous(System.DateTime,System.DayOfWeek)">
            <summary>
            Returns first next occurrence of specified <see cref="T:System.DayOfWeek"/>.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.WeekAfter(System.DateTime)">
            <summary>
            Increases supplied <see cref="T:System.DateTime"/> for 7 days ie returns the Next Week.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.WeekEarlier(System.DateTime)">
            <summary>
            Decreases supplied <see cref="T:System.DateTime"/> for 7 days ie returns the Previous Week.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.IncreaseTime(System.DateTime,System.TimeSpan)">
            <summary>
            Increases the <see cref="T:System.DateTime"/> object with given <see cref="T:System.TimeSpan"/> value.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.DecreaseTime(System.DateTime,System.TimeSpan)">
            <summary>
            Decreases the <see cref="T:System.DateTime"/> object with given <see cref="T:System.TimeSpan"/> value.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.SetTime(System.DateTime,System.Int32)">
            <summary>
            Returns the original <see cref="T:System.DateTime"/> with Hour part changed to supplied hour parameter.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.SetTime(System.DateTime,System.Int32,System.Int32)">
            <summary>
            Returns the original <see cref="T:System.DateTime"/> with Hour and Minute parts changed to supplied hour and minute parameters.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.SetTime(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the original <see cref="T:System.DateTime"/> with Hour, Minute and Second parts changed to supplied hour, minute and second parameters.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.SetTime(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the original <see cref="T:System.DateTime"/> with Hour, Minute, Second and Millisecond parts changed to supplied hour, minute, second and millisecond parameters.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.SetHour(System.DateTime,System.Int32)">
            <summary>
            Returns <see cref="T:System.DateTime"/> with changed Hour part.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.SetMinute(System.DateTime,System.Int32)">
            <summary>
            Returns <see cref="T:System.DateTime"/> with changed Minute part.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.SetSecond(System.DateTime,System.Int32)">
            <summary>
            Returns <see cref="T:System.DateTime"/> with changed Second part.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.SetMillisecond(System.DateTime,System.Int32)">
            <summary>
            Returns <see cref="T:System.DateTime"/> with changed Millisecond part.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.Midnight(System.DateTime)">
            <summary>
            Returns original <see cref="T:System.DateTime"/> value with time part set to midnight (alias for <see cref="M:Toenda.Foundation.DateTimeExtensions.BeginningOfDay(System.DateTime)"/> method).
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.Noon(System.DateTime)">
            <summary>
            Returns original <see cref="T:System.DateTime"/> value with time part set to Noon (12:00:00h).
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> find Noon for.</param>
            <returns>A <see cref="T:System.DateTime"/> value with time part set to Noon (12:00:00h).</returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.SetDate(System.DateTime,System.Int32)">
            <summary>
            Returns <see cref="T:System.DateTime"/> with changed Year part.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.SetDate(System.DateTime,System.Int32,System.Int32)">
            <summary>
            Returns <see cref="T:System.DateTime"/> with changed Year and Month part.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.SetDate(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns <see cref="T:System.DateTime"/> with changed Year, Month and Day part.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.SetYear(System.DateTime,System.Int32)">
            <summary>
            Returns <see cref="T:System.DateTime"/> with changed Year part.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.SetMonth(System.DateTime,System.Int32)">
            <summary>
            Returns <see cref="T:System.DateTime"/> with changed Month part.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.SetDay(System.DateTime,System.Int32)">
            <summary>
            Returns <see cref="T:System.DateTime"/> with changed Day part.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.IsBefore(System.DateTime,System.DateTime)">
            <summary>
            Determines whether the specified <see cref="T:System.DateTime"/> is before then current value.
            </summary>
            <param name="current">The current value.</param>
            <param name="toCompareWith">Value to compare with.</param>
            <returns>
            	<c>true</c> if the specified current is before; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.IsAfter(System.DateTime,System.DateTime)">
            <summary>
            Determines whether the specified <see cref="T:System.DateTime"/> value is After then current value.
            </summary>
            <param name="current">The current value.</param>
            <param name="toCompareWith">Value to compare with.</param>
            <returns>
            	<c>true</c> if the specified current is after; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.At(System.DateTime,System.Int32,System.Int32)">
            <summary>
            Returns the given <see cref="T:System.DateTime"/> with hour and minutes set At given values.
            </summary>
            <param name="current">The current <see cref="T:System.DateTime"/> to be changed.</param>
            <param name="hour">The hour to set time to.</param>
            <param name="minute">The minute to set time to.</param>
            <returns><see cref="T:System.DateTime"/> with hour and minute set to given values.</returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.At(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the given <see cref="T:System.DateTime"/> with hour and minutes and seconds set At given values.
            </summary>
            <param name="current">The current <see cref="T:System.DateTime"/> to be changed.</param>
            <param name="hour">The hour to set time to.</param>
            <param name="minute">The minute to set time to.</param>
            <param name="second">The second to set time to.</param>
            <returns><see cref="T:System.DateTime"/> with hour and minutes and seconds set to given values.</returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.FirstDayOfMonth(System.DateTime)">
            <summary>
            Sets the day of the <see cref="T:System.DateTime"/> to the first day in that month.
            </summary>
            <param name="current">The current <see cref="T:System.DateTime"/> to be changed.</param>
            <returns>given <see cref="T:System.DateTime"/> with the day part set to the first day in that month.</returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.LastDayOfMonth(System.DateTime)">
            <summary>
            Sets the day of the <see cref="T:System.DateTime"/> to the last day in that month.
            </summary>
            <param name="current">The current DateTime to be changed.</param>
            <returns>given <see cref="T:System.DateTime"/> with the day part set to the last day in that month.</returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.AddBusinessDays(System.DateTime,System.Int32)">
            <summary>
            Adds the given number of business days to the <see cref="T:System.DateTime"/>.
            </summary>
            <param name="current">The date to be changed.</param>
            <param name="days">Number of business days to be added.</param>
            <returns>A <see cref="T:System.DateTime"/> increased by a given number of business days.</returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.SubtractBusinessDays(System.DateTime,System.Int32)">
            <summary>
            Subtracts the given number of business days to the <see cref="T:System.DateTime"/>.
            </summary>
            <param name="current">The date to be changed.</param>
            <param name="days">Number of business days to be subtracted.</param>
            <returns>A <see cref="T:System.DateTime"/> increased by a given number of business days.</returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.IsInFuture(System.DateTime)">
            <summary>
            Determine if a <see cref="T:System.DateTime"/> is in the future.
            </summary>
            <param name="dateTime">The date to be checked.</param>
            <returns><c>true</c> if <paramref name="dateTime"/> is in the future; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Toenda.Foundation.DateTimeExtensions.IsInPast(System.DateTime)">
            <summary>
            Determine if a <see cref="T:System.DateTime"/> is in the past.
            </summary>
            <param name="dateTime">The date to be checked.</param>
            <returns><c>true</c> if <paramref name="dateTime"/> is in the past; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Toenda.Foundation.Audio.ID3v2">
            <summary>
            Summary description for ID3v2.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Net.WebAdressPrefix">
            <summary>
            The type of web adress prefix
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Net.WebAdressPrefix.Undefined">
            <summary> Undefined </summary>
        </member>
        <member name="F:Toenda.Foundation.Net.WebAdressPrefix.HTTP">
            <summary> HTTP </summary>
        </member>
        <member name="F:Toenda.Foundation.Net.WebAdressPrefix.HTTPS">
            <summary> Secure HTTP </summary>
        </member>
        <member name="F:Toenda.Foundation.Net.WebAdressPrefix.FTP">
            <summary> FTP </summary>
        </member>
        <member name="F:Toenda.Foundation.Net.WebAdressPrefix.FTPS">
            <summary> Seruce FTP </summary>
        </member>
        <member name="F:Toenda.Foundation.Net.WebAdressPrefix.EMAIL">
            <summary> E-Mail </summary>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.DotNetVersion">
            <summary>
            Specifies a version of Microsoft .NET
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.DotNetVersion.Version_1_0_3705">
            <summary>
            The version 1.0.3705.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.DotNetVersion.Version_1_1_4322">
            <summary>
            The version 1.1.4322.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.DotNetVersion.Version_2_0_50727">
            <summary>
            The version 2.0.50727.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.DotNetVersion.Version_3_0">
            <summary>
            The version 3.0.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.DotNetVersion.Version_3_5">
            <summary>
            The version 3.5.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Security.Cryptography.RijndaelEncryption">
            <summary>
            Class RijndaelEncryption
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Security.Cryptography.RijndaelEncryption.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Security.Cryptography.RijndaelEncryption.EncryptString(System.String,System.String)">
            <summary>
            Encrypt a string using a keyword
            </summary>
            <param name="clearText"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Security.Cryptography.RijndaelEncryption.DecryptString(System.String,System.String)">
            <summary>
            Decrypt a encrypted string using the correct keyword
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Security.Cryptography.RijndaelEncryption.Encrypt(System.String,System.String)">
            <summary>
            Encrypt a string using a keyword
            </summary>
            <param name="clearText"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Security.Cryptography.RijndaelEncryption.Decrypt(System.String,System.String)">
            <summary>
            Decrypt a encrypted string using the correct keyword
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Security.Cryptography.RijndaelEncryption.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Internal encrypter
            </summary>
            <param name="clearText"></param>
            <param name="Key"></param>
            <param name="IV"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Security.Cryptography.RijndaelEncryption.Decrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Internal decrypter
            </summary>
            <param name="cipherData"></param>
            <param name="Key"></param>
            <param name="IV"></param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Data.XmlProvider">
            <summary>
            Class XmlProvider
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.#ctor(System.String)">
            <summary>
            Specific constructor (the OpenMode is ForReading)
            For example: ../Configuration/Configuration.xml
            </summary>
            <param name="fileName">The name of the file.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.#ctor(System.String,Toenda.Foundation.Data.OpenMode)">
            <summary>
            Specific constructor
            </summary>
            <param name="fileName">The path and name of the file.</param>
            <param name="mode">The mode to open the file.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.#ctor(System.String,Toenda.Foundation.Data.BufferMode)">
            <summary>
            Specific Constructor
            </summary>
            <param name="xmlBuffer">The Xml Code Buffer.</param>
            <param name="mode">The mode to handle the buffer.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.CheckTagExist(System.String)">
            <summary>
            Check if a node exist in a valid xml file
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.ReadAttribute(System.String,System.String)">
            <summary>
            Read a specific XML attribute
            </summary>
            <param name="node">The node.</param>
            <param name="attribute">The attribute.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.ReadAttribute(System.String,System.String,System.String)">
            <summary>
            Read a specific XML attribute
            </summary>
            <param name="rootNode">The rootnode.</param>
            <param name="node">The node.</param>
            <param name="attribute">The attribute.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.ReadTag(System.String)">
            <summary>
            Read a specific XML tag
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.ReadTag(System.String,System.String)">
            <summary>
            Read a specific XML tag
            </summary>
            <param name="rootNode">The rootnode.</param>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.ReadTagList(System.String,System.String)">
            <summary>
            Read a list of similiar tags
            </summary>
            <param name="rootNode">The rootnode.</param>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.ReadTagListWithAttributes(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Read a list of similiar attributes
            </summary>
            <param name="rootNode"></param>
            <param name="node">The node.</param>
            <param name="attribute"></param>
            <param name="targetNode"></param>
            <param name="skipFirstElement">if set to <c>true</c> [skip first element].</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.ReadTagListWithAttributes(System.String,System.Boolean)">
            <summary>
            Read a list of similiar attributes
            </summary>
            <param name="node">The node.</param>
            <param name="skipFirstElement">if set to <c>true</c> [skip first element].</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.ReadTagList(System.String,System.String,System.String)">
            <summary>
            Read a list of similiar attributes
            </summary>
            <param name="rootNode">The rootnode.</param>
            <param name="node">The node.</param>
            <param name="attribute">The attribute.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.ReadAttributeList(System.String,System.String,System.String)">
            <summary>
            Read a list of similiar attributes
            </summary>
            <param name="rootNode">The rootnode.</param>
            <param name="node">The node.</param>
            <param name="attribute">The attribute.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.ReadAttributedTree(System.String,System.String,System.String,System.String)">
            <summary>
            Read an attributed XML tag
            </summary>
            <param name="node">The node.</param>
            <param name="attribute">The attribute.</param>
            <param name="attributeValue">The attribute value.</param>
            <param name="subNode">The subnode.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.CheckAttributeExist(System.String,System.String,System.String)">
            <summary>
            Check if atrribute exists in a node
            </summary>
            <param name="node">The node.</param>
            <param name="attribute">The attribute.</param>
            <param name="attributeValue">The attribute value.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.ChangeValueInFirstLevel(System.String,System.String)">
            <summary>
            Change a value in the first level of a xml file
            </summary>
            <param name="node">The node.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.ChangeValueInSecondLevel(System.String,System.String)">
            <summary>
            Change a value in the second level of a xml file
            </summary>
            <param name="node">The node.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.WriteDocumentInfo">
            <summary>
            Write the document info (manually open and close file)
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.WriteDocumentInfo(System.Boolean)">
            <summary>
            Write the document info (manually open and close file)
            </summary>
            <param name="standAlone">If true, it writes "standalone=yes", if false, it writes "standalone=no".</param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.WriteRootNode(System.String)">
            <summary>
            Write to a xml file (manually open and close file)
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.CloseRootNode">
            <summary>
            Write to a xml file (manually open and close file)
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.WriteTag(System.String,System.String)">
            <summary>
            Write to a xml file (manually open and close file)
            </summary>
            <param name="node">The node.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.WriteAttributedTag(System.String,System.String,System.String,System.String)">
            <summary>
            Write to a xml file (manually open and close file)
            </summary>
            <param name="node">The node.</param>
            <param name="value">The value.</param>
            <param name="attribute">The attribute.</param>
            <param name="attributeValue">The attribute value.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.CloseFile">
            <summary>
            Close file
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.OpenFile">
            <summary>
            Open the file
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.OpenBuffer">
            <summary>
            Open a Xml buffer
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.CloseBuffer">
            <summary>
            Close Xml buffer
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.FileHasValidXml(System.String)">
            <summary>
            Check if a xml file is valid
            </summary>
            <param name="fileName">The file name.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.CreateDocumentFromList(System.String,Toenda.Foundation.Data.XmlDocumentTemplate)">
            <summary>
            Creates a xml document from a list of XmlNodeTemplate objects. This
            objects describes a tree node and contains the value and the node name
            (and also optionally a attribute name and the value). A DocumentInfo must
            be the first item and a RootNode must be the second item.
            </summary>
            <param name="fileName">The filename</param>
            <param name="tree">A list of XmlNodeTemplate objects, order it in the correct tree order.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider.DisplayDocumentFromList(Toenda.Foundation.Data.XmlDocumentTemplate)">
            <summary>
            Creates a xml document from a list of XmlNodeTemplate objects. This
            objects describes a tree node and contains the value and the node name
            (and also optionally a attribute name and the value). A DocumentInfo must
            be the first item and a RootNode must be the second item.
            </summary>
            <param name="tree">A list of XmlNodeTemplate objects, order it in the correct tree order.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlProvider._CreateDocumentFromList(System.Xml.XmlDocument,System.Xml.XmlElement,Toenda.Foundation.Data.XmlDocumentTemplate)">
            <summary>
            Creates a xml document from a list of XmlNodeTemplate objects. This
            objects describes a tree node and contains the value and the node name
            (and also optionally a attribute name and the value). A DocumentInfo must
            be the first item and a RootNode must be the second item.
            </summary>
            <param name="doc">The document (for recursive use).</param>
            <param name="subNode">The sub node for recursive use</param>
            <param name="tree">A list of XmlNodeTemplate objects, order it in the correct tree order.</param>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlProvider.FileName">
            <summary>
            Get or set the file
            </summary>
            <value>The file.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlProvider.OpenMode">
            <summary>
            Get or set the open mode
            </summary>
            <value>The open mode.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlProvider.XmlBuffer">
            <summary>
            Get or set the Xml buffer
            </summary>
            <value>The XML buffer.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlProvider.IsValidXml">
            <summary>
            Check if the xml file is valid
            </summary>
            <value>
            	<c>true</c> if this instance is valid XML; otherwise, <c>false</c>.
            </value>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Data.DALSettings">
            <summary>
            Class DALSettings
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.DALSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Data.DALSettings"/> class.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.DALSettings.#ctor(Toenda.Foundation.Data.ProviderType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Data.DALSettings"/> class.
            </summary>
            <param name="engine">The engine.</param>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.DALSettings.#ctor(Toenda.Foundation.Data.ProviderType,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Data.DALSettings"/> class.
            </summary>
            <param name="engine">The engine.</param>
            <param name="server">The server.</param>
            <param name="database">The database.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.DALSettings.#ctor(Toenda.Foundation.Data.ProviderType,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Data.DALSettings"/> class.
            </summary>
            <param name="engine">The engine.</param>
            <param name="server">The server.</param>
            <param name="database">The database.</param>
            <param name="userInstance">if set to <c>true</c> [user instance].</param>
        </member>
        <member name="M:Toenda.Foundation.Data.DALSettings.#ctor(Toenda.Foundation.Data.ProviderType,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Data.DALSettings"/> class.
            </summary>
            <param name="engine">The engine.</param>
            <param name="user">The user.</param>
            <param name="password">The password.</param>
            <param name="server">The server.</param>
            <param name="database">The database.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.DALSettings.FromConfiguration(System.String)">
            <summary>
            Read connection information from configuration file.
            </summary>
            <param name="name">Name of the connection string to read.</param>
            <returns>An instance of Toenda.Foundation.Data.DALSettings containing the configured connection settings.</returns>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.FailoverPartner">
            <summary>
            Get or set the failover partner
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.ProviderType">
            <summary>
            Get or set the engine
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.User">
            <summary>
            Get or set the user
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.Password">
            <summary>
            Get or set the password
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.Server">
            <summary>
            Get or set the server
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.Port">
            <summary>
            Get or set the port
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.Database">
            <summary>
            Get or set the Database
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.TrustedConnection">
            <summary>
            Get Trusted Connection
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.PersistSecurityInfo">
            <summary>
            Get persist security info
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.IntegratedSecurity">
            <summary>
            Get integrated security
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.MultipleActiveResultSets">
            <summary>
            Get MultipleActiveResultSets
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.UserInstance">
            <summary>
            Get user instance
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.PrimaryKeyName">
            <summary>
            Get or set the name of the primary key
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.ProviderName">
            <summary>
            Gets the name of the provider.
            </summary>
            <value>The name of the provider.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.IsWindowsAuthentication">
            <summary>
            Get a value that indicates that this connectionstring is for a windows authentication
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.ConnectionString">
            <summary>
            Get or set the complete connection string
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator">
            <summary>
            Implements a internal connection string generator class
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator.#ctor(Toenda.Foundation.Data.DALSettings)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator"/>
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator.ConvertProviderTypeToString(Toenda.Foundation.Data.ProviderType)">
            <summary>
            Converts a provider type to a string
            </summary>
            <param name="providerType"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator.ConvertStringToProviderType(System.String)">
            <summary>
            Converts a string to a provider type
            </summary>
            <param name="providerType"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator.GetServerString">
            <summary>
            Get server string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator.GetServerString(System.Boolean)">
            <summary>
            Get server string
            </summary>
            <param name="msSpecific">If the string should be Microsoft specific, this must be true</param>
        </member>
        <member name="M:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator.GetDatabaseString">
            <summary>
            Get database string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator.GetDatabaseString(System.Boolean)">
            <summary>
            Get database string
            </summary>
            <param name="compatible">If the string should be compatible, this must be true</param>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator.UserString">
            <summary>
            Get user string
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator.PasswordString">
            <summary>
            Get password string
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator.FailoverPartnerString">
            <summary>
            Get failover partner string
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator.TrustedConnectionString">
            <summary>
            Get trusted connection string
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator.PersistSecurityInfoString">
            <summary>
            Get persist security info string
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator.IntegratedSecurityString">
            <summary>
            Get integrated security string
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator.UserInstanceString">
            <summary>
            Get user instance string
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DALSettings.ConnectionStringGenerator.MultipleActiveResultSetsString">
            <summary>
            Get MultipleActiveResultSets string
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.DAL">
            <summary>Provides functionality for basic database operations.</summary>
            <remarks>Connections to different databases are currently not supported in transaction contexts.</remarks>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.#ctor(Toenda.Foundation.Data.DALSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Data.DAL"/> class.
            </summary>
            <param name="dbConfig">The db config.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Toenda.Foundation.Data.DAL"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.FromConfiguration(System.String)">
            <summary>Creates a new DAL based on the specified connection string from the configuration file.</summary>
            <param name="connectionStringName">Name of the connection string defined in the configuration file.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.FromConnectionString(System.String)">
            <summary>Creates a new DAL based on the specified connection string.</summary>
            <param name="connectionString">The connection string.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.CloseConnection">
            <summary>
            Close the connection
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.OpenConnection">
            <summary>
            Open a connection
            </summary>
            <returns>
            True, if a new connection was opened or false if an existing connection is reused.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.con_StateChange(System.Object,System.Data.StateChangeEventArgs)">
            <summary>
            Handles the StateChange event of the con control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Data.StateChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.trans_TransactionCompleted(System.Object,System.Transactions.TransactionEventArgs)">
            <summary>
            Handles the TransactionCompleted event of the trans control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Transactions.TransactionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.CreateCommand">
            <summary>
            Creates a command object for the current provider type.
            </summary>
            <returns>
            A new instance of a class derived from System.Data.Common.DbCommand.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.ExecuteNonQuery(System.Data.IDbCommand)">
            <summary>
            Executes a command.
            </summary>
            <param name="cmd">The command to execute.</param>
            <returns>The number of records affected.</returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.ExecuteNonQuery(System.String)">
            <summary>
            Execute a non-query statement.
            </summary>
            <param name="query">The statement to execute.</param>
            <returns>The number of records affected.</returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.ExecuteNonQuery(System.String,System.Boolean)">
            <summary>
            Execute a non-query statement, with an option to start it within a transaction.
            </summary>
            <param name="query">The statement to execute.</param>
            <param name="startAsTransaction">True if the statement shall be executed within a transaction, otherwise false.</param>
            <returns>The number of rows affected.</returns>
            <remarks>If startAsTransaction is set to true, the statement will be executed in a new transaction scope.
            This means that all changes made by the specified statement are persistent, even if a higher transaction
            scope fails. To execute more than one statement within a single transaction use the other ExecuteNonQuery
            methods enclosed in a transaction scope.</remarks>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.ExecuteQuery(System.String)">
            <summary>
            Executes a query
            </summary>
            <param name="query">The query to execute.</param>
            <returns>
            A System.Data.DataSet containing the query results.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.ExecuteQuery(System.String,System.Data.CommandType)">
            <summary>
            Executes a query
            </summary>
            <param name="query">The query to execute.</param>
            <param name="cmdType">Command type of the query string.</param>
            <returns>
            A System.Data.DataSet containing the query results.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.ExecuteQueryForDataReader(System.Data.IDbCommand)">
            <summary>
            Executes a command.
            </summary>
            <param name="cmd">The command to execute.</param>
            <returns>
            An IDataReader for the resultset of the executed command.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.ExecuteQueryForDataReader(System.Data.Common.DbCommand)">
            <summary>Executes a command.</summary>
            <param name="cmd">The command to execute.</param>
            <returns>A DbDataReader for the resultset of the executed command.</returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.ExecuteQueryForDataReader(System.String,System.Data.CommandType)">
            <summary>Executes a query.</summary>
            <param name="query">The query to execute.</param>
            <param name="cmdType">Type of the query to executed.</param>
            <returns>A System.Data.IDataReader for the resultset of the executed query.</returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.ExecuteQueryForDataTableReader(System.Data.IDbCommand)">
            <summary>
            Executes the query for data table reader.
            </summary>
            <param name="cmd">The CMD.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.ExecuteQueryForDataTableReader(System.String,System.Data.CommandType)">
            <summary>Executes a query</summary>
            <param name="query">The query to execute.</param>
            <param name="cmdType">Type of the query to execute.</param>
            <returns>A System.Data.DataTableReader containing the results of the query.</returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.ExecuteScalar(System.Data.IDbCommand)">
            <summary>Executes a query for a single value.</summary>
            <param name="cmd">The command to execute.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.ExecuteScalar(System.String,System.Data.CommandType)">
            <summary>Executes a query for a single value.</summary>
            <param name="query">The query to execute.</param>
            <param name="cmdType">Type of the command.</param>
            <returns>The first cell in the first row of the resultset.</returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.ExecuteUpdate(System.Data.DataSet,System.String)">
            <summary>Executes an update.</summary>
            <param name="data">The System.Data.DataSet containing the data to be transferred to the database.</param>
            <param name="table">Name of the table to update.</param>
            <returns>The number of rows updated.</returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.CreateConnection">
            <summary>Creates a new connection using the current DALSettings.</summary>
            <returns>A new database connection, connected to the configured database.</returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.GetConnection">
            <summary>Requests a database connection suitable for the current context.</summary>
            <returns>A transactional or nontransactional database connection.</returns>
        </member>
        <member name="M:Toenda.Foundation.Data.DAL.GetDataAdapter(System.Data.IDbCommand)">
            <summary>Get a data adapter from a command</summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="P:Toenda.Foundation.Data.DAL.Settings">
            <summary>
            Gets the DAL settings
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DAL.ConfigurationName">
            <summary>
            Gets the name of the configuration
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.DAL.CommandTimeout">
            <summary>
            Gets or sets the command timeout in milliseconds.
            </summary>
            <value>The command timeout.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.DAL.CommandTimeoutInSeconds">
            <summary>
            Gets or sets the command timeout in seconds.
            </summary>
            <value>The command timeout in seconds.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.DAL.IsConnected">
            <summary>
            Returns True if the DAL is already connected to a database in the current transaction context,
            otherwise false.
            </summary>
            <value>
            	<c>true</c> if this instance is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Toenda.Foundation.Data.DAL.ProviderFactory">
            <summary>Returns a factory for the current provider.</summary>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.RestartOptions">
            <summary>
            Enum RestartOptions
            Specifies the type of restart options that an application can use.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.RestartOptions.LogOff">
            <summary>
            Shuts down all processes running in the security context of the process that called the ExitWindowsEx function. Then it logs the user off.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.RestartOptions.PowerOff">
            <summary>
            Shuts down the system and turns off the power. The system must support the power-off feature.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.RestartOptions.Reboot">
            <summary>
            Shuts down the system and then restarts the system.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.RestartOptions.ShutDown">
            <summary>
            Shuts down the system to a point at which it is safe to turn off the power. All file buffers have been flushed to disk, and all running processes have stopped. If the system supports the power-off feature, the power is also turned off.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.RestartOptions.Suspend">
            <summary>
            Suspends the system.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.RestartOptions.Hibernate">
            <summary>
            Hibernates the system.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.LUID">
            <summary>
            Struct LUID
            An LUID is a 64-bit value guaranteed to be unique only on the system on which it was generated. The uniqueness of a locally unique identifier (LUID) is guaranteed only until the system is restarted.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.LUID.LowPart">
            <summary>
            The low order part of the 64 bit value.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.LUID.HighPart">
            <summary>
            The high order part of the 64 bit value.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.LUID_AND_ATTRIBUTES">
            <summary>
            Struct LUID_AND_ATTRIBUTES
            The LUID_AND_ATTRIBUTES structure represents a locally unique identifier (LUID) and its attributes.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.LUID_AND_ATTRIBUTES.pLuid">
            <summary>
            Specifies an LUID value.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.LUID_AND_ATTRIBUTES.Attributes">
            <summary>
            Specifies attributes of the LUID. This value contains up to 32 one-bit flags. Its meaning is dependent on the definition and use of the LUID.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.TOKEN_PRIVILEGES">
            <summary>
            Struct TOKEN_PRIVILEGES
            The TOKEN_PRIVILEGES structure contains information about a set of privileges for an access token.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.TOKEN_PRIVILEGES.PrivilegeCount">
            <summary>
            Specifies the number of entries in the Privileges array.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.TOKEN_PRIVILEGES.Privileges">
            <summary>
            Specifies an array of LUID_AND_ATTRIBUTES structures. Each structure contains the LUID and attributes of a privilege.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.WindowsController">
            <summary>
            Class WindowsController
            Implements methods to exit Windows.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.WindowsController.TOKEN_ADJUST_PRIVILEGES">
            <summary>Required to enable or disable the privileges in an access token.</summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.WindowsController.TOKEN_QUERY">
            <summary>Required to query an access token.</summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.WindowsController.SE_PRIVILEGE_ENABLED">
            <summary>The privilege is enabled.</summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.WindowsController.FORMAT_MESSAGE_FROM_SYSTEM">
            <summary>Specifies that the function should search the system message-table resource(s) for the requested message.</summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.WindowsController.EWX_FORCE">
            <summary>Forces processes to terminate. When this flag is set, the system does not send the WM_QUERYENDSESSION and WM_ENDSESSION messages. This can cause the applications to lose data. Therefore, you should only use this flag in an emergency.</summary>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsController.LoadLibrary(System.String)">
            <summary>
            The LoadLibrary function maps the specified executable module into the address space of the calling process.
            </summary>
            <param name="lpLibFileName">Pointer to a null-terminated string that names the executable module (either a .dll or .exe file). The name specified is the file name of the module and is not related to the name stored in the library module itself, as specified by the LIBRARY keyword in the module-definition (.def) file.</param>
            <returns>If the function succeeds, the return value is a handle to the module.<br></br><br>If the function fails, the return value is NULL. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsController.FreeLibrary(System.IntPtr)">
            <summary>
            The FreeLibrary function decrements the reference count of the loaded dynamic-link library (DLL). When the reference count reaches zero, the module is unmapped from the address space of the calling process and the handle is no longer valid.
            </summary>
            <param name="hLibModule">Handle to the loaded DLL module. The LoadLibrary or GetModuleHandle function returns this handle.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsController.GetProcAddress(System.IntPtr,System.String)">
            <summary>
            The GetProcAddress function retrieves the address of an exported function or variable from the specified dynamic-link library (DLL).
            </summary>
            <param name="hModule">Handle to the DLL module that contains the function or variable. The LoadLibrary or GetModuleHandle function returns this handle.</param>
            <param name="lpProcName">Pointer to a null-terminated string containing the function or variable name, or the function's ordinal value. If this parameter is an ordinal value, it must be in the low-order word; the high-order word must be zero.</param>
            <returns>If the function succeeds, the return value is the address of the exported function or variable.<br></br><br>If the function fails, the return value is NULL. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsController.SetSuspendState(System.Int32,System.Int32,System.Int32)">
            <summary>
            The SetSuspendState function suspends the system by shutting power down. Depending on the Hibernate parameter, the system either enters a suspend (sleep) state or hibernation (S4). If the ForceFlag parameter is TRUE, the system suspends operation immediately; if it is FALSE, the system requests permission from all applications and device drivers before doing so.
            </summary>
            <param name="Hibernate">Specifies the state of the system. If TRUE, the system hibernates. If FALSE, the system is suspended.</param>
            <param name="ForceCritical">Forced suspension. If TRUE, the function broadcasts a PBT_APMSUSPEND event to each application and driver, then immediately suspends operation. If FALSE, the function broadcasts a PBT_APMQUERYSUSPEND event to each application to request permission to suspend operation.</param>
            <param name="DisableWakeEvent">If TRUE, the system disables all wake events. If FALSE, any system wake events remain enabled.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsController.OpenProcessToken(System.IntPtr,System.Int32,System.IntPtr@)">
            <summary>
            The OpenProcessToken function opens the access token associated with a process.
            </summary>
            <param name="ProcessHandle">Handle to the process whose access token is opened.</param>
            <param name="DesiredAccess">Specifies an access mask that specifies the requested types of access to the access token. These requested access types are compared with the token's discretionary access-control list (DACL) to determine which accesses are granted or denied.</param>
            <param name="TokenHandle">Pointer to a handle identifying the newly-opened access token when the function returns.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsController.LookupPrivilegeValue(System.String,System.String,Toenda.Foundation.SystemLayer.LUID@)">
            <summary>
            The LookupPrivilegeValue function retrieves the locally unique identifier (LUID) used on a specified system to locally represent the specified privilege name.
            </summary>
            <param name="lpSystemName">Pointer to a null-terminated string specifying the name of the system on which the privilege name is looked up. If a null string is specified, the function attempts to find the privilege name on the local system.</param>
            <param name="lpName">Pointer to a null-terminated string that specifies the name of the privilege, as defined in the Winnt.h header file. For example, this parameter could specify the constant SE_SECURITY_NAME, or its corresponding string, "SeSecurityPrivilege".</param>
            <param name="lpLuid">Pointer to a variable that receives the locally unique identifier by which the privilege is known on the system, specified by the lpSystemName parameter.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsController.AdjustTokenPrivileges(System.IntPtr,System.Int32,Toenda.Foundation.SystemLayer.TOKEN_PRIVILEGES@,System.Int32,Toenda.Foundation.SystemLayer.TOKEN_PRIVILEGES@,System.Int32@)">
            <summary>
            The AdjustTokenPrivileges function enables or disables privileges in the specified access token. Enabling or disabling privileges in an access token requires TOKEN_ADJUST_PRIVILEGES access.
            </summary>
            <param name="TokenHandle">Handle to the access token that contains the privileges to be modified. The handle must have TOKEN_ADJUST_PRIVILEGES access to the token. If the PreviousState parameter is not NULL, the handle must also have TOKEN_QUERY access.</param>
            <param name="DisableAllPrivileges">Specifies whether the function disables all of the token's privileges. If this value is TRUE, the function disables all privileges and ignores the NewState parameter. If it is FALSE, the function modifies privileges based on the information pointed to by the NewState parameter.</param>
            <param name="NewState">Pointer to a TOKEN_PRIVILEGES structure that specifies an array of privileges and their attributes. If the DisableAllPrivileges parameter is FALSE, AdjustTokenPrivileges enables or disables these privileges for the token. If you set the SE_PRIVILEGE_ENABLED attribute for a privilege, the function enables that privilege; otherwise, it disables the privilege. If DisableAllPrivileges is TRUE, the function ignores this parameter.</param>
            <param name="BufferLength">Specifies the size, in bytes, of the buffer pointed to by the PreviousState parameter. This parameter can be zero if the PreviousState parameter is NULL.</param>
            <param name="PreviousState">Pointer to a buffer that the function fills with a TOKEN_PRIVILEGES structure that contains the previous state of any privileges that the function modifies. This parameter can be NULL.</param>
            <param name="ReturnLength">Pointer to a variable that receives the required size, in bytes, of the buffer pointed to by the PreviousState parameter. This parameter can be NULL if PreviousState is NULL.</param>
            <returns>If the function succeeds, the return value is nonzero. To determine whether the function adjusted all of the specified privileges, call Marshal.GetLastWin32Error.</returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsController.ExitWindowsEx(System.Int32,System.Int32)">
            <summary>
            The ExitWindowsEx function either logs off the current user, shuts down the system, or shuts down and restarts the system. It sends the WM_QUERYENDSESSION message to all applications to determine if they can be terminated.
            </summary>
            <param name="uFlags">Specifies the type of shutdown.</param>
            <param name="dwReserved">This parameter is ignored.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsController.FormatMessage(System.Int32,System.IntPtr,System.Int32,System.Int32,System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            The FormatMessage function formats a message string. The function requires a message definition as input. The message definition can come from a buffer passed into the function. It can come from a message table resource in an already-loaded module. Or the caller can ask the function to search the system's message table resource(s) for the message definition. The function finds the message definition in a message table resource based on a message identifier and a language identifier. The function copies the formatted message text to an output buffer, processing any embedded insert sequences if requested.
            </summary>
            <param name="dwFlags">Specifies aspects of the formatting process and how to interpret the lpSource parameter. The low-order byte of dwFlags specifies how the function handles line breaks in the output buffer. The low-order byte can also specify the maximum width of a formatted output line.</param>
            <param name="lpSource">Specifies the location of the message definition. The type of this parameter depends upon the settings in the dwFlags parameter.</param>
            <param name="dwMessageId">Specifies the message identifier for the requested message. This parameter is ignored if dwFlags includes FORMAT_MESSAGE_FROM_STRING.</param>
            <param name="dwLanguageId">Specifies the language identifier for the requested message. This parameter is ignored if dwFlags includes FORMAT_MESSAGE_FROM_STRING.</param>
            <param name="lpBuffer">Pointer to a buffer for the formatted (and null-terminated) message. If dwFlags includes FORMAT_MESSAGE_ALLOCATE_BUFFER, the function allocates a buffer using the LocalAlloc function, and places the pointer to the buffer at the address specified in lpBuffer.</param>
            <param name="nSize">If the FORMAT_MESSAGE_ALLOCATE_BUFFER flag is not set, this parameter specifies the maximum number of TCHARs that can be stored in the output buffer. If FORMAT_MESSAGE_ALLOCATE_BUFFER is set, this parameter specifies the minimum number of TCHARs to allocate for an output buffer. For ANSI text, this is the number of bytes; for Unicode text, this is the number of characters.</param>
            <param name="Arguments">Pointer to an array of values that are used as insert values in the formatted message. A %1 in the format string indicates the first value in the Arguments array; a %2 indicates the second argument; and so on.</param>
            <returns>If the function succeeds, the return value is the number of TCHARs stored in the output buffer, excluding the terminating null character.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsController.ExitWindows(Toenda.Foundation.SystemLayer.RestartOptions,System.Boolean)">
            <summary>
            Exits windows (and tries to enable any required access rights, if necesarry).
            </summary>
            <param name="how">One of the RestartOptions values that specifies how to exit windows.</param>
            <param name="force">True if the exit has to be forced, false otherwise.</param>
            <exception cref="T:Toenda.Foundation.SystemLayer.PrivilegeException">There was an error while requesting a required privilege.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The requested exit method is not supported on this platform.</exception>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsController.ExitWindows(System.Int32,System.Boolean)">
            <summary>
            Exits windows (and tries to enable any required access rights, if necesarry).
            </summary>
            <param name="how">One of the RestartOptions values that specifies how to exit windows.</param>
            <param name="force">True if the exit has to be forced, false otherwise.</param>
            <remarks>This method cannot hibernate or suspend the system.</remarks>
            <exception cref="T:Toenda.Foundation.SystemLayer.PrivilegeException">There was an error while requesting a required privilege.</exception>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsController.EnableToken(System.String)">
            <summary>
            Tries to enable the specified privilege.
            </summary>
            <param name="privilege">The privilege to enable.</param>
            <exception cref="T:Toenda.Foundation.SystemLayer.PrivilegeException">There was an error while requesting a required privilege.</exception>
            <remarks>Thanks to Michael S. Muegel for notifying us about a bug in this code.</remarks>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsController.SuspendSystem(System.Boolean,System.Boolean)">
            <summary>
            Suspends or hibernates the system.
            </summary>
            <param name="hibernate">True if the system has to hibernate, false if the system has to be suspended.</param>
            <param name="force">True if the exit has to be forced, false otherwise.</param>
            <exception cref="T:System.PlatformNotSupportedException">The requested exit method is not supported on this platform.</exception>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsController.CheckEntryPoint(System.String,System.String)">
            <summary>
            Checks whether a specified method exists on the local computer.
            </summary>
            <param name="library">The library that holds the method.</param>
            <param name="method">The entry point of the requested method.</param>
            <returns>True if the specified method is present, false otherwise.</returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsController.FormatError(System.Int32)">
            <summary>
            Formats an error number into an error message.
            </summary>
            <param name="number">The error number to convert.</param>
            <returns>A string representation of the specified error number.</returns>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.PrivilegeException">
            <summary>
            Class PrivilegeException
            The exception that is thrown when an error occures when requesting a specific privilege.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.PrivilegeException.#ctor">
            <summary>
            Initializes a new instance of the PrivilegeException class.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.PrivilegeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PrivilegeException class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:Toenda.Foundation.Utility.SignatureType">
            <summary>
            Provides the selectable options what a signature can be
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.SignatureType.TickId">
            <summary>
            A tick id, in format {ticks}_{internalTickCounter}_{guid}, where 
            the {internalTickCounter} is a counter for id's requested by 
            more then one thread in one tick
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.SignatureType.Guid">
            <summary>
            A uniqe identifier
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.SignatureType.SequentialGuid">
            <summary>
            A sequential unique identifier
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.SignatureType.TimestampId">
            <summary>
            A timestamp id, in format {date}_{time}_{milliseconds}_{ticks}_{guid}
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Utility.SignatureFactory">
            <summary>
            Implements a factory class to create signatures from different types
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.SignatureFactory.NewId">
            <summary>
            Creates a GUID
            </summary>
            <returns>Guid</returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.SignatureFactory.NewSequentialId">
            <summary>
            Generates the biggest Guid
            </summary>
            <returns>GUID</returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.SignatureFactory.NewTickId">
            <summary>
            Create a tick id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.SignatureFactory.NewTimestampId">
            <summary>
            Creates a timestamp id
            </summary>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.PluginBase.ComponentNotFoundException">
            <summary>
            Implements a ComponentNotFound exception
            </summary>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.ComponentNotFoundException.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.PluginBase.ComponentNotFoundException"/>
            </summary>
            <param name="componentName">The name of the component</param>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.ComponentNotFoundException.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.PluginBase.ComponentNotFoundException"/>
            </summary>
            <param name="componentName">The name of the component</param>
            <param name="message">Spezifies a own message</param>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.ComponentNotFoundException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.PluginBase.ComponentNotFoundException"/>
            </summary>
            <param name="componentName">The name of the component</param>
            <param name="message">Spezifies a own message</param>
            <param name="innerException">The innerException is a exception contained in this exception</param>
        </member>
        <member name="P:Toenda.Foundation.PluginBase.ComponentNotFoundException.ComponentName">
            <summary>
            Gets the name of the component that was not found
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Globalization.HolidayType">
            <summary>
            Specifies the type of holiday.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.HolidayType.Fix">
            <summary>
            This represents a fix holyday
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.HolidayType.Movable">
            <summary>
            This represents a movable holyday
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Globalization.GermanState">
            <summary>
            Describes the states of the country germany.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.BadenWuertenberg">
            <summary>
            BadenWuertenberg
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.Bayern">
            <summary>
            Bayern
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.Berlin">
            <summary>
            Berlin
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.Brandenburg">
            <summary>
            Brandenburg
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.Bremen">
            <summary>
            Bremen
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.Hamburg">
            <summary>
            Hamburg
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.Hessen">
            <summary>
            Hessen
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.MecklenburgVorpommern">
            <summary>
            MecklenburgVorpommern
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.Niedersachsen">
            <summary>
            Niedersachsen
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.NordrheinWestfalen">
            <summary>
            NordrheinWestfalen
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.RheinlandPfalz">
            <summary>
            RheinlandPfalz
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.Saarland">
            <summary>
            Saarland
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.Sachsen">
            <summary>
            Sachsen
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.SachsenAnhalt">
            <summary>
            SachsenAnhalt
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.SchleswigHolstein">
            <summary>
            SchleswigHolstein
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.GermanState.Thueringen">
            <summary>
            Thueringen
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.BufferMode">
            <summary>
            Provides the buffer mode.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.BufferMode.ForReading">
            <summary> Open xml file for reading (XmlReader) </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.BufferMode.ForWriting">
            <summary> Open xml file for writing (XmlWriter) </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.BufferMode.ForCreating">
            <summary> Create a xml file (XmlWriter) </summary>
        </member>
        <member name="T:Toenda.Foundation.Audio.ID3v1">
            <summary>
            Reads/writes Id3v1 tags
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Audio.ID3v1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Audio.ID3v1"/> class.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Audio.ID3v1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Audio.ID3v1"/> class.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:Toenda.Foundation.Audio.ID3v1._Init">
            <summary>
            Inits this instance.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Audio.ID3v1.Read">
            <summary>
            Reads this instance.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Audio.ID3v1.UpdateMP3Tag">
            <summary>
            Updates the M p3 tag.
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Audio.ID3v1.Filename">
            <summary>
            Gets or sets the filename.
            </summary>
            <value>The filename.</value>
        </member>
        <member name="P:Toenda.Foundation.Audio.ID3v1.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Toenda.Foundation.Audio.ID3v1.Artist">
            <summary>
            Gets or sets the artist.
            </summary>
            <value>The artist.</value>
        </member>
        <member name="P:Toenda.Foundation.Audio.ID3v1.Album">
            <summary>
            Gets or sets the album.
            </summary>
            <value>The album.</value>
        </member>
        <member name="P:Toenda.Foundation.Audio.ID3v1.Year">
            <summary>
            Gets or sets the year.
            </summary>
            <value>The year.</value>
        </member>
        <member name="P:Toenda.Foundation.Audio.ID3v1.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>The comment.</value>
        </member>
        <member name="P:Toenda.Foundation.Audio.ID3v1.GenreId">
            <summary>
            Gets or sets the genre id.
            </summary>
            <value>The genre id.</value>
        </member>
        <member name="P:Toenda.Foundation.Audio.ID3v1.Genre">
            <summary>
            Gets the genre.
            </summary>
            <value>The genre.</value>
        </member>
        <member name="P:Toenda.Foundation.Audio.ID3v1.Track">
            <summary>
            Gets or sets the track.
            </summary>
            <value>The track.</value>
        </member>
        <member name="P:Toenda.Foundation.Audio.ID3v1.HasTag">
            <summary>
            Gets or sets a value indicating whether this instance has tag.
            </summary>
            <value><c>true</c> if this instance has tag; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Toenda.Foundation.Utility.Signature">
            <summary>
            Implements a data object for a signature
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.Signature.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Utility.Signature"/>
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.Signature.#ctor(System.String,Toenda.Foundation.Utility.SignatureType)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Utility.Signature"/>
            </summary>
            <param name="key"></param>
            <param name="type"></param>
        </member>
        <member name="M:Toenda.Foundation.Utility.Signature.ToString">
            <summary>
            Converts the signature object to a string
            </summary>
            <returns></returns>
        </member>
        <member name="P:Toenda.Foundation.Utility.Signature.Key">
            <summary>
            Gets or sets the key
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Utility.Signature.Type">
            <summary>
            Gets or sets the type
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Globalization.NationalHoliday">
            <summary>
            Provides informatione about a holiday.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Globalization.NationalHoliday.#ctor(System.DateTime,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Globalization.NationalHoliday"/> class.
            </summary>
            <param name="date">The date.</param>
            <param name="name">The name.</param>
            <param name="isStatic">if set to <c>true</c> [is static].</param>
        </member>
        <member name="M:Toenda.Foundation.Globalization.NationalHoliday.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings:
            Value
            Meaning
            Less than zero
            This instance is less than <paramref name="obj"/>.
            Zero
            This instance is equal to <paramref name="obj"/>.
            Greater than zero
            This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            	<paramref name="obj"/> is not the same type as this instance.
            </exception>
        </member>
        <member name="M:Toenda.Foundation.Globalization.NationalHoliday.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:Toenda.Foundation.Globalization.NationalHoliday.Date">
            <summary>
            Gets or sets the date.
            </summary>
            <value>The date.</value>
        </member>
        <member name="P:Toenda.Foundation.Globalization.NationalHoliday.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Toenda.Foundation.Globalization.NationalHoliday.IsStatic">
            <summary>
            Gets or sets a value indicating whether the holiday is static.
            </summary>
            <value><c>true</c> if the holiday is static; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Toenda.Foundation.ListExtensions">
            <summary>
            Class ListExtensions
            </summary>
        </member>
        <member name="M:Toenda.Foundation.ListExtensions.MaxCapacityReached``1(System.Collections.Generic.List{``0},System.Int64)">
            <summary>
            Maxes the capacity reached.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance">The instance.</param>
            <param name="maxValue">The max value.</param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Data.XmlNodeTemplateType">
            <summary>
            Provides some template node types.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.XmlNodeTemplateType.DocumentInfo">
            <summary>
            The node is a document info node.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.XmlNodeTemplateType.RootNode">
            <summary>
            The node is a root node.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.XmlNodeTemplateType.Node">
            <summary>
            The node is a default node.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.XmlNodeTemplateType.Element">
            <summary>
            The node is a element node.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.OS">
            <summary>
            Class OS
            </summary>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.OS.IsDotNetInstalled(Toenda.Foundation.SystemLayer.DotNetVersion)">
            <summary>
            Determines whether [is dot net installed] [the specified version].
            </summary>
            <param name="version">The version.</param>
            <returns>
            	<c>true</c> if [is dot net installed] [the specified version]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.OS.IsDotNetInstalled(System.Int32,System.Int32,System.Int32)">
            <summary>
            Determines whether [is dot net installed] [the specified major].
            </summary>
            <param name="major">The major.</param>
            <param name="minor">The minor.</param>
            <param name="build">The build.</param>
            <returns>
            	<c>true</c> if [is dot net installed] [the specified major]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.OS.IsDotNetVersionInstalled(System.Int32,System.Int32,System.Int32)">
            <summary>
            Determines whether [is dot net version installed] [the specified major].
            </summary>
            <param name="major">The major.</param>
            <param name="minor">The minor.</param>
            <param name="build">The build.</param>
            <returns>
            	<c>true</c> if [is dot net version installed] [the specified major]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.OS.CheckWindowsVersion(System.Int32,System.Int32,System.Int16)">
            <summary>
            Checks the windows version.
            </summary>
            <param name="major">The major.</param>
            <param name="minor">The minor.</param>
            <param name="servicePack">The service pack.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.OS.CheckOSRequirement">
            <summary>
            Checks the OS requirement.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Toenda.Foundation.SystemLayer.OS.IsVistaOrLater">
            <summary>
            Gets a value indicating whether this instance is vista or later.
            </summary>
            <value>
            	<c>true</c> if this instance is vista or later; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Toenda.Foundation.SystemLayer.OS.WindowsXP">
            <summary>
            Gets the windows XP.
            </summary>
            <value>The windows XP.</value>
        </member>
        <member name="P:Toenda.Foundation.SystemLayer.OS.WindowsServer2003">
            <summary>
            Gets the windows server2003.
            </summary>
            <value>The windows server2003.</value>
        </member>
        <member name="P:Toenda.Foundation.SystemLayer.OS.WindowsVista">
            <summary>
            Gets the windows vista.
            </summary>
            <value>The windows vista.</value>
        </member>
        <member name="P:Toenda.Foundation.SystemLayer.OS.Revision">
            <summary>
            Gets the revision.
            </summary>
            <value>The revision.</value>
        </member>
        <member name="P:Toenda.Foundation.SystemLayer.OS.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Toenda.Foundation.Data.ExcelExport">
            <summary>
            Class ExcelExport
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.#ctor">
            <summary>
            Default Ctor, Microsoft Excel must be installed.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.BuidExcelConnectionString(System.String)">
            <summary>
            Create a OLEDB connectionstring for the Excel connection
            </summary>
            <param name="filename">The filename (.xls).</param>
            <returns>The connectionstring.</returns>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.BulidExcelConnectionString(System.String,Toenda.Foundation.Data.ExcelExport.ExcelVersion)">
            <summary>
            Buids the excel connection string.
            </summary>
            <param name="filename">The filename.</param>
            <param name="version">The version.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.WriteTableSchemaToExcelFile(System.Data.DataTable,System.String)">
            <summary>
            Write the scheme of a table into a Excel table
            </summary>
            <param name="table">The table.</param>
            <param name="filename">The Excel filename.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.FillExcelSheet(System.Data.DataTable,System.String)">
            <summary>
            Create a Excel document from a table
            </summary>
            <param name="table">The table.</param>
            <param name="filename">The target filename.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.ExportDataListToWorksheet(Toenda.Foundation.Data.ExcelExport.Document,System.String)">
            <summary>
            Exports the data list to worksheet.
            </summary>
            <param name="dataSource">The data source.</param>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.ExportDocument(Toenda.Foundation.Data.ExcelExport.Document,System.String,System.Boolean)">
            <summary>
            Exports the data list to worksheet.
            </summary>
            <param name="dataSource">The data source.</param>
            <param name="fileName">Name of the file.</param>
            <param name="withEvents">if set to <c>true</c> [with events].</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.ExportToXml(System.Collections.Generic.List{Toenda.Foundation.Data.ExcelExport.DataContainer},System.String)">
            <summary>
            Exports to XML.
            </summary>
            <param name="dataSource">The data source.</param>
            <param name="sheetTitle">The sheet title.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.ExportToExcel(System.Collections.Generic.List{Toenda.Foundation.Data.ExcelExport.DataContainer},System.String,System.String)">
            <summary>
            Exports to excel.
            </summary>
            <param name="dataSource">The data source.</param>
            <param name="sheetTitle">The sheet title.</param>
            <param name="stylesheetPath">The stylesheet path.</param>
            <returns></returns>
        </member>
        <member name="E:Toenda.Foundation.Data.ExcelExport.ExcelExportResponse">
            <summary>
            Occurs when [excel export response].
            </summary>
        </member>
        <member name="E:Toenda.Foundation.Data.ExcelExport.ExcelExportFinish">
            <summary>
            Occurs when [excel export finish].
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.ExcelExport.ExcelExportEventHandler">
            <summary>
            Initializes a new instance of the ExcelExportEventHandler class.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.ExcelExport.ExcelExportFinishEventhandler">
            <summary>
            Initializes a new instance of the ExcelExportFinishEventhandler class.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.ExcelExport.ReturnValue">
            <summary>
            Provides Excel export return values.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ExcelExport.ReturnValue.ExcelNotInstalled">
            <summary>
            A value that indicates that Excel is not installed.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ExcelExport.ReturnValue.Successfull">
            <summary>
            Return message successfull.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ExcelExport.ReturnValue.UnknownError">
            <summary>
            Return unknown error.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ExcelExport.ReturnValue.DefaultExportError">
            <summary>
            Return default export error.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.ExcelExport.ExcelVersion">
            <summary>
            Provides some specific Excel versions
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ExcelExport.ExcelVersion.Unknown">
            <summary>
            Unknown version
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ExcelExport.ExcelVersion.Version10">
            <summary>
            Version 10.0 (Microsft Excel 2002 / XP)
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ExcelExport.ExcelVersion.Version11">
            <summary>
            Version 11.0 (Microsft Excel 2003 / MacOffice 2004)
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Data.ExcelExport.ExcelVersion.Version12">
            <summary>
            Version 12.0 (Microsft Excel 2007 / Excel:mac 2008)
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.ExcelExport.Document">
            <summary>
            Class Document
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.Document.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Data.ExcelExport.Document"/> class.
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.ExcelExport.Document.ColumnAndCellCount">
            <summary>
            Gets the column and row count.
            </summary>
            <value>The column and row count.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.ExcelExport.Document.SheetTitle">
            <summary>
            Gets or sets the sheet title.
            </summary>
            <value>The sheet title.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.ExcelExport.Document.Columns">
            <summary>
            Gets the columns.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.ExcelExport.Document.Data">
            <summary>
            Gets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Toenda.Foundation.Data.ExcelExport.DataContainer">
            <summary>
            Class DataContainer
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.DataContainer.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.ExcelExport.DataContainer.Cells">
            <summary>
            Get the cells
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.ExcelExport.TableColumn">
            <summary>
            Class TableColumn
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.ExcelExport.TableColumn.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.ExcelExport.TableColumn.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.ExcelExport.TableColumn.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.ExcelExport.TableColumn.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Toenda.Foundation.Data.ExcelExport.TableCell">
            <summary>
            Class TableCell
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.ExcelExport.TableCell.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.ExcelExport.TableCell.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.ExcelExport.TableCell.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Toenda.Foundation.Data.ExcelExport.ExcelExportHelper">
            <summary>
            Class ExcelExportHelper
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.ExcelExportHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Data.ExcelExport.ExcelExportHelper"/> class.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.ExcelExportHelper.ApplyExcelStylesheet(System.Xml.XmlDocument,System.String)">
            <summary>
            Applies the excel stylesheet.
            </summary>
            <param name="doc">The doc.</param>
            <param name="stylesheetPath">The stylesheet path.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.ExcelExportHelper.GetPropertyValue``1(``0,System.String)">
            <summary>
            Gets the property value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="o">The o.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.ExcelExportHelper.AddTitle(System.String)">
            <summary>
            Adds the title.
            </summary>
            <param name="fname">The fname.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.ExcelExportHelper.AddField``1(System.Collections.Generic.List{``0},System.String,System.String)">
            <summary>
            Adds the field.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="rl">The rl.</param>
            <param name="fdesc">The fdesc.</param>
            <param name="fname">The fname.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.ExcelExportHelper.AddField``1(System.Collections.Generic.List{``0},System.String,System.String,System.Boolean)">
            <summary>
            Adds the field.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="rl">The rl.</param>
            <param name="fdesc">The fdesc.</param>
            <param name="fname">The fname.</param>
            <param name="title">if set to <c>true</c> [title].</param>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.ExcelExportHelper.AddField``1(System.Collections.Generic.List{``0},System.String,System.String,System.Boolean,Toenda.Foundation.Data.ExcelExport.ExcelExportHelper.GetCustomPropValue{``0})">
            <summary>
            Adds the field.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="rl">The rl.</param>
            <param name="fdesc">The fdesc.</param>
            <param name="fname">The fname.</param>
            <param name="title">if set to <c>true</c> [title].</param>
            <param name="getValue">The get value.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.ExcelExport.ExcelExportHelper.GetXml">
            <summary>
            Gets the XML.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Toenda.Foundation.Data.ExcelExport.ExcelExportHelper.SheetTitle">
            <summary>
            Gets or sets the sheet title.
            </summary>
            <value>The sheet title.</value>
        </member>
        <member name="T:Toenda.Foundation.Data.ExcelExport.ExcelExportHelper.GetCustomPropValue`1">
            <summary>
            GetCustomPropValue
            </summary>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.WindowsRegistry">
            <summary>
            Class WindowsRegistry
            </summary>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsRegistry.ReadKeyValues(Toenda.Foundation.SystemLayer.KeyStartPoint,System.String)">
            <summary>
            Read a key from the registry
            </summary>
            <param name="start"></param>
            <param name="path"></param>
            <param name="subKey"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">If parameter start or path is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsRegistry.ReadKey(Toenda.Foundation.SystemLayer.KeyStartPoint,System.String,System.String)">
            <summary>
            Read a key from the registry
            </summary>
            <param name="start"></param>
            <param name="path"></param>
            <param name="subKey"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">If parameter start, path or subKeys is null.</exception>
        </member>
        <member name="T:Toenda.Foundation.Utility.ObjectConverter">
            <summary>
            Class ObjectConverter
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.ObjectConverter.DisplayObject(System.Object)">
            <summary>
            Displays a object with all property on the console
            </summary>
            <param name="toDisplay"></param>
        </member>
        <member name="M:Toenda.Foundation.Utility.ObjectConverter.ConvertObjects(System.Object,System.Object,System.Reflection.BindingFlags)">
            <summary>
            Converts the objects.
            </summary>
            <param name="toConvert">To convert.</param>
            <param name="targetObject">The target object.</param>
            <param name="conOptions">The con options.</param>
        </member>
        <member name="M:Toenda.Foundation.Utility.ObjectConverter.ConvertObjects(System.Object,System.Object)">
            <summary>
            Converts the objects.
            </summary>
            <param name="toConvert">To convert.</param>
            <param name="targetObject">The target object.</param>
        </member>
        <member name="T:Toenda.Foundation.Globalization.CountryCode">
            <summary>
            Implements the data object for the country
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Globalization.CountryCode.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Globalization.CountryCode"/>
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Globalization.CountryCode.#ctor(System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.String)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.Globalization.CountryCode"/>
            </summary>
            <param name="countryName"></param>
            <param name="isoTwo"></param>
            <param name="isoThree"></param>
            <param name="countryNumber"></param>
            <param name="currency"></param>
            <param name="currencyNumber"></param>
            <param name="currencyName"></param>
        </member>
        <member name="M:Toenda.Foundation.Globalization.CountryCode.InitializeOnRequest(System.String)">
            <summary>
            Initializes this object, if it isnt yet. Maybe this has to, 
            if the object is created manually without loading by the provider
            </summary>
            <param name="field"></param>
        </member>
        <member name="P:Toenda.Foundation.Globalization.CountryCode.CountryName">
            <summary>
            Get or set the name of the country
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.CountryCode.TwoLetterISOLanguageName">
            <summary>
            Get or set the two letter ISO name
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.CountryCode.ThreeLetterISOLanguageName">
            <summary>
            Get or set the three letter ISO name
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.CountryCode.CountryNumber">
            <summary>
            Get or set the number of the country
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.CountryCode.Currency">
            <summary>
            Get or set the currency
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.CountryCode.CurrencyNumber">
            <summary>
            Get or set the currency number
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Globalization.CountryCode.CurrencyName">
            <summary>
            Get or set the name of the currency
            </summary>
        </member>
        <member name="T:Toenda.Foundation.UriParameter">
            <summary>
            Struct UriParameter
            </summary>
        </member>
        <member name="M:Toenda.Foundation.UriParameter.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.UriParameter"/> struct.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Toenda.Foundation.UriParameter.#ctor(Toenda.Foundation.UriParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.UriParameter"/> struct.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Toenda.Foundation.UriParameter.op_Implicit(System.String)~Toenda.Foundation.UriParameter">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:Toenda.Foundation.UriParameter"/>.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Toenda.Foundation.UriParameter.ToString">
            <summary>
            Returns the parameter as querystring fragment
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing a fully qualified type name.
            </returns>
        </member>
        <member name="P:Toenda.Foundation.UriParameter.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Toenda.Foundation.UriParameter.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.ProcessorArchitecture">
            <summary>
            Describes the processor architecture.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.ProcessorArchitecture.X86">
            <summary>
            The processor is a X86 (32-Bit) processor.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.ProcessorArchitecture.X64">
            <summary>
            The processor is a X64 (64-Bit) processor.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.ProcessorArchitecture.Unknown">
            <summary>
            The processor is unknown.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.SystemLayer.WindowsEnvironment">
            <summary>
            Class WindowsEnvironment
            </summary>
        </member>
        <member name="F:Toenda.Foundation.SystemLayer.WindowsEnvironment.Self">
            <summary>
            Self
            </summary>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsEnvironment.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsEnvironment.GetVariable(System.String)">
            <summary>
            Get the value of a variable (The variable target is Machine for default)
            </summary>
            <param name="key">The variable key.</param>
            <returns>Returns the value.</returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsEnvironment.GetVariable(System.String,System.EnvironmentVariableTarget)">
            <summary>
            Get the value of a variable
            </summary>
            <param name="key">The variable key.</param>
            <param name="target">The variable target.</param>
            <returns>Returns the value.</returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsEnvironment.AddVariable(System.String,System.String)">
            <summary>
            Add a variable to a key (The variable target is Machine for default)
            </summary>
            <param name="key">The variable key.</param>
            <param name="value">The variable value.</param>
            <returns>Returns true if the key has found and returns false if the key does not exist.</returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsEnvironment.AddVariable(System.String,System.String,System.Boolean)">
            <summary>
            Add a variable to a key (The variable target is Machine for default)
            </summary>
            <param name="key">The variable key.</param>
            <param name="value">The variable value.</param>
            <param name="writeCompleteValue">A value that indicates if we should overwrite the complete value.</param>
            <returns>Returns true if the key has found and returns false if the key does not exist.</returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsEnvironment.AddVariable(System.String,System.String,System.EnvironmentVariableTarget)">
            <summary>
            Add a variable to a key (The variable target is Machine for default)
            </summary>
            <param name="key">The variable key.</param>
            <param name="value">The variable value.</param>
            <param name="target">The variable target.</param>
            <returns>Returns true if the key has found and returns false if the key does not exist.</returns>
        </member>
        <member name="M:Toenda.Foundation.SystemLayer.WindowsEnvironment.AddVariable(System.String,System.String,System.Boolean,System.EnvironmentVariableTarget)">
            <summary>
            Add a variable to a key
            </summary>
            <param name="key">The variable key.</param>
            <param name="value">The variable value.</param>
            <param name="writeCompleteValue">A value that indicates if we should overwrite the complete value.</param>
            <param name="target">The variable target.</param>
            <returns>Returns true if the key has found and returns false if the key does not exist.</returns>
        </member>
        <member name="T:Toenda.Foundation.Utility.Helper">
            <summary>
            Class Helper
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.Helper.GenerateRandomString(System.Int32,System.Boolean)">
            <summary>
            Generate a random string, possible for passwords and passkeys
            </summary>
            <param name="length"></param>
            <param name="withSpecialChars"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Helper.ToString(System.Object)">
            <summary>
            Dispaly a object
            </summary>
            <param name="objectToDisplay"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Helper.ToString(System.Object,System.Int32)">
            <summary>
            Dispaly a object
            </summary>
            <param name="objectToDisplay"></param>
            <param name="isRoot"></param>
            <returns></returns>
        </member>
        <member name="P:Toenda.Foundation.Utility.Helper.NewGuid">
            <summary>
            Get a new guid
            </summary>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.IO.FileSystem">
            <summary>
            Class FileSystem
            </summary>
        </member>
        <member name="F:Toenda.Foundation.IO.FileSystem.Self">
            <summary>
            Self
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.FileSystem.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.FileSystem.OpenFile(System.String,System.Boolean,System.Boolean)">
            <summary>
            Open a filestream
            </summary>
            <param name="filename">The name including path of the file</param>
            <param name="forWriting">if set to <c>true</c> [for writing].</param>
            <param name="append">True if you want to append to the file</param>
        </member>
        <member name="M:Toenda.Foundation.IO.FileSystem.CloseFile">
            <summary>
            Close the open file
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.FileSystem.ReadLine">
            <summary>
            Read a line of text
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.IO.FileSystem.GetDirectoryNameFromPath(System.String)">
            <summary>
            Checks if a path is a filename (including path) or a directory and return the directory name
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.IO.FileSystem.IsPathIsDirectoryName(System.String)">
            <summary>
            Checks if a path is a directory name (or returns false if it is a filename incl. path)
            </summary>
            <param name="path">The path.</param>
            <returns>
            	<c>true</c> if [is path is directory name] [the specified path]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.IO.FileSystem.IsPathIsFilename(System.String)">
            <summary>
            Checks if a path is a directory name (or returns false if it is a filename incl. path)
            </summary>
            <param name="filename">The filename.</param>
            <returns>
            	<c>true</c> if [is path is filename] [the specified filename]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.IO.FileSystem.GetDirectory(System.String)">
            <summary>
            Get a directory and create it before, if it doesn't exist
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.IO.FileSystem.GetDirectory(System.String,System.Boolean)">
            <summary>
            Get a directory and create it before, if it doesn't exist
            </summary>
            <param name="path">The path.</param>
            <param name="createIfNotExist">if set to <c>true</c> [create if not exist].</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.IO.FileSystem.CheckFileExist(System.String)">
            <summary>
            Checks if a file exist
            </summary>
            <param name="filename">The filename.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.IO.FileSystem.FileSize(System.String)">
            <summary>
            Get the size of a file
            </summary>
            <param name="filename">The filename.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.IO.FileSystem.DeleteFile(System.String)">
            <summary>
            Delete a file
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:Toenda.Foundation.IO.FileSystem.WaitForFinishCopying">
            <summary>
            Wait for finish the copying action
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.FileSystem.CopyFile(System.String,System.String,System.Int32)">
            <summary>
            Copy a file in apckages (with eventhandler) -&gt; to TFL
            </summary>
            <param name="sourceFilename">The source filename.</param>
            <param name="targetFilename">The target filename.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <returns></returns>
        </member>
        <member name="E:Toenda.Foundation.IO.FileSystem.FileCopyResponse">
            <summary>
            Occurs when [file copy response].
            </summary>
        </member>
        <member name="E:Toenda.Foundation.IO.FileSystem.FileCopyFinish">
            <summary>
            Occurs when [file copy finish].
            </summary>
        </member>
        <member name="P:Toenda.Foundation.IO.FileSystem.FileIsEndOfStream">
            <summary>
            Get a value that indicates if the file id at the end of the stream
            </summary>
            <value><c>true</c> if [file is end of stream]; otherwise, <c>false</c>.</value>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.IO.FileSystem.FileCopyEventHandler">
            <summary>
            Initializes a new instance of the FileCopyEventHandler class.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.IO.FileSystem.FileCopyFinishEventhandler">
            <summary>
            Initializes a new instance of the FileCopyFinishEventhandler class.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Data.SimpleDAL">
            <summary>
            Class SimpleDAL
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.#ctor(Toenda.Foundation.Data.DALSettings)">
            <summary>
            Specialized Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.OpenConnection">
            <summary>
            Open a connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.CloseConnection">
            <summary>
            Close the connection
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.CreateCommand">
            <summary>Creates a command object for the current provider type.</summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.ExecuteNonQuery(System.String)">
            <summary>
            Execute a non-query query
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.ExecuteNonQuery(System.Data.IDbCommand)">
            <summary>Executes a statement.</summary>
            <param name="cmd">The command to execute</param>
            <returns>The number of records affected</returns>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.ExecuteQuery(System.String)">
            <summary>
            Execute a query
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.ExecuteQuery(System.String,System.Data.CommandType)">
            <summary>
            Execute a query
            </summary>
            <param name="query"></param>
            <param name="cmdtype"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.ExecuteQuery(System.Data.IDbCommand)">
            <summary>
            Executes the query.
            </summary>
            <param name="cmd">The CMD.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.ExecuteQueryForDataReader(System.Data.IDbCommand)">
            <summary>Executes a command.</summary>
            <param name="cmd">The command to execute</param>
            <returns>An IDataReader for the resultset of the executed command.</returns>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.ExecuteQueryForDataReader(System.String,System.Data.CommandType)">
            <summary>
            Execute a query (connection must be manually open and close)
            </summary>
            <param name="query"></param>
            <param name="cmdtype"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.ExecuteQueryForDataTableReader(System.Data.IDbCommand)">
            <summary>
            Executes the query for data table reader.
            </summary>
            <param name="cmd">The CMD.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.ExecuteQueryForDataTableReader(System.String,System.Data.CommandType)">
            <summary>
            Execute a query
            </summary>
            <param name="query"></param>
            <param name="cmdtype"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.ExecuteScalar(System.Data.IDbCommand)">
            <summary>Executes a query for a single value.</summary>
            <param name="cmd">The command to execute.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.ExecuteScalar(System.String,System.Data.CommandType)">
            <summary>Executes a query for a single value.</summary>
            <param name="query">The query to execute.</param>
            <param name="cmdType">Type of the command.</param>
            <returns>The first cell in the first row of the resultset.</returns>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL.ExecuteUpdate(System.Data.DataSet,System.String)">
            <summary>
            Execute a update
            </summary>
            <param name="data"></param>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Data.SimpleDAL._GetDataAdapter(System.Data.IDbCommand)">
            <summary>
            Get a data adapter from a command
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="P:Toenda.Foundation.Data.SimpleDAL.CommandTimeout">
            <summary>
            Set the command timeout
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Data.SimpleDAL.CommandTimeoutInSeconds">
            <summary>
            Set the command timeout
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Utility.MailContainer">
            <summary>
            Class MailContainer
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.MailContainer.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.MailContainer.#ctor(System.String,System.String)">
            <summary>
            Specific Ctor
            </summary>
            <param name="name"></param>
            <param name="mail"></param>
        </member>
        <member name="P:Toenda.Foundation.Utility.MailContainer.Name">
            <summary>
            Get or set the name
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Utility.MailContainer.Mail">
            <summary>
            Get or set the mail
            </summary>
        </member>
        <member name="T:Toenda.Foundation.ISIN">
            <summary>
            The ISIN struct represents a International Securities Identification Number
            </summary>
        </member>
        <member name="M:Toenda.Foundation.ISIN.#ctor(System.String)">
            <summary>
            Creates a new object of <see cref="T:Toenda.Foundation.ISIN"/>
            </summary>
            <param name="isin">A string that contains a ISIN.</param>
        </member>
        <member name="M:Toenda.Foundation.ISIN.#ctor(System.String,System.String)">
            <summary>
            Creates a new object of <see cref="T:Toenda.Foundation.ISIN"/>
            </summary>
            <param name="countryPart">The country part of a ISIN.</param>
            <param name="nsinPart">The NSIN part of a ISIN.</param>
        </member>
        <member name="M:Toenda.Foundation.ISIN.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Creates a new object of <see cref="T:Toenda.Foundation.ISIN"/>
            </summary>
            <param name="countryPart">The country part of a ISIN.</param>
            <param name="nsinPart">The NSIN part of a ISIN.</param>
            <param name="checkNumber">The checknumber of the ISIN.</param>
        </member>
        <member name="M:Toenda.Foundation.ISIN.ToString">
            <summary>
            Returns a string that represents a ISIN number
            </summary>
            <returns>Returns a string that represents a ISIN number.</returns>
        </member>
        <member name="M:Toenda.Foundation.ISIN.GetHashCode">
            <summary>
            Returns the hashcode of the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.ISIN.op_Implicit(System.String)~Toenda.Foundation.ISIN">
            <summary>
            Converts implizit a string containing a ISIN to a ISIN object
            </summary>
            <param name="isin">A string that contains a ISIN.</param>
            <returns>Returns a ISIN object on base of a string containing a ISIN.</returns>
        </member>
        <member name="M:Toenda.Foundation.ISIN.op_Implicit(Toenda.Foundation.ISIN)~System.String">
            <summary>
            Converts implizit a ISIN object to a string
            </summary>
            <param name="isin">The ISIN object to be converted.</param>
            <returns>Returns a string containing a ISIN.</returns>
        </member>
        <member name="M:Toenda.Foundation.ISIN.Equals(System.Object)">
            <summary>
            Checks if a object equals the current object
            </summary>
            <param name="obj">Another ISIN object.</param>
            <returns>Returns a value indicating if the parameter object equals the current object.</returns>
        </member>
        <member name="M:Toenda.Foundation.ISIN.op_Equality(Toenda.Foundation.ISIN,Toenda.Foundation.ISIN)">
            <summary>
            Checks if the first ISIN object equals the second ISIN object
            </summary>
            <param name="isin1">The first ISIN object.</param>
            <param name="isin2">The second ISIN object.</param>
            <returns>Returns a value indicating if the first ISIN object equals the second ISIN object.</returns>
        </member>
        <member name="M:Toenda.Foundation.ISIN.op_Inequality(Toenda.Foundation.ISIN,Toenda.Foundation.ISIN)">
            <summary>
            Checks if the first ISIN object does not equal the second ISIN object
            </summary>
            <param name="isin1">The first ISIN object.</param>
            <param name="isin2">The second ISIN object.</param>
            <returns>Returns a value indicating if the first ISIN object does not equal the second ISIN object.</returns>
        </member>
        <member name="M:Toenda.Foundation.ISIN.ContainsSpecialChars">
            <summary>
            Checks the internal parts of the ISIN for special characters
            </summary>
            <returns>Returns a value indicating if the internal parts of the ISIN contains special characters.</returns>
        </member>
        <member name="M:Toenda.Foundation.ISIN.IsISIN(System.String)">
            <summary>
            Checks if a string is a ISIN
            </summary>
            <param name="value">A string that could contain a ISIN.</param>
            <returns>Returns a value indicating if the string containing a ISIN.</returns>
        </member>
        <member name="M:Toenda.Foundation.ISIN.TryParse(System.String,Toenda.Foundation.ISIN@)">
            <summary>
            Parse a string into a ISIN object and computes the check number if there is no check number
            </summary>
            <param name="value">A string containing a ISIN</param>
            <param name="isin">The value that could be set</param>
            <returns>Returns a value indicating if the string could be parsed to a ISIN.</returns>
        </member>
        <member name="M:Toenda.Foundation.ISIN.Parse(System.String)">
            <summary>
            Parse a string into a ISIN object and computes the check number if there is no check number
            </summary>
            <param name="value">A string containing a ISIN</param>
            <returns>Returns a ISIN object.</returns>
        </member>
        <member name="M:Toenda.Foundation.ISIN.ComputeChecksum(System.String)">
            <summary>
            Computes a checknumber on base of the double-add-double method
            </summary>
            <param name="value">A value for the double-add-double method</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.ISIN.ContainsSpecialChars(System.String,System.String)">
            <summary>
            Checks the two base parts of the ISIN for special characters
            </summary>
            <param name="country">The country part to check.</param>
            <param name="nsin">The nsin part to check.</param>
            <returns>Returns a value indicating if the two base parts of the ISIN contains special characters.</returns>
        </member>
        <member name="P:Toenda.Foundation.ISIN.CountryPart">
            <summary>
            Get or set the country part
            </summary>
        </member>
        <member name="P:Toenda.Foundation.ISIN.NsinPart">
            <summary>
            Get or set the NSIN part
            </summary>
        </member>
        <member name="P:Toenda.Foundation.ISIN.CheckNumber">
            <summary>
            Get or set the check number
            </summary>
        </member>
        <member name="P:Toenda.Foundation.ISIN.IsNull">
            <summary>
            Provides a value that indicates if the ISIN is null
            </summary>
        </member>
        <member name="T:Toenda.Foundation.CUSIP">
            <summary>
            Implements a Securities Identification Number from the CUSIP group
            </summary>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.#ctor(System.String)">
            <summary>
            Creates a new object of <see cref="T:Toenda.Foundation.CUSIP"/>
            </summary>
            <param name="value">A string that contains a CUSIP.</param>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.#ctor(System.String,System.String)">
            <summary>
            Creates a new object of <see cref="T:Toenda.Foundation.CUSIP"/>
            </summary>
            <param name="emitent">The emitent part of a CUSIP.</param>
            <param name="type">The type part of a CUSIP.</param>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Creates a new object of <see cref="T:Toenda.Foundation.CUSIP"/>
            </summary>
            <param name="emitent">The emitent part of a CUSIP.</param>
            <param name="type">The type part of a CUSIP.</param>
            <param name="checkNumber">The checknumber of the CUSIP.</param>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.ToString">
            <summary>
            Returns a string that represents a CUSIP number
            </summary>
            <returns>Returns a string that represents a CUSIP number.</returns>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.GetHashCode">
            <summary>
            Returns the hashcode of the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.op_Implicit(System.String)~Toenda.Foundation.CUSIP">
            <summary>
            Converts implizit a string containing a CUSIP to a CUSIP object
            </summary>
            <param name="cusip">A string that contains a CUSIP.</param>
            <returns>Returns a CUSIP object on base of a string containing a CUSIP.</returns>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.op_Implicit(Toenda.Foundation.CUSIP)~System.String">
            <summary>
            Converts implizit a CUSIP object to a string
            </summary>
            <param name="cusip">The CUSIP object to be converted.</param>
            <returns>Returns a string containing a CUSIP.</returns>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.Equals(System.Object)">
            <summary>
            Checks if a object equals the current object
            </summary>
            <param name="obj">Another CUSIP object.</param>
            <returns>Returns a value indicating if the parameter object equals the current object.</returns>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.op_Equality(Toenda.Foundation.CUSIP,Toenda.Foundation.CUSIP)">
            <summary>
            Checks if the first CUSIP object equals the second CUSIP object
            </summary>
            <param name="cusip1">The first CUSIP object.</param>
            <param name="cusip2">The second CUSIP object.</param>
            <returns>Returns a value indicating if the first CUSIP object equals the second CUSIP object.</returns>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.op_Inequality(Toenda.Foundation.CUSIP,Toenda.Foundation.CUSIP)">
            <summary>
            Checks if the first CUSIP object does not equal the second CUSIP object
            </summary>
            <param name="cusip1">The first CUSIP object.</param>
            <param name="cusip2">The second CUSIP object.</param>
            <returns>Returns a value indicating if the first CUSIP object does not equal the second CUSIP object.</returns>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.ContainsSpecialChars">
            <summary>
            Checks the internal parts of the CUSIP for special characters
            </summary>
            <returns>Returns a value indicating if the internal parts of the CUSIP contains special characters.</returns>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.IsCUSIP(System.String)">
            <summary>
            Checks if a string is a CUSIP
            </summary>
            <param name="value">A string that could contain a CUSIP.</param>
            <returns>Returns a value indicating if the string containing a CUSIP.</returns>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.TryParse(System.String,Toenda.Foundation.CUSIP@)">
            <summary>
            Parse a string into a CUSIP object and computes the check number if there is no check number
            </summary>
            <param name="value">A string containing a CUSIP</param>
            <param name="cusip">The value that could be set</param>
            <returns>Returns a value indicating if the string could be parsed to a CUSIP.</returns>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.Parse(System.String)">
            <summary>
            Parse a string into a CUSIP object and computes the check number if there is no check number
            </summary>
            <param name="value">A string containing a CUSIP</param>
            <returns>Returns a CUSIP object.</returns>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.ComputeChecksum(System.String)">
            <summary>
            Computes a checknumber on base of the double-add-double method
            </summary>
            <param name="value">A value for the double-add-double method</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.CUSIP.ContainsSpecialChars(System.String,System.String)">
            <summary>
            Checks the two base parts of the CUSIP for special characters
            </summary>
            <param name="emitent">The emitent part to check.</param>
            <param name="type">The type part to check.</param>
            <returns>Returns a value indicating if the two base parts of the CUSIP contains special characters.</returns>
        </member>
        <member name="P:Toenda.Foundation.CUSIP.Emitent">
            <summary>
            Get or set the emitent part
            </summary>
        </member>
        <member name="P:Toenda.Foundation.CUSIP.Type">
            <summary>
            Get or set the _type part
            </summary>
        </member>
        <member name="P:Toenda.Foundation.CUSIP.CheckNumber">
            <summary>
            Get or set the check number
            </summary>
        </member>
        <member name="P:Toenda.Foundation.CUSIP.IsNull">
            <summary>
            Provides a value that indicates if the CUSIP is null
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Messaging.MessageSortParam">
            <summary>
            Provides properties to get a list of internal messages sorted.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Messaging.MessageSortParam.#ctor">
            <summary>
            Initialisiert ein neues <see cref="T:Toenda.Foundation.Messaging.MessageSortParam"/> Objekt.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Messaging.MessageSortParam.#ctor(System.String)">
            <summary>
            Initialisiert ein neues <see cref="T:Toenda.Foundation.Messaging.MessageSortParam"/> Objekt.
            </summary>
            <param name="expression">
            Die Beschreibung. </param>
        </member>
        <member name="M:Toenda.Foundation.Messaging.MessageSortParam.#ctor(System.String,Toenda.Foundation.DataSortDirection)">
            <summary>
            Initialisiert ein neues <see cref="T:Toenda.Foundation.Messaging.MessageSortParam"/> Objekt.
            </summary>
            <param name="expression">
            Die Beschreibung. </param>
            <param name="direction">
            Die Sortierrichtung. </param>
        </member>
        <member name="P:Toenda.Foundation.Messaging.MessageSortParam.Direction">
            <summary>
            Gibt die Sortierichtung zurück, oder legt diese fest.
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Messaging.MessageSortParam.Expression">
            <summary>
            Gibt die Beschreibung zurück, oder legt diese fest.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Int32Extensions">
            <summary>
            Implements integer extensions
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Int32Extensions.ToChar(System.Int32)">
            <summary>
            Converts a integer value to it's corresponding char value
            </summary>
            <param name="instance">The instance of the integer value.</param>
            <returns>A char value that is represented by the instance of the integer value.</returns>
        </member>
        <member name="M:Toenda.Foundation.Int32Extensions.IsPrimeNumber(System.Int32)">
            <summary>
            Checks if a number is a prim number
            </summary>
            <param name="instance">The number to check.</param>
            <returns>Returns a value that indicates if the number is a prim number.</returns>
        </member>
        <member name="M:Toenda.Foundation.Int32Extensions.NextPrimNumber(System.Int32)">
            <summary>
            Get the next prim number
            </summary>
            <param name="instance">The int instance.</param>
            <returns>Returns the next prime number.</returns>
        </member>
        <member name="M:Toenda.Foundation.Int32Extensions.PreviousPrimNumber(System.Int32)">
            <summary>
            Get the previous prim number
            </summary>
            <param name="instance">The int instance.</param>
            <returns>Returns the previous prime number.</returns>
        </member>
        <member name="M:Toenda.Foundation.Int32Extensions.Years(System.Int32)">
            <summary>
            Returns a datetime representation of the integer as years
            </summary>
            <param name="instance">The integer instance.</param>
            <returns>Returns a datetime instance representating the current value as years.</returns>
        </member>
        <member name="M:Toenda.Foundation.Int32Extensions.Months(System.Int32)">
            <summary>
            Returns a datetime representation of the integer as months
            </summary>
            <param name="instance">The integer instance.</param>
            <returns>Returns a datetime instance representating the current value as months.</returns>
        </member>
        <member name="M:Toenda.Foundation.Int32Extensions.Weeks(System.Int32)">
            <summary>
            Returns a timespan representation of the integer as weeks
            </summary>
            <param name="instance">The integer instance.</param>
            <returns>Returns a timespan instance representating the current value as weeks.</returns>
        </member>
        <member name="M:Toenda.Foundation.Int32Extensions.Days(System.Int32)">
            <summary>
            Returns a timespan representation of the integer as days
            </summary>
            <param name="instance">The integer instance.</param>
            <returns>Returns a timespan instance representating the current value as days.</returns>
        </member>
        <member name="M:Toenda.Foundation.Int32Extensions.Hours(System.Int32)">
            <summary>
            Returns a timespan representation of the integer as hours
            </summary>
            <param name="instance">The integer instance.</param>
            <returns>Returns a timespan instance representating the current value as hours.</returns>
        </member>
        <member name="M:Toenda.Foundation.Int32Extensions.Minutes(System.Int32)">
            <summary>
            Returns a timespan representation of the integer as minutes
            </summary>
            <param name="instance">The integer instance.</param>
            <returns>Returns a timespan instance representating the current value as minutes.</returns>
        </member>
        <member name="M:Toenda.Foundation.Int32Extensions.Seconds(System.Int32)">
            <summary>
            Returns a timespan representation of the integer as seconds
            </summary>
            <param name="instance">The integer instance.</param>
            <returns>Returns a timespan instance representating the current value as seconds.</returns>
        </member>
        <member name="M:Toenda.Foundation.Int32Extensions.Milliseconds(System.Int32)">
            <summary>
            Returns a timespan representation of the integer as milliseconds
            </summary>
            <param name="instance">The integer instance.</param>
            <returns>Returns a timespan instance representating the current value as milliseconds.</returns>
        </member>
        <member name="T:Toenda.Foundation.Data.XmlNodeTemplate">
            <summary>
            Class XmlNodeType
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlNodeTemplate.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlNodeTemplate.#ctor(Toenda.Foundation.Data.XmlNodeTemplateType,System.String,System.String)">
            <summary>
            Specific constructor
            </summary>
            <param name="type">The type.</param>
            <param name="nodeName">Name of the node.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlNodeTemplate.#ctor(Toenda.Foundation.Data.XmlNodeTemplateType,System.String,System.String,System.String,System.String)">
            <summary>
            Specific constructor
            </summary>
            <param name="type">The type.</param>
            <param name="nodeName">Name of the node.</param>
            <param name="value">The value.</param>
            <param name="attribute">The attribute.</param>
            <param name="attributeValue">The attribute value.</param>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlNodeTemplate.#ctor(Toenda.Foundation.Data.XmlNodeTemplateType,System.String,System.String,System.Collections.Generic.List{Toenda.Foundation.Data.XmlAttributeTemplate})">
            <summary>
            Specific constructor
            </summary>
            <param name="type">The type.</param>
            <param name="nodeName">Name of the node.</param>
            <param name="value">The value.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlNodeTemplate.Type">
            <summary>
            Get or set the type
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlNodeTemplate.Name">
            <summary>
            Get or set the node name
            </summary>
            <value>The name of the node.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlNodeTemplate.Value">
            <summary>
            Get or set the value
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlNodeTemplate.AttributeName">
            <summary>
            Get or set the attribute
            </summary>
            <value>The attribute.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlNodeTemplate.AttributeValue">
            <summary>
            Get or set the attribute value
            </summary>
            <value>The attribute value.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlNodeTemplate.Attributes">
            <summary>
            Get or set the attribute templates list
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlNodeTemplate.ChildNodes">
            <summary>
            Get or set the attribute templates list
            </summary>
            <value>The children.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlNodeTemplate.HasChildNodes">
            <summary>
            Get a value that indicates that this element has child nodes
            </summary>
            <value>
            	<c>true</c> if this instance has attribute; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlNodeTemplate.HasAttribute">
            <summary>
            Get a value that indicates that this element has a attribute
            </summary>
            <value>
            	<c>true</c> if this instance has attribute; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlNodeTemplate.HasOnlySingleAttribute">
            <summary>
            Get a value that indicates that this element has a attribute
            </summary>
            <value>
            	<c>true</c> if this instance has attribute; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlNodeTemplate.HasAttributeList">
            <summary>
            Get a value that indicates that this element has a list of attribute
            </summary>
            <value>
            	<c>true</c> if this instance has attributes list; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Toenda.Foundation.DataSortDirection">
            <summary>
            Specifies how rows of data are sorted. 
            </summary>
        </member>
        <member name="F:Toenda.Foundation.DataSortDirection.Unspecified">
            <summary>
            The default. No sort order is specified.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.DataSortDirection.Ascending">
            <summary>
            Rows are sorted in ascending order.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.DataSortDirection.Descending">
            <summary>
            Rows are sorted in descending order.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Mathematics.Financial">
            <summary>
            Class Financial
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Mathematics.Financial.Self">
            <summary>
            Self -> Obsolete
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.ExtractPrice(System.String)">
            <summary>
            Extract a price from a string and remove the nagative, if exist (from format -0.00 € and 0.00 €)
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">If value is null.</exception>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.ConvertPrice(System.Double)">
            <summary>
            Converts the price.
            </summary>
            <param name="price">The price.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.FormatCurrencyString(System.Double)">
            <summary>
            Formats the currency string.
            </summary>
            <param name="price">The price.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.GetSalesTaxRateFromGrossPrice(System.Double,System.Double)">
            <summary>
            Get the tax key from the prices
            </summary>
            <param name="grossPrice">The gross price.</param>
            <param name="clearPrice">The clear price.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.GetSalesTaxFromGrossPrice(System.Double,System.Int32)">
            <summary>
            Get the tax (mwst) price
            ???
            </summary>
            <param name="soldprice">The soldprice.</param>
            <param name="taxRate">The tax rate.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.GetSalesTaxFromGrossPrice(System.Double,System.Double)">
            <summary>
            Get the tax (mwst) price
            ???
            </summary>
            <param name="soldprice">The soldprice.</param>
            <param name="taxRate">The tax rate.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.GetClearPriceFromGrossPrice(System.Double,System.Int32)">
            <summary>
            Get the clear (netto) price
            ???
            </summary>
            <param name="soldprice">The soldprice.</param>
            <param name="taxRate">The tax rate.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.GetClearPriceFromGrossPrice(System.Double,System.Double)">
            <summary>
            Get the clear (netto) price
            ???
            </summary>
            <param name="soldprice">The soldprice.</param>
            <param name="taxRate">The tax rate.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.GetSalesTaxForClearPrice(System.Double,System.Int32)">
            <summary>
            Get the sales tax price for a clear price
            </summary>
            <param name="clearPrice">The clear price.</param>
            <param name="taxRate">The tax rate.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.GetSalesTaxForClearPrice(System.Double,System.Double)">
            <summary>
            Get the sales tax price for a clear price
            </summary>
            <param name="clearPrice">The clear price.</param>
            <param name="taxRate">The tax rate.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.ComputeSumByPriceOfHour(System.Int32,System.Double)">
            <summary>
            Compute the sum
            </summary>
            <param name="timeInMinutes">The time in minutes.</param>
            <param name="tarif">The tarif.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.GetGrossPriceFromClearPrice(System.Double,System.Double)">
            <summary>
            Gets the gross price from clear price.
            </summary>
            <param name="clearPrice">The clear price.</param>
            <param name="taxRate">The tax rate.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.GetGrossPriceFromClearPrice(System.Decimal,System.Decimal)">
            <summary>
            Gets the gross price from clear price.
            </summary>
            <param name="clearPrice">The clear price.</param>
            <param name="taxRate">The tax rate.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.GetClearPriceFromGrossPrice(System.Decimal,System.Decimal)">
            <summary>
            Gets the clear price from gross price.
            </summary>
            <param name="soldprice">The soldprice.</param>
            <param name="taxRate">The tax rate.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.ExtractCurrencyValue(System.String)">
            <summary>
            Extracts the currency value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.FormatCurrencyValue(System.Decimal)">
            <summary>
            Format a double to currency string value
            </summary>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Mathematics.Financial.GetSalesTaxRateFromGrossPrice(System.Decimal,System.Decimal)">
            <summary>
            Gets the sales tax rate from gross price.
            </summary>
            <param name="grossPrice">The gross price.</param>
            <param name="clearPrice">The clear price.</param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.UriExtensions">
            <summary>
            Class UriExtensions
            </summary>
        </member>
        <member name="M:Toenda.Foundation.UriExtensions.Parameters(System.Uri)">
            <summary>
            Parameterses the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.UriExtensions.ParameterList(System.Uri)">
            <summary>
            Parameters the list.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Utility.StringCutPlaceholderPosition">
            <summary>
            Specifies the position of the placeholder inside the shortend string.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.StringCutPlaceholderPosition.Nothing">
            <summary>
            Do nothing.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.StringCutPlaceholderPosition.Initial">
            <summary>
            Take the placeholder at the beginning of the string.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.StringCutPlaceholderPosition.Middle">
            <summary>
            Take the placeholder in the middle of the string.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.StringCutPlaceholderPosition.Ending">
            <summary>
            Take the placeholder at the ending of the string.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Security.Cryptography.SymmetricEncryption">
            <summary>
            SymmCrypto is a wrapper of System.Security.Cryptography.SymmetricAlgorithm classes
            and simplifies the interface. It supports customized SymmetricAlgorithm as well.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Security.Cryptography.SymmetricEncryption.#ctor(Toenda.Foundation.Security.Cryptography.SymmetricEncryption.SymmProvEnum)">
            <remarks>
            Constructor for using an intrinsic .Net SymmetricAlgorithm class.
            </remarks>
        </member>
        <member name="M:Toenda.Foundation.Security.Cryptography.SymmetricEncryption.#ctor(System.Security.Cryptography.SymmetricAlgorithm)">
            <remarks>
            Constructor for using a customized SymmetricAlgorithm class.
            </remarks>
        </member>
        <member name="M:Toenda.Foundation.Security.Cryptography.SymmetricEncryption.GetLegalKey(System.String)">
            <remarks>
            Depending on the legal key size limitations of a specific CryptoService provider
            and length of the private key provided, padding the secret key with space character
            to meet the legal size of the algorithm.
            </remarks>
        </member>
        <member name="T:Toenda.Foundation.Security.Cryptography.SymmetricEncryption.SymmProvEnum">
            <remarks>
            Supported .Net intrinsic SymmetricAlgorithm classes.
            </remarks>
        </member>
        <member name="T:Toenda.Foundation.NullableExtensions">
            <summary>
            Extends the Nullable class
            </summary>
        </member>
        <member name="M:Toenda.Foundation.NullableExtensions.GetValueOrSpecific``1(System.Nullable{``0},``0)">
            <summary>
            Get the value or a specific value
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance"></param>
            <param name="specificValue"></param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.IO.Compression.CompressionFinishedEventArgs">
            <summary>
            Implements the event arguments for the calculation finished event
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.Compression.CompressionFinishedEventArgs.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.IO.Compression.CompressionFinishedEventArgs"/>
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.Compression.CompressionFinishedEventArgs.#ctor(System.Boolean,System.String,System.TimeSpan)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.IO.Compression.CompressionFinishedEventArgs"/>
            </summary>
            <param name="succeed">If the calculation was successfull, this returns true, otherwise false.</param>
            <param name="message">The message of this last step.</param>
            <param name="compressionTime">The loading time of this last step.</param>
        </member>
        <member name="P:Toenda.Foundation.IO.Compression.CompressionFinishedEventArgs.Succeed">
            <summary>
            Get or set that indicates if the calculation was successfull
            </summary>
        </member>
        <member name="P:Toenda.Foundation.IO.Compression.CompressionFinishedEventArgs.Message">
            <summary>
            Gets or sets the message
            </summary>
        </member>
        <member name="P:Toenda.Foundation.IO.Compression.CompressionFinishedEventArgs.CompressionTime">
            <summary>
            Gets or sets the complete calculation time
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Checksum.DoubleAddDouble">
            <summary>
            Implements a double-add-double checksum method
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Checksum.DoubleAddDouble.Compute(System.String,System.Boolean,System.Boolean)">
            <summary>
            Computes a checknumber on base of the double-add-double method
            </summary>
            <param name="value">A value for the double-add-double method.</param>
            <param name="eachLetterForCalculation">Use each letter for the calculation or only letter-blocks.</param>
            <param name="checksuminValueIncluded">A value that indicates if the calculation should start with a big weight from the right side.</param>
            <returns>Returns a checksum</returns>
        </member>
        <member name="M:Toenda.Foundation.Checksum.DoubleAddDouble.GetLetterNumber(System.String)">
            <summary>
            Returns a number that represents a specific letter for a double-add-double calculation
            </summary>
            <param name="letter">The letter.</param>
            <returns>Returns a number that represents a specific letter for a double-add-double calculation.</returns>
        </member>
        <member name="T:Toenda.Foundation.Checksum.DoubleAddDouble.WeightDigit">
            <summary>
            Implements a weight digit of the double-add-doubel calculation
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Checksum.DoubleAddDouble.WeightDigit.ToString">
            <summary>
            Retusns a string that represents the current object
            </summary>
            <returns>Retusns a string that represents the current object</returns>
        </member>
        <member name="P:Toenda.Foundation.Checksum.DoubleAddDouble.WeightDigit.Number">
            <summary>
            Gets or sets the number of a digit
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Checksum.DoubleAddDouble.WeightDigit.Weighting">
            <summary>
            Gets or sets the weight of a digit
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Checksum.DoubleAddDouble.WeightDigit.Product">
            <summary>
            Gets the product of the number and the weight
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Audio.ID3v1Genre.GetGenreName(System.String,System.Int32)">
            <summary>
            Gets the name of the genre.
            </summary>
            <param name="langCode">The lang code.</param>
            <param name="genreId">The genre id.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Audio.ID3v1Genre._Init(System.String)">
            <summary>
            Inits the specified lang code.
            </summary>
            <param name="langCode">The lang code.</param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Types.ISBNVersion">
            <summary>
            Specifies the version of the ISBN code.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Types.ISBNVersion.ISBN10">
            <summary>
            The ISBN code with 10 characters.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Types.ISBNVersion.ISBN13">
            <summary>
            The newer ISBN code with 13 characters.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Types.ISBN">
            <summary>
            Struct ISBN
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Types.ISBN.#ctor(System.String)">
            <summary>
            Default Ctor
            </summary>
            <param name="number"></param>
        </member>
        <member name="M:Toenda.Foundation.Types.ISBN.#ctor(System.String,System.Int32)">
            <summary>
            Default Ctor
            </summary>
            <param name="number"></param>
            <param name="publisherNumberLength">The length of the number for the publisher</param>
        </member>
        <member name="M:Toenda.Foundation.Types.ISBN.#ctor(Toenda.Foundation.Types.ISBN)">
            <summary>
            Specific Ctor
            </summary>
            <param name="isbn"></param>
        </member>
        <member name="M:Toenda.Foundation.Types.ISBN._Parse(System.String)">
            <summary>
            Parse a number
            </summary>
            <param name="rawnumber">The rawnumber.</param>
        </member>
        <member name="M:Toenda.Foundation.Types.ISBN._ConvertToNumberString(System.String)">
            <summary>
            Convert a isbn number string (optional with "-") to a number string
            </summary>
            <param name="isbn">The isbn.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Types.ISBN._GetCheckNumber">
            <summary>
            Get the ISBN check number
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Types.ISBN._GetCompleteNumber">
            <summary>
            Get the complete ISBN number
            </summary>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Types.ISBN.ToString">
            <summary>
            Returns the ISBN as string
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.Types.ISBN.Parse(System.String)">
            <summary>
            Parse a string into a ISBN
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Types.ISBN.CorrectCheckNumber">
            <summary>
            If the check number is not valid, correct it
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Types.ISBN.RawNumber">
            <summary>
            Get or set a raw ISBN number
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Types.ISBN.Version">
            <summary>
            Get or set the version of this ISBN number
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Types.ISBN.Prefix">
            <summary>
            Get or set the prefix
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Types.ISBN.CountryCode">
            <summary>
            Get or set the country code
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Types.ISBN.PublisherNumber">
            <summary>
            Get or set the publisher number
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Types.ISBN.Number">
            <summary>
            Get or set a correct ISBN number
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Types.ISBN.CheckNumber">
            <summary>
            Get or set the check number
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Types.ISBN.IsValid">
            <summary>
            Get a value that indicates if this number is a correct number
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Types.ISBN.IsValidNumber">
            <summary>
            Get a value that indicates if this number is a correct number with the correct check code.
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Types.ISBN.Value">
            <summary>
            Get a correct ISBN number from the value
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Types.ISBN.ISBN10">
            <summary>
            Get a correct ISBN 10 number from the value
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Types.ISBN.ISBN13">
            <summary>
            Get a correct ISBN 13 number from the value
            </summary>
        </member>
        <member name="P:Toenda.Foundation.Types.ISBN.EAN">
            <summary>
            Get a correct EAN number from the value
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Utility.Validator">
            <summary>
            Class Validator
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.Validator.IsOddNumbered(System.Int32)">
            <summary>
            Checks if a number is a odd number
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Validator.IsOddNumbered(System.Int64)">
            <summary>
            Checks if a number is a odd number
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Validator.IsOddNumbered(System.Int16)">
            <summary>
            Checks if a number is a odd number
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Validator.IsNaturalNumber(System.Double)">
            <summary>
            Check if a double number has number after his point
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Validator.IsNegativeNumber(System.Int16)">
            <summary>
            Check if a number is a negative number
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Validator.IsNegativeNumber(System.Int32)">
            <summary>
            Check if a number is a negative number
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Validator.IsNegativeNumber(System.Int64)">
            <summary>
            Check if a number is a negative number
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Validator.IsNegativeNumber(System.Double)">
            <summary>
            Check if a number is a negative number
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Validator.IsNegativeNumber(System.Single)">
            <summary>
            Check if a number is a negative number
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Validator.IsNegativeNumber(System.Decimal)">
            <summary>
            Check if a number is a negative number
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Validator.IsInList(System.Char[],System.Char)">
            <summary>
            Check if a char symbol is in a char array
            </summary>
            <param name="list">The char array.</param>
            <param name="symbol">The char symbol.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Validator.IsInList``1(System.Collections.Generic.List{``0},``0)">
            <summary>
            Determines whether [is in list] [the specified list].
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The list.</param>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if [is in list] [the specified list]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Validator.IsSet``1(``0)">
            <summary>
            Check if a variable is set
            </summary>
            <typeparam name="T"></typeparam>
            <param name="variable"></param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Utility.ByteComputeDirection">
            <summary>
            Specifies the byte compute direction.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.ByteComputeDirection.BytesToByteFormat">
            <summary>
            Bytes to byte format.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.ByteComputeDirection.ByteFormatToBytes">
            <summary>
            Byte format to bytes.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Utility.ByteFormat">
            <summary>
            Describes the format of the byte.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.ByteFormat.Kilobytes">
            <summary>
            Format to Kilobytes.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.ByteFormat.Megabytes">
            <summary>
            Format to Megabytes.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.ByteFormat.Gigabyte">
            <summary>
            Format to Gigabyte.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.ByteFormat.Terabyte">
            <summary>
            Format to Terabyte.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.ByteFormat.Petabyte">
            <summary>
            Format to Petabyte.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.ByteFormat.Exabyte">
            <summary>
            Format to Exabyte.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.ByteFormat.Zettabyte">
            <summary>
            Format to Zettabyte.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Utility.ByteFormat.Yottabyte">
            <summary>
            Format to Yottabyte.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Utility.Measure">
            <summary>
            Class Measure
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertDegreesToRadians(System.Double)">
            <summary>
            Convert degrees to radians
            </summary>
            <param name="degrees"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertRadiansToDegrees(System.Double)">
            <summary>
            Convert radians to degrees
            </summary>
            <param name="radians"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertCelsiusToFahrenheit(System.Double)">
            <summary>
            Convert celsius to fahrenheit
            </summary>
            <param name="celsius"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertFahrenheitToCelsius(System.Double)">
            <summary>
            Convert fahrenheit to celsius
            </summary>
            <param name="fahrenheit"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertMilesToKilometer(System.Double)">
            <summary>
            Convert miles to kilometer
            </summary>
            <param name="miles"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertKilometerToMiles(System.Double)">
            <summary>
            Convert kilometer to miles
            </summary>
            <param name="kilometer"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertYardToMeter(System.Double)">
            <summary>
            Convert yard to meter
            </summary>
            <param name="yard"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertMeterToYard(System.Double)">
            <summary>
            Convert meter to yard
            </summary>
            <param name="meter"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertFeetToCentimeter(System.Double)">
            <summary>
            Convert feet to centimeter
            </summary>
            <param name="feet"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertCentimeterToFeet(System.Double)">
            <summary>
            Convert centimeter to feet
            </summary>
            <param name="centimeter"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertInchToCentimeter(System.Double)">
            <summary>
            Convert inch to centimeter
            </summary>
            <param name="inch"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertCentimeterToInch(System.Double)">
            <summary>
            Convert centimeter to inch
            </summary>
            <param name="centimeter"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertHPToKW(System.Double)">
            <summary>
            Convert HP (horsepower) to KW (Kilowatt)
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertHPToPS(System.Double)">
            <summary>
            Convert HP (horsepower) to PS (Pferdestärke)
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertKWToHP(System.Double)">
            <summary>
            Convert KW (Kilowatt) to HP (horsepower)
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertKWToPS(System.Double)">
            <summary>
            Convert KW (Kilowatt) to PS (Pferdestärke)
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertPSToHP(System.Double)">
            <summary>
            Convert PS (Pferdestärke) to HP (horsepower)
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertPSToKW(System.Double)">
            <summary>
            Convert PS (Pferdestärke) to KW (Kilowatt)
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertBytes(System.Int64,Toenda.Foundation.Utility.ByteFormat)">
            <summary>
            Convert bytes into another format
            </summary>
            <param name="bytes"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertBytes(System.Double,Toenda.Foundation.Utility.ByteFormat,System.Int32)">
            <summary>
            Convert bytes into another format
            </summary>
            <param name="bytes"></param>
            <param name="format"></param>
            <param name="roundDigits"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertBytes(System.Double,Toenda.Foundation.Utility.ByteFormat,Toenda.Foundation.Utility.ByteComputeDirection)">
            <summary>
            Convert bytes into another format
            </summary>
            <param name="bytes"></param>
            <param name="format"></param>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.Measure.ConvertBytes(System.Double,Toenda.Foundation.Utility.ByteFormat,Toenda.Foundation.Utility.ByteComputeDirection,System.Int32)">
            <summary>
            Convert bytes into another format
            </summary>
            <param name="bytes"></param>
            <param name="format"></param>
            <param name="direction"></param>
            <param name="roundDigits"></param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Data.ReaderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Data.IDataReader"/> object.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.ReaderExtensions.GetSafeValue``1(System.Data.IDataReader,System.String)">
            <summary>
            returns a safe value in case database value is DBNull
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="reader">data reader object</param>
            <param name="name">field name</param>
            <returns>safe casted value</returns>
        </member>
        <member name="M:Toenda.Foundation.Data.ReaderExtensions.GetSafeValue``1(System.Data.IDataReader,System.String,``0)">
            <summary>
            Returns a safe default value in case database value is DBNull
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="reader">data reader object</param>
            <param name="name">field name</param>
            <param name="defaultValue">default value to return if field value is DBNull</param>
            <returns>safe casted value</returns>
        </member>
        <member name="T:Toenda.Foundation.Utility.BitReader">
            <summary>
            Summary description for BitReader.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Utility.BitReader.GetBitAtPosition(System.Byte,System.Int32)">
            <summary>
            Gets the bit at position.
            </summary>
            <param name="b">The b.</param>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.BitReader.ToBitBool(System.Byte)">
            <summary>
            Convert to a bit bool.
            </summary>
            <param name="newByte">The new byte.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.BitReader.ToBitChar(System.Byte)">
            <summary>
            Convert to a bit char.
            </summary>
            <param name="newByte">The new byte.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.BitReader.ToBitChars(System.Byte[])">
            <summary>
            Convert to a bit chars.
            </summary>
            <param name="myBytes">My bytes.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.BitReader.ToBitBools(System.Byte[])">
            <summary>
            Convert to a bit bools.
            </summary>
            <param name="myBytes">My bytes.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.BitReader.ToByteChar(System.Char[])">
            <summary>
            Convert to a byte char.
            </summary>
            <param name="myChar">My char.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Utility.BitReader.ToByteBool(System.Boolean[])">
            <summary>
            Convert to a byte bool.
            </summary>
            <param name="myBool">My bool.</param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Security.Cryptography.Crypto">
            <summary>
            SymmCrypto is a wrapper of System.Security.Cryptography.SymmetricAlgorithm classes
            and simplifies the interface. It supports customized SymmetricAlgorithm as well.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Security.Cryptography.Crypto.EncryptString(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Encrypts the string.
            </summary>
            <param name="clearText">The clear text.</param>
            <param name="Key">The key.</param>
            <param name="IV">The IV.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Security.Cryptography.Crypto.EncryptString(System.String,System.String)">
            <summary>
            Encrypts the string.
            </summary>
            <param name="clearText">The clear text.</param>
            <param name="Password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Security.Cryptography.Crypto.DecryptString(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Decrypts the string.
            </summary>
            <param name="cipherData">The cipher data.</param>
            <param name="Key">The key.</param>
            <param name="IV">The IV.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Security.Cryptography.Crypto.DecryptString(System.String,System.String)">
            <summary>
            Decrypts the string.
            </summary>
            <param name="cipherText">The cipher text.</param>
            <param name="Password">The password.</param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.PluginBase.ComponentTypeNotFoundException">
            <summary>
            Implements a ComponentTypeNotFound exception
            </summary>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.ComponentTypeNotFoundException.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.PluginBase.ComponentTypeNotFoundException"/>
            </summary>
            <param name="componentName">The name of the component</param>
            <param name="componentTypeName">The name of the type loaded from the component</param>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.ComponentTypeNotFoundException.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.PluginBase.ComponentNotFoundException"/>
            </summary>
            <param name="componentName">The name of the component</param>
            <param name="componentTypeName">The name of the type loaded from the component</param>
            <param name="message">Spezifies a own message</param>
        </member>
        <member name="M:Toenda.Foundation.PluginBase.ComponentTypeNotFoundException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.PluginBase.ComponentNotFoundException"/>
            </summary>
            <param name="componentName">The name of the component</param>
            <param name="componentTypeName">The name of the type loaded from the component</param>
            <param name="message">Spezifies a own message</param>
            <param name="innerException">The innerException is a exception contained in this exception</param>
        </member>
        <member name="P:Toenda.Foundation.PluginBase.ComponentTypeNotFoundException.ComponentName">
            <summary>
            Gets the name of the component where the type was not found
            </summary>
        </member>
        <member name="P:Toenda.Foundation.PluginBase.ComponentTypeNotFoundException.ComponentTypeName">
            <summary>
            Gets the name of the type that was not found
            </summary>
        </member>
        <member name="T:Toenda.Foundation.IO.Compression.CompressionStateEventArgs">
            <summary>
            Implements the event arguments for the calculation state event
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.Compression.CompressionStateEventArgs.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.IO.Compression.CompressionStateEventArgs"/>.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.Compression.CompressionStateEventArgs.#ctor(System.Int64,System.Int64,System.String,System.TimeSpan)">
            <summary>
            Creates a new instance of <see cref="T:Toenda.Foundation.IO.Compression.CompressionStateEventArgs"/>.
            </summary>
            <param name="compressedBytes"></param>
            <param name="fileSize"></param>
            <param name="message">The message of the current step.</param>
            <param name="compressionTime">The loading time of the current step.</param>
        </member>
        <member name="P:Toenda.Foundation.IO.Compression.CompressionStateEventArgs.CompressedBytes">
            <summary>
            Gets or sets the compressed bytes
            </summary>
        </member>
        <member name="P:Toenda.Foundation.IO.Compression.CompressionStateEventArgs.FileSize">
            <summary>
            Gets or sets the file size
            </summary>
        </member>
        <member name="P:Toenda.Foundation.IO.Compression.CompressionStateEventArgs.Message">
            <summary>
            Gets or sets the message
            </summary>
        </member>
        <member name="P:Toenda.Foundation.IO.Compression.CompressionStateEventArgs.CompressionTime">
            <summary>
            Gets or sets the complete compression time
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Audio.Mp3Info">
            <summary>
            Summary description for mp3info.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Audio.Mp3Info.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Audio.Mp3Info"/> class.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Audio.Mp3Info.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Toenda.Foundation.Audio.Mp3Info"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Toenda.Foundation.Audio.Mp3Info._Init">
            <summary>
            Inits this instance.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Audio.Mp3Info._CalculateLength">
            <summary>
            Calculates the length.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Audio.Mp3Info.ReadAll">
            <summary>
            Reads all.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Audio.Mp3Info.ReadAll(System.String)">
            <summary>
            Reads all.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Toenda.Foundation.Audio.Mp3Info.ReadID3v1">
            <summary>
            Reads the I D3V1.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Audio.Mp3Info.ReadID3v1(System.String)">
            <summary>
            Reads the I D3V1.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:Toenda.Foundation.Audio.Mp3Info.ReadID3v2">
            <summary>
            Reads the I D3V2.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Audio.Mp3Info.ReadID3v2(System.String)">
            <summary>
            Reads the I D3V2.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:Toenda.Foundation.Audio.Mp3Info.ReadMPEG">
            <summary>
            Reads the MPEG.
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Audio.Mp3Info.ReadMPEG(System.String)">
            <summary>
            Reads the MPEG.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="P:Toenda.Foundation.Audio.Mp3Info.Filename">
            <summary>
            Gets or sets the filename.
            </summary>
            <value>The filename.</value>
        </member>
        <member name="P:Toenda.Foundation.Audio.Mp3Info.FileSize">
            <summary>
            Gets or sets the size of the file.
            </summary>
            <value>The size of the file.</value>
        </member>
        <member name="P:Toenda.Foundation.Audio.Mp3Info.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="P:Toenda.Foundation.Audio.Mp3Info.ID3v1">
            <summary>
            Gets or sets the I D3V1.
            </summary>
            <value>The I D3V1.</value>
        </member>
        <member name="P:Toenda.Foundation.Audio.Mp3Info.ID3v2">
            <summary>
            Gets or sets the I D3V2.
            </summary>
            <value>The I D3V2.</value>
        </member>
        <member name="P:Toenda.Foundation.Audio.Mp3Info.Mpeg">
            <summary>
            Gets or sets the MPEG.
            </summary>
            <value>The MPEG.</value>
        </member>
        <member name="P:Toenda.Foundation.Audio.Mp3Info.HasID3v1">
            <summary>
            Gets or sets a value indicating whether this instance has I D3V1.
            </summary>
            <value>
            	<c>true</c> if this instance has I D3V1; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Toenda.Foundation.Audio.Mp3Info.HasID3v2">
            <summary>
            Gets or sets a value indicating whether this instance has I D3V2.
            </summary>
            <value>
            	<c>true</c> if this instance has I D3V2; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Toenda.Foundation.IO.DirectoryCopy">
            <summary>
            DirectoryCopy
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.DirectoryCopy.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.DirectoryCopy.GetAmountOfFiles(System.String)">
            <summary>
            Get the amount of all files from a directory (not recursivly)
            </summary>
            <param name="sourceDir">The source dir.</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.IO.DirectoryCopy.GetAmountOfFiles(System.String,System.Boolean)">
            <summary>
            Get the amount of all files recursivly from a directory
            </summary>
            <param name="sourceDir">The source dir.</param>
            <param name="recursive">if set to <c>true</c> [recursive].</param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.IO.DirectoryCopy.RecursiveCopyFiles(System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32@,System.Boolean)">
            <summary>
            Copy a complete folder with contents to another destionation
            </summary>
            <param name="sourceDir">The source path.</param>
            <param name="destDir">The new destination path.</param>
            <param name="fRecursive">A value that indicates if the directory should be copied recursively.</param>
            <param name="overWrite">A value that indicates if the directory should overwrite existend files and directories.</param>
            <param name="amount">The amount of all files (needed for the event).</param>
            <param name="index">The index.</param>
            <param name="isRootQuery">if set to <c>true</c> [is root query].</param>
        </member>
        <member name="E:Toenda.Foundation.IO.DirectoryCopy.FileCopyResponse">
            <summary>
            Occurs when [file copy response].
            </summary>
        </member>
        <member name="E:Toenda.Foundation.IO.DirectoryCopy.FileCopyFinish">
            <summary>
            Occurs when [file copy finish].
            </summary>
        </member>
        <member name="T:Toenda.Foundation.IO.DirectoryCopy.FileCopyEventHandler">
            <summary>
            Initializes a new instance of the FileCopyEventHandler class.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.IO.DirectoryCopy.FileCopyFinishEventhandler">
            <summary>
            Initializes a new instance of the FileCopyFinishEventhandler class.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.IO.LogSystem">
            <summary>
            Class LogSystem
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.LogSystem.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.LogSystem.OpenFile(System.String,System.Boolean)">
            <summary>
            Open a filestream
            </summary>
            <param name="filename">The name including path of the file</param>
            <param name="append">True if you want to append to the file</param>
        </member>
        <member name="M:Toenda.Foundation.IO.LogSystem.CloseFile">
            <summary>
            Close the open file
            </summary>
        </member>
        <member name="M:Toenda.Foundation.IO.LogSystem.WriteToFile(System.String)">
            <summary>
            Write some text to a file (only with manually open and close)
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Toenda.Foundation.IO.LogSystem.WriteToFile(System.DateTime,System.String)">
            <summary>
            Write some text to a file (only with manually open and close)
            </summary>
            <param name="timestamp"></param>
            <param name="text"></param>
        </member>
        <member name="M:Toenda.Foundation.IO.LogSystem.WriteToFile(System.String,System.String)">
            <summary>
            Write some text to a file
            </summary>
            <param name="filename"></param>
            <param name="text"></param>
        </member>
        <member name="M:Toenda.Foundation.IO.LogSystem.ReadFromFile(System.String)">
            <summary>
            Read some text from a file
            </summary>
            <param name="filename"></param>
        </member>
        <member name="T:Toenda.Foundation.Globalization.WorkingLoadResult">
            <summary>
            Specifies the working load result.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.WorkingLoadResult.Percent">
            <summary>
            Get the result in percent.
            </summary>
        </member>
        <member name="F:Toenda.Foundation.Globalization.WorkingLoadResult.DayAsNumber">
            <summary>
            Get the result as day as number.
            </summary>
        </member>
        <member name="T:Toenda.Foundation.Globalization.Holiday.HolidayCalendar">
            <summary>
            Implements a holiday calendar
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalendar.IsWeekend(System.DateTime)">
            <summary>
            Checks if a date is a weekend date, calles the calender class.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalendar.IsHoliday(System.DateTime)">
            <summary>
            Checks if a day is a holiday
            </summary>
            <param name="date"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalendar.IsHoliday(System.DateTime,Toenda.Foundation.Globalization.CountryCode)">
            <summary>
            Checks if a day is a holiday
            </summary>
            <param name="date"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Toenda.Foundation.Globalization.Holiday.HolidayCalendar.IsHoliday(System.DateTime,System.Collections.Generic.List{Toenda.Foundation.Globalization.CountryCode})">
            <summary>
            Checks if a day is a holiday
            </summary>
            <param name="date"></param>
            <param name="codeList"></param>
            <returns></returns>
        </member>
        <member name="T:Toenda.Foundation.Data.XmlAttributeTemplate">
            <summary>
            Class XmlAttributeTemplate
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlAttributeTemplate.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Toenda.Foundation.Data.XmlAttributeTemplate.#ctor(System.String,System.String)">
            <summary>
            Specific constructor
            </summary>
            <param name="name">The attribute.</param>
            <param name="value">The attribute value.</param>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlAttributeTemplate.Name">
            <summary>
            Get or set the attribute
            </summary>
            <value>The attribute.</value>
        </member>
        <member name="P:Toenda.Foundation.Data.XmlAttributeTemplate.Value">
            <summary>
            Get or set the attribute value
            </summary>
            <value>The attribute value.</value>
        </member>
    </members>
</doc>
